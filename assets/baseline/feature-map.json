{
  "tokens": {
    "fetch.init_signal_parameter": "abortable-fetch",
    "fetch": "abortable-fetch",
    "init_signal_parameter": "abortable-fetch",
    "new init_signal_parameter": "abortable-fetch",
    "Request.signal": "abortable-fetch",
    "request.signal": "abortable-fetch",
    "Request": "abortable-fetch",
    "signal": "abortable-fetch",
    "new signal": "abortable-fetch",
    "AbortController": "aborting",
    "abortcontroller": "aborting",
    "AbortController.AbortController": "aborting",
    "abortcontroller.abortcontroller": "aborting",
    "new AbortController": "aborting",
    "AbortController.abort": "aborting",
    "abortcontroller.abort": "aborting",
    "abort": "aborting",
    "new abort": "aborting",
    "AbortController.signal": "aborting",
    "abortcontroller.signal": "aborting",
    "AbortSignal": "aborting",
    "abortsignal": "aborting",
    "AbortSignal.abort_event": "aborting",
    "abortsignal.abort_event": "aborting",
    "abort_event": "aborting",
    "new abort_event": "aborting",
    "AbortSignal.aborted": "aborting",
    "abortsignal.aborted": "aborting",
    "aborted": "aborting",
    "new aborted": "aborting",
    "AbortSignal.any_static": "abortsignal-any",
    "abortsignal.any_static": "abortsignal-any",
    "any_static": "abortsignal-any",
    "new any_static": "abortsignal-any",
    "abs": "abs-sign",
    "sign": "abs-sign",
    "accent-color": "accent-color",
    "accent": "accent-color",
    "accent-color.auto": "accent-color",
    "CSSPositionTryDescriptors": "anchor-positioning",
    "csspositiontrydescriptors": "anchor-positioning",
    "CSSPositionTryDescriptors.align-self": "anchor-positioning",
    "csspositiontrydescriptors.align-self": "anchor-positioning",
    "align-self": "anchor-positioning",
    "new align-self": "anchor-positioning",
    "CSSPositionTryDescriptors.alignSelf": "anchor-positioning",
    "csspositiontrydescriptors.alignself": "anchor-positioning",
    "alignSelf": "anchor-positioning",
    "new alignSelf": "anchor-positioning",
    "CSSPositionTryDescriptors.block-size": "anchor-positioning",
    "csspositiontrydescriptors.block-size": "anchor-positioning",
    "block-size": "anchor-positioning",
    "new block-size": "anchor-positioning",
    "CSSPositionTryDescriptors.blockSize": "anchor-positioning",
    "csspositiontrydescriptors.blocksize": "anchor-positioning",
    "blockSize": "anchor-positioning",
    "new blockSize": "anchor-positioning",
    "CSSPositionTryDescriptors.bottom": "anchor-positioning",
    "csspositiontrydescriptors.bottom": "anchor-positioning",
    "bottom": "anchor-positioning",
    "new bottom": "anchor-positioning",
    "CSSPositionTryDescriptors.height": "anchor-positioning",
    "csspositiontrydescriptors.height": "anchor-positioning",
    "height": "anchor-positioning",
    "new height": "anchor-positioning",
    "CSSPositionTryDescriptors.inline-size": "anchor-positioning",
    "csspositiontrydescriptors.inline-size": "anchor-positioning",
    "inline-size": "anchor-positioning",
    "new inline-size": "anchor-positioning",
    "CSSPositionTryDescriptors.inlineSize": "anchor-positioning",
    "csspositiontrydescriptors.inlinesize": "anchor-positioning",
    "inlineSize": "anchor-positioning",
    "new inlineSize": "anchor-positioning",
    "CSSPositionTryDescriptors.inset": "anchor-positioning",
    "csspositiontrydescriptors.inset": "anchor-positioning",
    "inset": "anchor-positioning",
    "new inset": "anchor-positioning",
    "CSSPositionTryDescriptors.inset-area": "anchor-positioning",
    "csspositiontrydescriptors.inset-area": "anchor-positioning",
    "inset-area": "anchor-positioning",
    "new inset-area": "anchor-positioning",
    "CSSPositionTryDescriptors.inset-block": "anchor-positioning",
    "csspositiontrydescriptors.inset-block": "anchor-positioning",
    "inset-block": "anchor-positioning",
    "new inset-block": "anchor-positioning",
    "CSSPositionTryDescriptors.inset-block-end": "anchor-positioning",
    "csspositiontrydescriptors.inset-block-end": "anchor-positioning",
    "inset-block-end": "anchor-positioning",
    "new inset-block-end": "anchor-positioning",
    "CSSPositionTryDescriptors.inset-block-start": "anchor-positioning",
    "csspositiontrydescriptors.inset-block-start": "anchor-positioning",
    "inset-block-start": "anchor-positioning",
    "new inset-block-start": "anchor-positioning",
    "CSSPositionTryDescriptors.inset-inline": "anchor-positioning",
    "csspositiontrydescriptors.inset-inline": "anchor-positioning",
    "inset-inline": "anchor-positioning",
    "new inset-inline": "anchor-positioning",
    "CSSPositionTryDescriptors.inset-inline-end": "anchor-positioning",
    "csspositiontrydescriptors.inset-inline-end": "anchor-positioning",
    "inset-inline-end": "anchor-positioning",
    "new inset-inline-end": "anchor-positioning",
    "CSSPositionTryDescriptors.inset-inline-start": "anchor-positioning",
    "csspositiontrydescriptors.inset-inline-start": "anchor-positioning",
    "inset-inline-start": "anchor-positioning",
    "new inset-inline-start": "anchor-positioning",
    "CSSPositionTryDescriptors.insetArea": "anchor-positioning",
    "csspositiontrydescriptors.insetarea": "anchor-positioning",
    "insetArea": "anchor-positioning",
    "new insetArea": "anchor-positioning",
    "CSSPositionTryDescriptors.insetBlock": "anchor-positioning",
    "csspositiontrydescriptors.insetblock": "anchor-positioning",
    "insetBlock": "anchor-positioning",
    "new insetBlock": "anchor-positioning",
    "CSSPositionTryDescriptors.insetBlockEnd": "anchor-positioning",
    "csspositiontrydescriptors.insetblockend": "anchor-positioning",
    "insetBlockEnd": "anchor-positioning",
    "new insetBlockEnd": "anchor-positioning",
    "CSSPositionTryDescriptors.insetBlockStart": "anchor-positioning",
    "csspositiontrydescriptors.insetblockstart": "anchor-positioning",
    "insetBlockStart": "anchor-positioning",
    "new insetBlockStart": "anchor-positioning",
    "CSSPositionTryDescriptors.insetInline": "anchor-positioning",
    "csspositiontrydescriptors.insetinline": "anchor-positioning",
    "insetInline": "anchor-positioning",
    "new insetInline": "anchor-positioning",
    "CSSPositionTryDescriptors.insetInlineEnd": "anchor-positioning",
    "csspositiontrydescriptors.insetinlineend": "anchor-positioning",
    "insetInlineEnd": "anchor-positioning",
    "new insetInlineEnd": "anchor-positioning",
    "CSSPositionTryDescriptors.insetInlineStart": "anchor-positioning",
    "csspositiontrydescriptors.insetinlinestart": "anchor-positioning",
    "insetInlineStart": "anchor-positioning",
    "new insetInlineStart": "anchor-positioning",
    "CSSPositionTryDescriptors.justify-self": "anchor-positioning",
    "csspositiontrydescriptors.justify-self": "anchor-positioning",
    "justify-self": "anchor-positioning",
    "new justify-self": "anchor-positioning",
    "CSSPositionTryDescriptors.justifySelf": "anchor-positioning",
    "csspositiontrydescriptors.justifyself": "anchor-positioning",
    "justifySelf": "anchor-positioning",
    "new justifySelf": "anchor-positioning",
    "CSSPositionTryDescriptors.left": "anchor-positioning",
    "csspositiontrydescriptors.left": "anchor-positioning",
    "left": "anchor-positioning",
    "new left": "anchor-positioning",
    "CSSPositionTryDescriptors.margin": "anchor-positioning",
    "csspositiontrydescriptors.margin": "anchor-positioning",
    "margin": "anchor-positioning",
    "new margin": "anchor-positioning",
    "CSSPositionTryDescriptors.margin-block": "anchor-positioning",
    "csspositiontrydescriptors.margin-block": "anchor-positioning",
    "margin-block": "anchor-positioning",
    "new margin-block": "anchor-positioning",
    "CSSPositionTryDescriptors.margin-block-end": "anchor-positioning",
    "csspositiontrydescriptors.margin-block-end": "anchor-positioning",
    "margin-block-end": "anchor-positioning",
    "new margin-block-end": "anchor-positioning",
    "CSSPositionTryDescriptors.margin-block-start": "anchor-positioning",
    "csspositiontrydescriptors.margin-block-start": "anchor-positioning",
    "margin-block-start": "anchor-positioning",
    "new margin-block-start": "anchor-positioning",
    "CSSPositionTryDescriptors.margin-bottom": "anchor-positioning",
    "csspositiontrydescriptors.margin-bottom": "anchor-positioning",
    "margin-bottom": "anchor-positioning",
    "new margin-bottom": "anchor-positioning",
    "CSSPositionTryDescriptors.margin-inline": "anchor-positioning",
    "csspositiontrydescriptors.margin-inline": "anchor-positioning",
    "margin-inline": "anchor-positioning",
    "new margin-inline": "anchor-positioning",
    "CSSPositionTryDescriptors.margin-inline-end": "anchor-positioning",
    "csspositiontrydescriptors.margin-inline-end": "anchor-positioning",
    "margin-inline-end": "anchor-positioning",
    "new margin-inline-end": "anchor-positioning",
    "CSSPositionTryDescriptors.margin-inline-start": "anchor-positioning",
    "csspositiontrydescriptors.margin-inline-start": "anchor-positioning",
    "margin-inline-start": "anchor-positioning",
    "new margin-inline-start": "anchor-positioning",
    "CSSPositionTryDescriptors.margin-left": "anchor-positioning",
    "csspositiontrydescriptors.margin-left": "anchor-positioning",
    "margin-left": "anchor-positioning",
    "new margin-left": "anchor-positioning",
    "CSSPositionTryDescriptors.margin-right": "anchor-positioning",
    "csspositiontrydescriptors.margin-right": "anchor-positioning",
    "margin-right": "anchor-positioning",
    "new margin-right": "anchor-positioning",
    "CSSPositionTryDescriptors.margin-top": "anchor-positioning",
    "csspositiontrydescriptors.margin-top": "anchor-positioning",
    "margin-top": "anchor-positioning",
    "new margin-top": "anchor-positioning",
    "CSSPositionTryDescriptors.marginBlock": "anchor-positioning",
    "csspositiontrydescriptors.marginblock": "anchor-positioning",
    "marginBlock": "anchor-positioning",
    "new marginBlock": "anchor-positioning",
    "CSSPositionTryDescriptors.marginBlockEnd": "anchor-positioning",
    "csspositiontrydescriptors.marginblockend": "anchor-positioning",
    "marginBlockEnd": "anchor-positioning",
    "new marginBlockEnd": "anchor-positioning",
    "CSSPositionTryDescriptors.marginBlockStart": "anchor-positioning",
    "csspositiontrydescriptors.marginblockstart": "anchor-positioning",
    "marginBlockStart": "anchor-positioning",
    "new marginBlockStart": "anchor-positioning",
    "CSSPositionTryDescriptors.marginBottom": "anchor-positioning",
    "csspositiontrydescriptors.marginbottom": "anchor-positioning",
    "marginBottom": "anchor-positioning",
    "new marginBottom": "anchor-positioning",
    "CSSPositionTryDescriptors.marginInline": "anchor-positioning",
    "csspositiontrydescriptors.margininline": "anchor-positioning",
    "marginInline": "anchor-positioning",
    "new marginInline": "anchor-positioning",
    "CSSPositionTryDescriptors.marginInlineEnd": "anchor-positioning",
    "csspositiontrydescriptors.margininlineend": "anchor-positioning",
    "marginInlineEnd": "anchor-positioning",
    "new marginInlineEnd": "anchor-positioning",
    "CSSPositionTryDescriptors.marginInlineStart": "anchor-positioning",
    "csspositiontrydescriptors.margininlinestart": "anchor-positioning",
    "marginInlineStart": "anchor-positioning",
    "new marginInlineStart": "anchor-positioning",
    "CSSPositionTryDescriptors.marginLeft": "anchor-positioning",
    "csspositiontrydescriptors.marginleft": "anchor-positioning",
    "marginLeft": "anchor-positioning",
    "new marginLeft": "anchor-positioning",
    "CSSPositionTryDescriptors.marginRight": "anchor-positioning",
    "csspositiontrydescriptors.marginright": "anchor-positioning",
    "marginRight": "anchor-positioning",
    "new marginRight": "anchor-positioning",
    "CSSPositionTryDescriptors.marginTop": "anchor-positioning",
    "csspositiontrydescriptors.margintop": "anchor-positioning",
    "marginTop": "anchor-positioning",
    "new marginTop": "anchor-positioning",
    "CSSPositionTryDescriptors.max-block-size": "anchor-positioning",
    "csspositiontrydescriptors.max-block-size": "anchor-positioning",
    "max-block-size": "anchor-positioning",
    "new max-block-size": "anchor-positioning",
    "CSSPositionTryDescriptors.max-height": "anchor-positioning",
    "csspositiontrydescriptors.max-height": "anchor-positioning",
    "max-height": "anchor-positioning",
    "new max-height": "anchor-positioning",
    "CSSPositionTryDescriptors.max-inline-size": "anchor-positioning",
    "csspositiontrydescriptors.max-inline-size": "anchor-positioning",
    "max-inline-size": "anchor-positioning",
    "new max-inline-size": "anchor-positioning",
    "CSSPositionTryDescriptors.max-width": "anchor-positioning",
    "csspositiontrydescriptors.max-width": "anchor-positioning",
    "max-width": "anchor-positioning",
    "new max-width": "anchor-positioning",
    "CSSPositionTryDescriptors.maxBlockSize": "anchor-positioning",
    "csspositiontrydescriptors.maxblocksize": "anchor-positioning",
    "maxBlockSize": "anchor-positioning",
    "new maxBlockSize": "anchor-positioning",
    "CSSPositionTryDescriptors.maxHeight": "anchor-positioning",
    "csspositiontrydescriptors.maxheight": "anchor-positioning",
    "maxHeight": "anchor-positioning",
    "new maxHeight": "anchor-positioning",
    "CSSPositionTryDescriptors.maxInlineSize": "anchor-positioning",
    "csspositiontrydescriptors.maxinlinesize": "anchor-positioning",
    "maxInlineSize": "anchor-positioning",
    "new maxInlineSize": "anchor-positioning",
    "CSSPositionTryDescriptors.maxWidth": "anchor-positioning",
    "csspositiontrydescriptors.maxwidth": "anchor-positioning",
    "maxWidth": "anchor-positioning",
    "new maxWidth": "anchor-positioning",
    "CSSPositionTryDescriptors.min-block-size": "anchor-positioning",
    "csspositiontrydescriptors.min-block-size": "anchor-positioning",
    "min-block-size": "anchor-positioning",
    "new min-block-size": "anchor-positioning",
    "CSSPositionTryDescriptors.min-height": "anchor-positioning",
    "csspositiontrydescriptors.min-height": "anchor-positioning",
    "min-height": "anchor-positioning",
    "new min-height": "anchor-positioning",
    "CSSPositionTryDescriptors.min-inline-size": "anchor-positioning",
    "csspositiontrydescriptors.min-inline-size": "anchor-positioning",
    "min-inline-size": "anchor-positioning",
    "new min-inline-size": "anchor-positioning",
    "CSSPositionTryDescriptors.min-width": "anchor-positioning",
    "csspositiontrydescriptors.min-width": "anchor-positioning",
    "min-width": "anchor-positioning",
    "new min-width": "anchor-positioning",
    "CSSPositionTryDescriptors.minBlockSize": "anchor-positioning",
    "csspositiontrydescriptors.minblocksize": "anchor-positioning",
    "minBlockSize": "anchor-positioning",
    "new minBlockSize": "anchor-positioning",
    "CSSPositionTryDescriptors.minHeight": "anchor-positioning",
    "csspositiontrydescriptors.minheight": "anchor-positioning",
    "minHeight": "anchor-positioning",
    "new minHeight": "anchor-positioning",
    "CSSPositionTryDescriptors.minInlineSize": "anchor-positioning",
    "csspositiontrydescriptors.mininlinesize": "anchor-positioning",
    "minInlineSize": "anchor-positioning",
    "new minInlineSize": "anchor-positioning",
    "CSSPositionTryDescriptors.minWidth": "anchor-positioning",
    "csspositiontrydescriptors.minwidth": "anchor-positioning",
    "minWidth": "anchor-positioning",
    "new minWidth": "anchor-positioning",
    "CSSPositionTryDescriptors.place-self": "anchor-positioning",
    "csspositiontrydescriptors.place-self": "anchor-positioning",
    "place-self": "anchor-positioning",
    "new place-self": "anchor-positioning",
    "CSSPositionTryDescriptors.placeSelf": "anchor-positioning",
    "csspositiontrydescriptors.placeself": "anchor-positioning",
    "placeSelf": "anchor-positioning",
    "new placeSelf": "anchor-positioning",
    "CSSPositionTryDescriptors.position-anchor": "anchor-positioning",
    "csspositiontrydescriptors.position-anchor": "anchor-positioning",
    "position-anchor": "anchor-positioning",
    "new position-anchor": "anchor-positioning",
    "CSSPositionTryDescriptors.positionAnchor": "anchor-positioning",
    "csspositiontrydescriptors.positionanchor": "anchor-positioning",
    "positionAnchor": "anchor-positioning",
    "new positionAnchor": "anchor-positioning",
    "CSSPositionTryDescriptors.right": "anchor-positioning",
    "csspositiontrydescriptors.right": "anchor-positioning",
    "right": "anchor-positioning",
    "new right": "anchor-positioning",
    "CSSPositionTryDescriptors.top": "anchor-positioning",
    "csspositiontrydescriptors.top": "anchor-positioning",
    "top": "anchor-positioning",
    "new top": "anchor-positioning",
    "CSSPositionTryDescriptors.width": "anchor-positioning",
    "csspositiontrydescriptors.width": "anchor-positioning",
    "width": "anchor-positioning",
    "new width": "anchor-positioning",
    "CSSPositionTryRule": "anchor-positioning",
    "csspositiontryrule": "anchor-positioning",
    "CSSPositionTryRule.name": "anchor-positioning",
    "csspositiontryrule.name": "anchor-positioning",
    "name": "anchor-positioning",
    "new name": "anchor-positioning",
    "CSSPositionTryRule.style": "anchor-positioning",
    "csspositiontryrule.style": "anchor-positioning",
    "style": "anchor-positioning",
    "new style": "anchor-positioning",
    "@position-try": "anchor-positioning",
    "align-items.anchor-center": "anchor-positioning",
    "align": "anchor-positioning",
    "align-items.anchor": "anchor-positioning",
    "align-self.anchor-center": "anchor-positioning",
    "align-self.anchor": "anchor-positioning",
    "anchor-name": "anchor-positioning",
    "anchor": "anchor-positioning",
    "anchor-name.none": "anchor-positioning",
    "block-size.anchor-size": "anchor-positioning",
    "block": "anchor-positioning",
    "block-size.anchor": "anchor-positioning",
    "bottom.anchor": "anchor-positioning",
    "height.anchor-size": "anchor-positioning",
    "height.anchor": "anchor-positioning",
    "inline-size.anchor-size": "anchor-positioning",
    "inline": "anchor-positioning",
    "inline-size.anchor": "anchor-positioning",
    "inset.anchor": "anchor-positioning",
    "inset-area.block-end": "anchor-positioning",
    "inset-area.block": "anchor-positioning",
    "inset-area.block-start": "anchor-positioning",
    "inset-area.bottom": "anchor-positioning",
    "inset-area.center": "anchor-positioning",
    "inset-area.end": "anchor-positioning",
    "inset-area.inline-end": "anchor-positioning",
    "inset-area.inline": "anchor-positioning",
    "inset-area.inline-start": "anchor-positioning",
    "inset-area.left": "anchor-positioning",
    "inset-area.none": "anchor-positioning",
    "inset-area.right": "anchor-positioning",
    "inset-area.self-end": "anchor-positioning",
    "inset-area.self": "anchor-positioning",
    "inset-area.self-start": "anchor-positioning",
    "inset-area.span-all": "anchor-positioning",
    "inset-area.span": "anchor-positioning",
    "inset-area.span-block-end": "anchor-positioning",
    "inset-area.span-block": "anchor-positioning",
    "inset-area.span-block-start": "anchor-positioning",
    "inset-area.span-bottom": "anchor-positioning",
    "inset-area.span-end": "anchor-positioning",
    "inset-area.span-inline-end": "anchor-positioning",
    "inset-area.span-inline": "anchor-positioning",
    "inset-area.span-inline-start": "anchor-positioning",
    "inset-area.span-start": "anchor-positioning",
    "inset-area.span-top": "anchor-positioning",
    "inset-area.span-x-end": "anchor-positioning",
    "inset-area.span-x": "anchor-positioning",
    "inset-area.span-x-start": "anchor-positioning",
    "inset-area.span-y-end": "anchor-positioning",
    "inset-area.span-y": "anchor-positioning",
    "inset-area.span-y-start": "anchor-positioning",
    "inset-area.start": "anchor-positioning",
    "inset-area.top": "anchor-positioning",
    "inset-area.x-end": "anchor-positioning",
    "inset-area.x": "anchor-positioning",
    "inset-area.x-self-end": "anchor-positioning",
    "inset-area.x-self": "anchor-positioning",
    "inset-area.x-self-start": "anchor-positioning",
    "inset-area.x-start": "anchor-positioning",
    "inset-area.y-end": "anchor-positioning",
    "inset-area.y": "anchor-positioning",
    "inset-area.y-self-end": "anchor-positioning",
    "inset-area.y-self": "anchor-positioning",
    "inset-area.y-self-start": "anchor-positioning",
    "inset-area.y-start": "anchor-positioning",
    "inset-block.anchor": "anchor-positioning",
    "inset-block-end.anchor": "anchor-positioning",
    "inset-block-start.anchor": "anchor-positioning",
    "inset-inline.anchor": "anchor-positioning",
    "inset-inline-end.anchor": "anchor-positioning",
    "inset-inline-start.anchor": "anchor-positioning",
    "justify-items.anchor-center": "anchor-positioning",
    "justify": "anchor-positioning",
    "justify-items.anchor": "anchor-positioning",
    "justify-self.anchor-center": "anchor-positioning",
    "justify-self.anchor": "anchor-positioning",
    "left.anchor": "anchor-positioning",
    "max-block-size.anchor-size": "anchor-positioning",
    "max": "anchor-positioning",
    "max-block": "anchor-positioning",
    "max-block-size.anchor": "anchor-positioning",
    "max-height.anchor-size": "anchor-positioning",
    "max-height.anchor": "anchor-positioning",
    "max-inline-size.anchor-size": "anchor-positioning",
    "max-inline": "anchor-positioning",
    "max-inline-size.anchor": "anchor-positioning",
    "max-width.anchor-size": "anchor-positioning",
    "max-width.anchor": "anchor-positioning",
    "min-block-size.anchor-size": "anchor-positioning",
    "min": "anchor-positioning",
    "min-block": "anchor-positioning",
    "min-block-size.anchor": "anchor-positioning",
    "min-height.anchor-size": "anchor-positioning",
    "min-height.anchor": "anchor-positioning",
    "min-inline-size.anchor-size": "anchor-positioning",
    "min-inline": "anchor-positioning",
    "min-inline-size.anchor": "anchor-positioning",
    "min-width.anchor-size": "anchor-positioning",
    "min-width.anchor": "anchor-positioning",
    "place-items.anchor-center": "anchor-positioning",
    "place": "anchor-positioning",
    "place-items.anchor": "anchor-positioning",
    "place-self.anchor-center": "anchor-positioning",
    "place-self.anchor": "anchor-positioning",
    "position": "anchor-positioning",
    "position-try": "anchor-positioning",
    "position-try-options": "anchor-positioning",
    "position-try-options.flip-block": "anchor-positioning",
    "position-try-options.flip": "anchor-positioning",
    "position-try-options.flip-inline": "anchor-positioning",
    "position-try-options.flip-start": "anchor-positioning",
    "position-try-options.inset-area": "anchor-positioning",
    "position-try-options.inset": "anchor-positioning",
    "position-try-options.none": "anchor-positioning",
    "position-try-order": "anchor-positioning",
    "position-try-order.most-block-size": "anchor-positioning",
    "position-try-order.most": "anchor-positioning",
    "position-try-order.most-block": "anchor-positioning",
    "position-try-order.most-height": "anchor-positioning",
    "position-try-order.most-inline-size": "anchor-positioning",
    "position-try-order.most-inline": "anchor-positioning",
    "position-try-order.most-width": "anchor-positioning",
    "position-try-order.normal": "anchor-positioning",
    "position-visibility": "anchor-positioning",
    "position-visibility.always": "anchor-positioning",
    "position-visibility.anchors-visible": "anchor-positioning",
    "position-visibility.anchors": "anchor-positioning",
    "position-visibility.no-overflow": "anchor-positioning",
    "position-visibility.no": "anchor-positioning",
    "right.anchor": "anchor-positioning",
    "top.anchor": "anchor-positioning",
    "width.anchor-size": "anchor-positioning",
    "width.anchor": "anchor-positioning",
    "anchor-size": "anchor-positioning",
    "animation-composition": "animation-composition",
    "animation": "animation-composition",
    "appearance": "appearance",
    "appearance.auto": "appearance",
    "appearance.button": "appearance",
    "appearance.checkbox": "appearance",
    "appearance.listbox": "appearance",
    "appearance.menulist": "appearance",
    "appearance.menulist-button": "appearance",
    "appearance.meter": "appearance",
    "appearance.none": "appearance",
    "appearance.progress-bar": "appearance",
    "appearance.progress": "appearance",
    "appearance.radio": "appearance",
    "appearance.searchfield": "appearance",
    "appearance.textarea": "appearance",
    "appearance.textfield": "appearance",
    "Element.ariaAtomic": "aria-attribute-reflection",
    "element.ariaatomic": "aria-attribute-reflection",
    "Element": "aria-attribute-reflection",
    "ariaAtomic": "aria-attribute-reflection",
    "new ariaAtomic": "aria-attribute-reflection",
    "Element.ariaAutoComplete": "aria-attribute-reflection",
    "element.ariaautocomplete": "aria-attribute-reflection",
    "ariaAutoComplete": "aria-attribute-reflection",
    "new ariaAutoComplete": "aria-attribute-reflection",
    "Element.ariaBusy": "aria-attribute-reflection",
    "element.ariabusy": "aria-attribute-reflection",
    "ariaBusy": "aria-attribute-reflection",
    "new ariaBusy": "aria-attribute-reflection",
    "Element.ariaChecked": "aria-attribute-reflection",
    "element.ariachecked": "aria-attribute-reflection",
    "ariaChecked": "aria-attribute-reflection",
    "new ariaChecked": "aria-attribute-reflection",
    "Element.ariaColCount": "aria-attribute-reflection",
    "element.ariacolcount": "aria-attribute-reflection",
    "ariaColCount": "aria-attribute-reflection",
    "new ariaColCount": "aria-attribute-reflection",
    "Element.ariaColIndex": "aria-attribute-reflection",
    "element.ariacolindex": "aria-attribute-reflection",
    "ariaColIndex": "aria-attribute-reflection",
    "new ariaColIndex": "aria-attribute-reflection",
    "Element.ariaColSpan": "aria-attribute-reflection",
    "element.ariacolspan": "aria-attribute-reflection",
    "ariaColSpan": "aria-attribute-reflection",
    "new ariaColSpan": "aria-attribute-reflection",
    "Element.ariaCurrent": "aria-attribute-reflection",
    "element.ariacurrent": "aria-attribute-reflection",
    "ariaCurrent": "aria-attribute-reflection",
    "new ariaCurrent": "aria-attribute-reflection",
    "Element.ariaDisabled": "aria-attribute-reflection",
    "element.ariadisabled": "aria-attribute-reflection",
    "ariaDisabled": "aria-attribute-reflection",
    "new ariaDisabled": "aria-attribute-reflection",
    "Element.ariaExpanded": "aria-attribute-reflection",
    "element.ariaexpanded": "aria-attribute-reflection",
    "ariaExpanded": "aria-attribute-reflection",
    "new ariaExpanded": "aria-attribute-reflection",
    "Element.ariaHasPopup": "aria-attribute-reflection",
    "element.ariahaspopup": "aria-attribute-reflection",
    "ariaHasPopup": "aria-attribute-reflection",
    "new ariaHasPopup": "aria-attribute-reflection",
    "Element.ariaHidden": "aria-attribute-reflection",
    "element.ariahidden": "aria-attribute-reflection",
    "ariaHidden": "aria-attribute-reflection",
    "new ariaHidden": "aria-attribute-reflection",
    "Element.ariaInvalid": "aria-attribute-reflection",
    "element.ariainvalid": "aria-attribute-reflection",
    "ariaInvalid": "aria-attribute-reflection",
    "new ariaInvalid": "aria-attribute-reflection",
    "Element.ariaKeyShortcuts": "aria-attribute-reflection",
    "element.ariakeyshortcuts": "aria-attribute-reflection",
    "ariaKeyShortcuts": "aria-attribute-reflection",
    "new ariaKeyShortcuts": "aria-attribute-reflection",
    "Element.ariaLabel": "aria-attribute-reflection",
    "element.arialabel": "aria-attribute-reflection",
    "ariaLabel": "aria-attribute-reflection",
    "new ariaLabel": "aria-attribute-reflection",
    "Element.ariaLevel": "aria-attribute-reflection",
    "element.arialevel": "aria-attribute-reflection",
    "ariaLevel": "aria-attribute-reflection",
    "new ariaLevel": "aria-attribute-reflection",
    "Element.ariaLive": "aria-attribute-reflection",
    "element.arialive": "aria-attribute-reflection",
    "ariaLive": "aria-attribute-reflection",
    "new ariaLive": "aria-attribute-reflection",
    "Element.ariaModal": "aria-attribute-reflection",
    "element.ariamodal": "aria-attribute-reflection",
    "ariaModal": "aria-attribute-reflection",
    "new ariaModal": "aria-attribute-reflection",
    "Element.ariaMultiLine": "aria-attribute-reflection",
    "element.ariamultiline": "aria-attribute-reflection",
    "ariaMultiLine": "aria-attribute-reflection",
    "new ariaMultiLine": "aria-attribute-reflection",
    "Element.ariaMultiSelectable": "aria-attribute-reflection",
    "element.ariamultiselectable": "aria-attribute-reflection",
    "ariaMultiSelectable": "aria-attribute-reflection",
    "new ariaMultiSelectable": "aria-attribute-reflection",
    "Element.ariaOrientation": "aria-attribute-reflection",
    "element.ariaorientation": "aria-attribute-reflection",
    "ariaOrientation": "aria-attribute-reflection",
    "new ariaOrientation": "aria-attribute-reflection",
    "Element.ariaPlaceholder": "aria-attribute-reflection",
    "element.ariaplaceholder": "aria-attribute-reflection",
    "ariaPlaceholder": "aria-attribute-reflection",
    "new ariaPlaceholder": "aria-attribute-reflection",
    "Element.ariaPosInSet": "aria-attribute-reflection",
    "element.ariaposinset": "aria-attribute-reflection",
    "ariaPosInSet": "aria-attribute-reflection",
    "new ariaPosInSet": "aria-attribute-reflection",
    "Element.ariaPressed": "aria-attribute-reflection",
    "element.ariapressed": "aria-attribute-reflection",
    "ariaPressed": "aria-attribute-reflection",
    "new ariaPressed": "aria-attribute-reflection",
    "Element.ariaReadOnly": "aria-attribute-reflection",
    "element.ariareadonly": "aria-attribute-reflection",
    "ariaReadOnly": "aria-attribute-reflection",
    "new ariaReadOnly": "aria-attribute-reflection",
    "Element.ariaRelevant": "aria-attribute-reflection",
    "element.ariarelevant": "aria-attribute-reflection",
    "ariaRelevant": "aria-attribute-reflection",
    "new ariaRelevant": "aria-attribute-reflection",
    "Element.ariaRequired": "aria-attribute-reflection",
    "element.ariarequired": "aria-attribute-reflection",
    "ariaRequired": "aria-attribute-reflection",
    "new ariaRequired": "aria-attribute-reflection",
    "Element.ariaRoleDescription": "aria-attribute-reflection",
    "element.ariaroledescription": "aria-attribute-reflection",
    "ariaRoleDescription": "aria-attribute-reflection",
    "new ariaRoleDescription": "aria-attribute-reflection",
    "Element.ariaRowCount": "aria-attribute-reflection",
    "element.ariarowcount": "aria-attribute-reflection",
    "ariaRowCount": "aria-attribute-reflection",
    "new ariaRowCount": "aria-attribute-reflection",
    "Element.ariaRowIndex": "aria-attribute-reflection",
    "element.ariarowindex": "aria-attribute-reflection",
    "ariaRowIndex": "aria-attribute-reflection",
    "new ariaRowIndex": "aria-attribute-reflection",
    "Element.ariaRowSpan": "aria-attribute-reflection",
    "element.ariarowspan": "aria-attribute-reflection",
    "ariaRowSpan": "aria-attribute-reflection",
    "new ariaRowSpan": "aria-attribute-reflection",
    "Element.ariaSelected": "aria-attribute-reflection",
    "element.ariaselected": "aria-attribute-reflection",
    "ariaSelected": "aria-attribute-reflection",
    "new ariaSelected": "aria-attribute-reflection",
    "Element.ariaSetSize": "aria-attribute-reflection",
    "element.ariasetsize": "aria-attribute-reflection",
    "ariaSetSize": "aria-attribute-reflection",
    "new ariaSetSize": "aria-attribute-reflection",
    "Element.ariaSort": "aria-attribute-reflection",
    "element.ariasort": "aria-attribute-reflection",
    "ariaSort": "aria-attribute-reflection",
    "new ariaSort": "aria-attribute-reflection",
    "Element.ariaValueMax": "aria-attribute-reflection",
    "element.ariavaluemax": "aria-attribute-reflection",
    "ariaValueMax": "aria-attribute-reflection",
    "new ariaValueMax": "aria-attribute-reflection",
    "Element.ariaValueMin": "aria-attribute-reflection",
    "element.ariavaluemin": "aria-attribute-reflection",
    "ariaValueMin": "aria-attribute-reflection",
    "new ariaValueMin": "aria-attribute-reflection",
    "Element.ariaValueNow": "aria-attribute-reflection",
    "element.ariavaluenow": "aria-attribute-reflection",
    "ariaValueNow": "aria-attribute-reflection",
    "new ariaValueNow": "aria-attribute-reflection",
    "Element.ariaValueText": "aria-attribute-reflection",
    "element.ariavaluetext": "aria-attribute-reflection",
    "ariaValueText": "aria-attribute-reflection",
    "new ariaValueText": "aria-attribute-reflection",
    "Element.role": "aria-attribute-reflection",
    "element.role": "aria-attribute-reflection",
    "role": "aria-attribute-reflection",
    "new role": "aria-attribute-reflection",
    "Array": "array",
    "Array.Array": "array",
    "Array.prototype.Array": "array",
    "Array.concat": "array",
    "Array.prototype.concat": "array",
    "concat": "array",
    "Array.join": "array",
    "Array.prototype.join": "array",
    "join": "array",
    "Array.length": "array",
    "Array.prototype.length": "array",
    "length": "array",
    "Array.pop": "array",
    "Array.prototype.pop": "array",
    "pop": "array",
    "Array.push": "array",
    "Array.prototype.push": "array",
    "push": "array",
    "Array.reverse": "array",
    "Array.prototype.reverse": "array",
    "reverse": "array",
    "Array.shift": "array",
    "Array.prototype.shift": "array",
    "shift": "array",
    "Array.slice": "array",
    "Array.prototype.slice": "array",
    "slice": "array",
    "Array.sort": "array",
    "Array.prototype.sort": "array",
    "sort": "array",
    "Array.toLocaleString": "array",
    "Array.prototype.toLocaleString": "array",
    "Array.toString": "array",
    "Array.prototype.toString": "array",
    "Array.unshift": "array",
    "Array.prototype.unshift": "array",
    "unshift": "array",
    "Array.at": "array-at",
    "Array.prototype.at": "array-at",
    "at": "array-at",
    "TypedArray.at": "array-at",
    "TypedArray.prototype.at": "array-at",
    "Array.toReversed": "array-by-copy",
    "Array.prototype.toReversed": "array-by-copy",
    "toReversed": "array-by-copy",
    "Array.toSorted": "array-by-copy",
    "Array.prototype.toSorted": "array-by-copy",
    "toSorted": "array-by-copy",
    "Array.toSpliced": "array-by-copy",
    "Array.prototype.toSpliced": "array-by-copy",
    "toSpliced": "array-by-copy",
    "Array.with": "array-by-copy",
    "Array.prototype.with": "array-by-copy",
    "with": "array-by-copy",
    "TypedArray.toReversed": "array-by-copy",
    "TypedArray.prototype.toReversed": "array-by-copy",
    "TypedArray.toSorted": "array-by-copy",
    "TypedArray.prototype.toSorted": "array-by-copy",
    "TypedArray.with": "array-by-copy",
    "TypedArray.prototype.with": "array-by-copy",
    "Array.copyWithin": "array-copywithin",
    "Array.prototype.copyWithin": "array-copywithin",
    "copyWithin": "array-copywithin",
    "TypedArray.copyWithin": "array-copywithin",
    "TypedArray.prototype.copyWithin": "array-copywithin",
    "Array.fill": "array-fill",
    "Array.prototype.fill": "array-fill",
    "fill": "array-fill",
    "TypedArray.fill": "array-fill",
    "TypedArray.prototype.fill": "array-fill",
    "Array.find": "array-find",
    "Array.prototype.find": "array-find",
    "find": "array-find",
    "Array.findIndex": "array-find",
    "Array.prototype.findIndex": "array-find",
    "findIndex": "array-find",
    "TypedArray.find": "array-find",
    "TypedArray.prototype.find": "array-find",
    "TypedArray.findIndex": "array-find",
    "TypedArray.prototype.findIndex": "array-find",
    "Array.findLast": "array-findlast",
    "Array.prototype.findLast": "array-findlast",
    "findLast": "array-findlast",
    "Array.findLastIndex": "array-findlast",
    "Array.prototype.findLastIndex": "array-findlast",
    "findLastIndex": "array-findlast",
    "TypedArray.findLast": "array-findlast",
    "TypedArray.prototype.findLast": "array-findlast",
    "TypedArray.findLastIndex": "array-findlast",
    "TypedArray.prototype.findLastIndex": "array-findlast",
    "Array.flat": "array-flat",
    "Array.prototype.flat": "array-flat",
    "flat": "array-flat",
    "Array.flatMap": "array-flat",
    "Array.prototype.flatMap": "array-flat",
    "flatMap": "array-flat",
    "Array.from": "array-from",
    "Array.prototype.from": "array-from",
    "from": "array-from",
    "TypedArray.from": "array-from",
    "TypedArray.prototype.from": "array-from",
    "Array.fromAsync": "array-fromasync",
    "Array.prototype.fromAsync": "array-fromasync",
    "fromAsync": "array-fromasync",
    "Map.groupBy": "array-group",
    "Map.prototype.groupBy": "array-group",
    "groupBy": "array-group",
    "Object.groupBy": "array-group",
    "Object.prototype.groupBy": "array-group",
    "Array.includes": "array-includes",
    "Array.prototype.includes": "array-includes",
    "includes": "array-includes",
    "TypedArray.includes": "array-includes",
    "TypedArray.prototype.includes": "array-includes",
    "Array.isArray": "array-isarray",
    "Array.prototype.isArray": "array-isarray",
    "isArray": "array-isarray",
    "Array.every": "array-iteration-methods",
    "Array.prototype.every": "array-iteration-methods",
    "every": "array-iteration-methods",
    "Array.filter": "array-iteration-methods",
    "Array.prototype.filter": "array-iteration-methods",
    "filter": "array-iteration-methods",
    "Array.forEach": "array-iteration-methods",
    "Array.prototype.forEach": "array-iteration-methods",
    "forEach": "array-iteration-methods",
    "Array.indexOf": "array-iteration-methods",
    "Array.prototype.indexOf": "array-iteration-methods",
    "indexOf": "array-iteration-methods",
    "Array.lastIndexOf": "array-iteration-methods",
    "Array.prototype.lastIndexOf": "array-iteration-methods",
    "lastIndexOf": "array-iteration-methods",
    "Array.map": "array-iteration-methods",
    "Array.prototype.map": "array-iteration-methods",
    "map": "array-iteration-methods",
    "Array.reduce": "array-iteration-methods",
    "Array.prototype.reduce": "array-iteration-methods",
    "reduce": "array-iteration-methods",
    "Array.reduceRight": "array-iteration-methods",
    "Array.prototype.reduceRight": "array-iteration-methods",
    "reduceRight": "array-iteration-methods",
    "Array.some": "array-iteration-methods",
    "Array.prototype.some": "array-iteration-methods",
    "some": "array-iteration-methods",
    "Array.@@iterator": "array-iterators",
    "Array.prototype.@@iterator": "array-iterators",
    "@@iterator": "array-iterators",
    "Array.entries": "array-iterators",
    "Array.prototype.entries": "array-iterators",
    "entries": "array-iterators",
    "Array.keys": "array-iterators",
    "Array.prototype.keys": "array-iterators",
    "keys": "array-iterators",
    "Array.values": "array-iterators",
    "Array.prototype.values": "array-iterators",
    "values": "array-iterators",
    "Array.of": "array-of",
    "Array.prototype.of": "array-of",
    "of": "array-of",
    "TypedArray.of": "array-of",
    "TypedArray.prototype.of": "array-of",
    "Array.splice": "array-splice",
    "Array.prototype.splice": "array-splice",
    "splice": "array-splice",
    "aspect-ratio": "aspect-ratio",
    "aspect": "aspect-ratio",
    "img.aspect_ratio_computed_from_attributes": "aspect-ratio",
    "aspect_ratio_computed_from_attributes": "aspect-ratio",
    "video.aspect_ratio_computed_from_attributes": "aspect-ratio",
    "AsyncFunction": "async-await",
    "AsyncFunction.AsyncFunction": "async-await",
    "AsyncFunction.prototype.AsyncFunction": "async-await",
    "async_function": "async-await",
    "await": "async-await",
    "await ": "async-await",
    "async function": "async-await",
    "async": "async-await",
    "Clipboard": "async-clipboard",
    "clipboard": "async-clipboard",
    "Clipboard.read": "async-clipboard",
    "clipboard.read": "async-clipboard",
    "read": "async-clipboard",
    "new read": "async-clipboard",
    "Clipboard.readText": "async-clipboard",
    "clipboard.readtext": "async-clipboard",
    "readText": "async-clipboard",
    "new readText": "async-clipboard",
    "Clipboard.write": "async-clipboard",
    "clipboard.write": "async-clipboard",
    "write": "async-clipboard",
    "new write": "async-clipboard",
    "Clipboard.writeText": "async-clipboard",
    "clipboard.writetext": "async-clipboard",
    "writeText": "async-clipboard",
    "new writeText": "async-clipboard",
    "ClipboardEvent": "async-clipboard",
    "clipboardevent": "async-clipboard",
    "ClipboardEvent.ClipboardEvent": "async-clipboard",
    "clipboardevent.clipboardevent": "async-clipboard",
    "new ClipboardEvent": "async-clipboard",
    "ClipboardEvent.clipboardData": "async-clipboard",
    "clipboardevent.clipboarddata": "async-clipboard",
    "clipboardData": "async-clipboard",
    "new clipboardData": "async-clipboard",
    "ClipboardItem": "async-clipboard",
    "clipboarditem": "async-clipboard",
    "ClipboardItem.ClipboardItem": "async-clipboard",
    "clipboarditem.clipboarditem": "async-clipboard",
    "new ClipboardItem": "async-clipboard",
    "ClipboardItem.getType": "async-clipboard",
    "clipboarditem.gettype": "async-clipboard",
    "getType": "async-clipboard",
    "new getType": "async-clipboard",
    "ClipboardItem.presentationStyle": "async-clipboard",
    "clipboarditem.presentationstyle": "async-clipboard",
    "presentationStyle": "async-clipboard",
    "new presentationStyle": "async-clipboard",
    "ClipboardItem.types": "async-clipboard",
    "clipboarditem.types": "async-clipboard",
    "types": "async-clipboard",
    "new types": "async-clipboard",
    "Navigator.clipboard": "async-clipboard",
    "navigator.clipboard": "async-clipboard",
    "Navigator": "async-clipboard",
    "new clipboard": "async-clipboard",
    "Permissions.permission_clipboard-read": "async-clipboard",
    "permissions.permission_clipboard-read": "async-clipboard",
    "Permissions": "async-clipboard",
    "permission_clipboard-read": "async-clipboard",
    "new permission_clipboard-read": "async-clipboard",
    "AudioSession": "audio-session",
    "audiosession": "audio-session",
    "AudioSession.type": "audio-session",
    "audiosession.type": "audio-session",
    "type": "audio-session",
    "new type": "audio-session",
    "Navigator.audioSession": "audio-session",
    "navigator.audiosession": "audio-session",
    "audioSession": "audio-session",
    "new audioSession": "audio-session",
    "AudioTrack": "audio-video-tracks",
    "audiotrack": "audio-video-tracks",
    "AudioTrack.enabled": "audio-video-tracks",
    "audiotrack.enabled": "audio-video-tracks",
    "enabled": "audio-video-tracks",
    "new enabled": "audio-video-tracks",
    "AudioTrack.id": "audio-video-tracks",
    "audiotrack.id": "audio-video-tracks",
    "id": "audio-video-tracks",
    "new id": "audio-video-tracks",
    "AudioTrack.kind": "audio-video-tracks",
    "audiotrack.kind": "audio-video-tracks",
    "kind": "audio-video-tracks",
    "new kind": "audio-video-tracks",
    "AudioTrack.label": "audio-video-tracks",
    "audiotrack.label": "audio-video-tracks",
    "label": "audio-video-tracks",
    "new label": "audio-video-tracks",
    "AudioTrack.language": "audio-video-tracks",
    "audiotrack.language": "audio-video-tracks",
    "language": "audio-video-tracks",
    "new language": "audio-video-tracks",
    "AudioTrackList": "audio-video-tracks",
    "audiotracklist": "audio-video-tracks",
    "AudioTrackList.addtrack_event": "audio-video-tracks",
    "audiotracklist.addtrack_event": "audio-video-tracks",
    "addtrack_event": "audio-video-tracks",
    "new addtrack_event": "audio-video-tracks",
    "AudioTrackList.change_event": "audio-video-tracks",
    "audiotracklist.change_event": "audio-video-tracks",
    "change_event": "audio-video-tracks",
    "new change_event": "audio-video-tracks",
    "AudioTrackList.getTrackById": "audio-video-tracks",
    "audiotracklist.gettrackbyid": "audio-video-tracks",
    "getTrackById": "audio-video-tracks",
    "new getTrackById": "audio-video-tracks",
    "AudioTrackList.length": "audio-video-tracks",
    "audiotracklist.length": "audio-video-tracks",
    "new length": "audio-video-tracks",
    "AudioTrackList.removetrack_event": "audio-video-tracks",
    "audiotracklist.removetrack_event": "audio-video-tracks",
    "removetrack_event": "audio-video-tracks",
    "new removetrack_event": "audio-video-tracks",
    "HTMLMediaElement.audioTracks": "audio-video-tracks",
    "htmlmediaelement.audiotracks": "audio-video-tracks",
    "HTMLMediaElement": "audio-video-tracks",
    "audioTracks": "audio-video-tracks",
    "new audioTracks": "audio-video-tracks",
    "HTMLMediaElement.videoTracks": "audio-video-tracks",
    "htmlmediaelement.videotracks": "audio-video-tracks",
    "videoTracks": "audio-video-tracks",
    "new videoTracks": "audio-video-tracks",
    "VideoTrack": "audio-video-tracks",
    "videotrack": "audio-video-tracks",
    "VideoTrack.id": "audio-video-tracks",
    "videotrack.id": "audio-video-tracks",
    "VideoTrack.kind": "audio-video-tracks",
    "videotrack.kind": "audio-video-tracks",
    "VideoTrack.label": "audio-video-tracks",
    "videotrack.label": "audio-video-tracks",
    "VideoTrack.language": "audio-video-tracks",
    "videotrack.language": "audio-video-tracks",
    "VideoTrack.selected": "audio-video-tracks",
    "videotrack.selected": "audio-video-tracks",
    "selected": "audio-video-tracks",
    "new selected": "audio-video-tracks",
    "VideoTrackList": "audio-video-tracks",
    "videotracklist": "audio-video-tracks",
    "VideoTrackList.addtrack_event": "audio-video-tracks",
    "videotracklist.addtrack_event": "audio-video-tracks",
    "VideoTrackList.change_event": "audio-video-tracks",
    "videotracklist.change_event": "audio-video-tracks",
    "VideoTrackList.getTrackById": "audio-video-tracks",
    "videotracklist.gettrackbyid": "audio-video-tracks",
    "VideoTrackList.length": "audio-video-tracks",
    "videotracklist.length": "audio-video-tracks",
    "VideoTrackList.removetrack_event": "audio-video-tracks",
    "videotracklist.removetrack_event": "audio-video-tracks",
    "VideoTrackList.selectedIndex": "audio-video-tracks",
    "videotracklist.selectedindex": "audio-video-tracks",
    "selectedIndex": "audio-video-tracks",
    "new selectedIndex": "audio-video-tracks",
    ":autofill": "autofill",
    "::autofill": "autofill",
    "HTMLElement.autofocus": "autofocus",
    "htmlelement.autofocus": "autofocus",
    "HTMLElement": "autofocus",
    "autofocus": "autofocus",
    "new autofocus": "autofocus",
    "MathMLElement.autofocus": "autofocus",
    "mathmlelement.autofocus": "autofocus",
    "MathMLElement": "autofocus",
    "SVGElement.autofocus": "autofocus",
    "svgelement.autofocus": "autofocus",
    "SVGElement": "autofocus",
    "loading-autofocus": "autofocus",
    "CustomElementRegistry": "autonomous-custom-elements",
    "customelementregistry": "autonomous-custom-elements",
    "CustomElementRegistry.define": "autonomous-custom-elements",
    "customelementregistry.define": "autonomous-custom-elements",
    "define": "autonomous-custom-elements",
    "new define": "autonomous-custom-elements",
    "Window.customElements": "autonomous-custom-elements",
    "window.customelements": "autonomous-custom-elements",
    "Window": "autonomous-custom-elements",
    "customElements": "autonomous-custom-elements",
    "new customElements": "autonomous-custom-elements",
    ":defined": "autonomous-custom-elements",
    "::defined": "autonomous-custom-elements",
    "backdrop-filter": "backdrop-filter",
    "backdrop": "backdrop-filter",
    "background-clip": "background-clip",
    "background": "background-clip",
    "background-clip.border-box": "background-clip",
    "background-clip.border": "background-clip",
    "background-clip.content-box": "background-clip",
    "background-clip.content": "background-clip",
    "background-clip.padding-box": "background-clip",
    "background-clip.padding": "background-clip",
    "background-clip.text": "background-clip-text",
    "BackgroundFetchEvent": "background-fetch",
    "backgroundfetchevent": "background-fetch",
    "BackgroundFetchEvent.BackgroundFetchEvent": "background-fetch",
    "backgroundfetchevent.backgroundfetchevent": "background-fetch",
    "new BackgroundFetchEvent": "background-fetch",
    "BackgroundFetchEvent.registration": "background-fetch",
    "backgroundfetchevent.registration": "background-fetch",
    "registration": "background-fetch",
    "new registration": "background-fetch",
    "BackgroundFetchManager": "background-fetch",
    "backgroundfetchmanager": "background-fetch",
    "BackgroundFetchManager.fetch": "background-fetch",
    "backgroundfetchmanager.fetch": "background-fetch",
    "new fetch": "background-fetch",
    "BackgroundFetchManager.get": "background-fetch",
    "backgroundfetchmanager.get": "background-fetch",
    "get": "background-fetch",
    "new get": "background-fetch",
    "BackgroundFetchManager.getIds": "background-fetch",
    "backgroundfetchmanager.getids": "background-fetch",
    "getIds": "background-fetch",
    "new getIds": "background-fetch",
    "BackgroundFetchRecord": "background-fetch",
    "backgroundfetchrecord": "background-fetch",
    "BackgroundFetchRecord.request": "background-fetch",
    "backgroundfetchrecord.request": "background-fetch",
    "request": "background-fetch",
    "new request": "background-fetch",
    "BackgroundFetchRecord.responseReady": "background-fetch",
    "backgroundfetchrecord.responseready": "background-fetch",
    "responseReady": "background-fetch",
    "new responseReady": "background-fetch",
    "BackgroundFetchRegistration.abort": "background-fetch",
    "backgroundfetchregistration.abort": "background-fetch",
    "BackgroundFetchRegistration": "background-fetch",
    "BackgroundFetchRegistration.downloadTotal": "background-fetch",
    "backgroundfetchregistration.downloadtotal": "background-fetch",
    "downloadTotal": "background-fetch",
    "new downloadTotal": "background-fetch",
    "BackgroundFetchRegistration.downloaded": "background-fetch",
    "backgroundfetchregistration.downloaded": "background-fetch",
    "downloaded": "background-fetch",
    "new downloaded": "background-fetch",
    "BackgroundFetchRegistration.failureReason": "background-fetch",
    "backgroundfetchregistration.failurereason": "background-fetch",
    "failureReason": "background-fetch",
    "new failureReason": "background-fetch",
    "BackgroundFetchRegistration.id": "background-fetch",
    "backgroundfetchregistration.id": "background-fetch",
    "BackgroundFetchRegistration.match": "background-fetch",
    "backgroundfetchregistration.match": "background-fetch",
    "match": "background-fetch",
    "new match": "background-fetch",
    "BackgroundFetchRegistration.matchAll": "background-fetch",
    "backgroundfetchregistration.matchall": "background-fetch",
    "matchAll": "background-fetch",
    "new matchAll": "background-fetch",
    "BackgroundFetchRegistration.progress_event": "background-fetch",
    "backgroundfetchregistration.progress_event": "background-fetch",
    "progress_event": "background-fetch",
    "new progress_event": "background-fetch",
    "BackgroundFetchRegistration.recordsAvailable": "background-fetch",
    "backgroundfetchregistration.recordsavailable": "background-fetch",
    "recordsAvailable": "background-fetch",
    "new recordsAvailable": "background-fetch",
    "BackgroundFetchRegistration.result": "background-fetch",
    "backgroundfetchregistration.result": "background-fetch",
    "result": "background-fetch",
    "new result": "background-fetch",
    "BackgroundFetchRegistration.uploadTotal": "background-fetch",
    "backgroundfetchregistration.uploadtotal": "background-fetch",
    "uploadTotal": "background-fetch",
    "new uploadTotal": "background-fetch",
    "BackgroundFetchRegistration.uploaded": "background-fetch",
    "backgroundfetchregistration.uploaded": "background-fetch",
    "uploaded": "background-fetch",
    "new uploaded": "background-fetch",
    "BackgroundFetchUpdateUIEvent": "background-fetch",
    "backgroundfetchupdateuievent": "background-fetch",
    "BackgroundFetchUpdateUIEvent.BackgroundFetchUpdateUIEvent": "background-fetch",
    "backgroundfetchupdateuievent.backgroundfetchupdateuievent": "background-fetch",
    "new BackgroundFetchUpdateUIEvent": "background-fetch",
    "BackgroundFetchUpdateUIEvent.updateUI": "background-fetch",
    "backgroundfetchupdateuievent.updateui": "background-fetch",
    "updateUI": "background-fetch",
    "new updateUI": "background-fetch",
    "ServiceWorkerGlobalScope.backgroundfetchabort_event": "background-fetch",
    "serviceworkerglobalscope.backgroundfetchabort_event": "background-fetch",
    "ServiceWorkerGlobalScope": "background-fetch",
    "backgroundfetchabort_event": "background-fetch",
    "new backgroundfetchabort_event": "background-fetch",
    "ServiceWorkerGlobalScope.backgroundfetchclick_event": "background-fetch",
    "serviceworkerglobalscope.backgroundfetchclick_event": "background-fetch",
    "backgroundfetchclick_event": "background-fetch",
    "new backgroundfetchclick_event": "background-fetch",
    "ServiceWorkerGlobalScope.backgroundfetchfail_event": "background-fetch",
    "serviceworkerglobalscope.backgroundfetchfail_event": "background-fetch",
    "backgroundfetchfail_event": "background-fetch",
    "new backgroundfetchfail_event": "background-fetch",
    "ServiceWorkerGlobalScope.backgroundfetchsuccess_event": "background-fetch",
    "serviceworkerglobalscope.backgroundfetchsuccess_event": "background-fetch",
    "backgroundfetchsuccess_event": "background-fetch",
    "new backgroundfetchsuccess_event": "background-fetch",
    "ServiceWorkerRegistration.backgroundFetch": "background-fetch",
    "serviceworkerregistration.backgroundfetch": "background-fetch",
    "ServiceWorkerRegistration": "background-fetch",
    "backgroundFetch": "background-fetch",
    "new backgroundFetch": "background-fetch",
    "baseline-source": "baseline-source",
    "baseline": "baseline-source",
    "baseline-source.auto": "baseline-source",
    "baseline-source.first": "baseline-source",
    "baseline-source.last": "baseline-source",
    "BigInt": "bigint",
    "BigInt.BigInt": "bigint",
    "BigInt.prototype.BigInt": "bigint",
    "BigInt.asIntN": "bigint",
    "BigInt.prototype.asIntN": "bigint",
    "asIntN": "bigint",
    "BigInt.asUintN": "bigint",
    "BigInt.prototype.asUintN": "bigint",
    "asUintN": "bigint",
    "BigInt.toLocaleString": "bigint",
    "BigInt.prototype.toLocaleString": "bigint",
    "BigInt.toString": "bigint",
    "BigInt.prototype.toString": "bigint",
    "BigInt.valueOf": "bigint",
    "BigInt.prototype.valueOf": "bigint",
    "HTMLLinkElement.blocking": "blocking-render",
    "htmllinkelement.blocking": "blocking-render",
    "HTMLLinkElement": "blocking-render",
    "blocking": "blocking-render",
    "new blocking": "blocking-render",
    "HTMLScriptElement.blocking": "blocking-render",
    "htmlscriptelement.blocking": "blocking-render",
    "HTMLScriptElement": "blocking-render",
    "HTMLStyleElement.blocking": "blocking-render",
    "htmlstyleelement.blocking": "blocking-render",
    "HTMLStyleElement": "blocking-render",
    "link.blocking": "blocking-render",
    "script.blocking": "blocking-render",
    "style.blocking": "blocking-render",
    "border-image": "border-image",
    "border": "border-image",
    "border-image.fill": "border-image",
    "border-image.gradient": "border-image",
    "border-image.optional_border_image_slice": "border-image",
    "border-image-outset": "border-image",
    "border-image-repeat": "border-image",
    "border-image-repeat.round": "border-image",
    "border-image-repeat.space": "border-image",
    "border-image-slice": "border-image",
    "border-image-source": "border-image",
    "border-image-width": "border-image",
    "BroadcastChannel": "broadcast-channel",
    "broadcastchannel": "broadcast-channel",
    "BroadcastChannel.BroadcastChannel": "broadcast-channel",
    "broadcastchannel.broadcastchannel": "broadcast-channel",
    "new BroadcastChannel": "broadcast-channel",
    "BroadcastChannel.close": "broadcast-channel",
    "broadcastchannel.close": "broadcast-channel",
    "close": "broadcast-channel",
    "new close": "broadcast-channel",
    "BroadcastChannel.message_event": "broadcast-channel",
    "broadcastchannel.message_event": "broadcast-channel",
    "message_event": "broadcast-channel",
    "new message_event": "broadcast-channel",
    "BroadcastChannel.messageerror_event": "broadcast-channel",
    "broadcastchannel.messageerror_event": "broadcast-channel",
    "messageerror_event": "broadcast-channel",
    "new messageerror_event": "broadcast-channel",
    "BroadcastChannel.name": "broadcast-channel",
    "broadcastchannel.name": "broadcast-channel",
    "BroadcastChannel.postMessage": "broadcast-channel",
    "broadcastchannel.postmessage": "broadcast-channel",
    "postMessage": "broadcast-channel",
    "new postMessage": "broadcast-channel",
    "calc": "calc",
    "calc-constant": "calc-constants",
    "NaN": "calc-constants",
    "e": "calc-constants",
    "infinity": "calc-constants",
    "pi": "calc-constants",
    "CanvasRenderingContext2D.isContextLost": "canvas-context-lost",
    "canvasrenderingcontext2d.iscontextlost": "canvas-context-lost",
    "CanvasRenderingContext2D": "canvas-context-lost",
    "isContextLost": "canvas-context-lost",
    "new isContextLost": "canvas-context-lost",
    "HTMLCanvasElement.contextlost_event": "canvas-context-lost",
    "htmlcanvaselement.contextlost_event": "canvas-context-lost",
    "HTMLCanvasElement": "canvas-context-lost",
    "contextlost_event": "canvas-context-lost",
    "new contextlost_event": "canvas-context-lost",
    "HTMLCanvasElement.contextrestored_event": "canvas-context-lost",
    "htmlcanvaselement.contextrestored_event": "canvas-context-lost",
    "contextrestored_event": "canvas-context-lost",
    "new contextrestored_event": "canvas-context-lost",
    "OffscreenCanvas.contextlost_event": "canvas-context-lost",
    "offscreencanvas.contextlost_event": "canvas-context-lost",
    "OffscreenCanvas": "canvas-context-lost",
    "OffscreenCanvas.contextrestored_event": "canvas-context-lost",
    "offscreencanvas.contextrestored_event": "canvas-context-lost",
    "OffscreenCanvasRenderingContext2D.isContextLost": "canvas-context-lost",
    "offscreencanvasrenderingcontext2d.iscontextlost": "canvas-context-lost",
    "OffscreenCanvasRenderingContext2D": "canvas-context-lost",
    "CanvasRenderingContext2D.createConicGradient": "canvas-createconicgradient",
    "canvasrenderingcontext2d.createconicgradient": "canvas-createconicgradient",
    "createConicGradient": "canvas-createconicgradient",
    "new createConicGradient": "canvas-createconicgradient",
    "OffscreenCanvasRenderingContext2D.createConicGradient": "canvas-createconicgradient",
    "offscreencanvasrenderingcontext2d.createconicgradient": "canvas-createconicgradient",
    "CanvasRenderingContext2D.reset": "canvas-reset",
    "canvasrenderingcontext2d.reset": "canvas-reset",
    "reset": "canvas-reset",
    "new reset": "canvas-reset",
    "OffscreenCanvasRenderingContext2D.reset": "canvas-reset",
    "offscreencanvasrenderingcontext2d.reset": "canvas-reset",
    "CanvasRenderingContext2D.roundRect": "canvas-roundrect",
    "canvasrenderingcontext2d.roundrect": "canvas-roundrect",
    "roundRect": "canvas-roundrect",
    "new roundRect": "canvas-roundrect",
    "OffscreenCanvasRenderingContext2D.roundRect": "canvas-roundrect",
    "offscreencanvasrenderingcontext2d.roundrect": "canvas-roundrect",
    "CanvasRenderingContext2D.fillText": "canvas-text",
    "canvasrenderingcontext2d.filltext": "canvas-text",
    "fillText": "canvas-text",
    "new fillText": "canvas-text",
    "CanvasRenderingContext2D.measureText": "canvas-text",
    "canvasrenderingcontext2d.measuretext": "canvas-text",
    "measureText": "canvas-text",
    "new measureText": "canvas-text",
    "CanvasRenderingContext2D.strokeText": "canvas-text",
    "canvasrenderingcontext2d.stroketext": "canvas-text",
    "strokeText": "canvas-text",
    "new strokeText": "canvas-text",
    "CanvasRenderingContext2D.textAlign": "canvas-text",
    "canvasrenderingcontext2d.textalign": "canvas-text",
    "textAlign": "canvas-text",
    "new textAlign": "canvas-text",
    "CanvasRenderingContext2D.textBaseline": "canvas-text",
    "canvasrenderingcontext2d.textbaseline": "canvas-text",
    "textBaseline": "canvas-text",
    "new textBaseline": "canvas-text",
    "TextMetrics": "canvas-text",
    "textmetrics": "canvas-text",
    "TextMetrics.width": "canvas-text",
    "textmetrics.width": "canvas-text",
    "TextMetrics.alphabeticBaseline": "canvas-text-baselines",
    "textmetrics.alphabeticbaseline": "canvas-text-baselines",
    "alphabeticBaseline": "canvas-text-baselines",
    "new alphabeticBaseline": "canvas-text-baselines",
    "TextMetrics.hangingBaseline": "canvas-text-baselines",
    "textmetrics.hangingbaseline": "canvas-text-baselines",
    "hangingBaseline": "canvas-text-baselines",
    "new hangingBaseline": "canvas-text-baselines",
    "TextMetrics.ideographicBaseline": "canvas-text-baselines",
    "textmetrics.ideographicbaseline": "canvas-text-baselines",
    "ideographicBaseline": "canvas-text-baselines",
    "new ideographicBaseline": "canvas-text-baselines",
    "cap": "cap",
    "CSSImportRule.layerName": "cascade-layers",
    "cssimportrule.layername": "cascade-layers",
    "CSSImportRule": "cascade-layers",
    "layerName": "cascade-layers",
    "new layerName": "cascade-layers",
    "CSSLayerBlockRule": "cascade-layers",
    "csslayerblockrule": "cascade-layers",
    "CSSLayerBlockRule.name": "cascade-layers",
    "csslayerblockrule.name": "cascade-layers",
    "CSSLayerStatementRule": "cascade-layers",
    "csslayerstatementrule": "cascade-layers",
    "CSSLayerStatementRule.nameList": "cascade-layers",
    "csslayerstatementrule.namelist": "cascade-layers",
    "nameList": "cascade-layers",
    "new nameList": "cascade-layers",
    "@import.layer": "cascade-layers",
    "@layer": "cascade-layers",
    "Element.checkVisibility": "check-visibility",
    "element.checkvisibility": "check-visibility",
    "checkVisibility": "check-visibility",
    "new checkVisibility": "check-visibility",
    "super": "class-syntax",
    "class": "class-syntax",
    "ClipboardItem.supports_static": "clipboard-supports",
    "clipboarditem.supports_static": "clipboard-supports",
    "supports_static": "clipboard-supports",
    "new supports_static": "clipboard-supports",
    "color": "color-function",
    "mixed_type_parameters": "color-function",
    "color-mix": "color-mix",
    "color-scheme": "color-scheme",
    "color-scheme.only_dark": "color-scheme",
    "color-scheme.only_light": "color-scheme",
    "@font-face.OpenType_COLRv1": "colrv1",
    "break-after.multicol_context": "column-breaks",
    "break": "column-breaks",
    "break-after.multicol_context.avoid": "column-breaks",
    "break-after.multicol_context.avoid-column": "column-breaks",
    "break-after.multicol_context.column": "column-breaks",
    "break-before.multicol_context": "column-breaks",
    "break-before.multicol_context.avoid": "column-breaks",
    "break-before.multicol_context.avoid-column": "column-breaks",
    "break-before.multicol_context.column": "column-breaks",
    "break-inside.multicol_context": "column-breaks",
    "break-inside.multicol_context.avoid-column": "column-breaks",
    "break-inside.multicol_context.avoid": "column-breaks",
    "CompressionStream": "compression-streams",
    "compressionstream": "compression-streams",
    "CompressionStream.CompressionStream": "compression-streams",
    "compressionstream.compressionstream": "compression-streams",
    "new CompressionStream": "compression-streams",
    "CompressionStream.CompressionStream.deflate": "compression-streams",
    "compressionstream.compressionstream.deflate": "compression-streams",
    "new deflate": "compression-streams",
    "CompressionStream.prototype.deflate": "compression-streams",
    "CompressionStream.CompressionStream.gzip": "compression-streams",
    "compressionstream.compressionstream.gzip": "compression-streams",
    "new gzip": "compression-streams",
    "CompressionStream.prototype.gzip": "compression-streams",
    "CompressionStream.readable": "compression-streams",
    "compressionstream.readable": "compression-streams",
    "readable": "compression-streams",
    "new readable": "compression-streams",
    "CompressionStream.writable": "compression-streams",
    "compressionstream.writable": "compression-streams",
    "writable": "compression-streams",
    "new writable": "compression-streams",
    "DecompressionStream": "compression-streams",
    "decompressionstream": "compression-streams",
    "DecompressionStream.DecompressionStream": "compression-streams",
    "decompressionstream.decompressionstream": "compression-streams",
    "new DecompressionStream": "compression-streams",
    "DecompressionStream.DecompressionStream.deflate": "compression-streams",
    "decompressionstream.decompressionstream.deflate": "compression-streams",
    "DecompressionStream.prototype.deflate": "compression-streams",
    "DecompressionStream.DecompressionStream.gzip": "compression-streams",
    "decompressionstream.decompressionstream.gzip": "compression-streams",
    "DecompressionStream.prototype.gzip": "compression-streams",
    "DecompressionStream.readable": "compression-streams",
    "decompressionstream.readable": "compression-streams",
    "DecompressionStream.writable": "compression-streams",
    "decompressionstream.writable": "compression-streams",
    "Permissions.permission_compute-pressure": "compute-pressure",
    "permissions.permission_compute-pressure": "compute-pressure",
    "permission_compute-pressure": "compute-pressure",
    "new permission_compute-pressure": "compute-pressure",
    "PressureObserver": "compute-pressure",
    "pressureobserver": "compute-pressure",
    "PressureObserver.PressureObserver": "compute-pressure",
    "pressureobserver.pressureobserver": "compute-pressure",
    "new PressureObserver": "compute-pressure",
    "PressureObserver.disconnect": "compute-pressure",
    "pressureobserver.disconnect": "compute-pressure",
    "disconnect": "compute-pressure",
    "new disconnect": "compute-pressure",
    "PressureObserver.knownSources_static": "compute-pressure",
    "pressureobserver.knownsources_static": "compute-pressure",
    "knownSources_static": "compute-pressure",
    "new knownSources_static": "compute-pressure",
    "PressureObserver.observe": "compute-pressure",
    "pressureobserver.observe": "compute-pressure",
    "observe": "compute-pressure",
    "new observe": "compute-pressure",
    "PressureObserver.takeRecords": "compute-pressure",
    "pressureobserver.takerecords": "compute-pressure",
    "takeRecords": "compute-pressure",
    "new takeRecords": "compute-pressure",
    "PressureObserver.unobserve": "compute-pressure",
    "pressureobserver.unobserve": "compute-pressure",
    "unobserve": "compute-pressure",
    "new unobserve": "compute-pressure",
    "PressureRecord": "compute-pressure",
    "pressurerecord": "compute-pressure",
    "PressureRecord.source": "compute-pressure",
    "pressurerecord.source": "compute-pressure",
    "source": "compute-pressure",
    "new source": "compute-pressure",
    "PressureRecord.state": "compute-pressure",
    "pressurerecord.state": "compute-pressure",
    "state": "compute-pressure",
    "new state": "compute-pressure",
    "PressureRecord.time": "compute-pressure",
    "pressurerecord.time": "compute-pressure",
    "time": "compute-pressure",
    "new time": "compute-pressure",
    "PressureRecord.toJSON": "compute-pressure",
    "pressurerecord.tojson": "compute-pressure",
    "toJSON": "compute-pressure",
    "new toJSON": "compute-pressure",
    "permissions-policy.compute-pressure": "compute-pressure",
    "Permissions_Policy.compute_pressure": "compute-pressure",
    "conic-gradient": "conic-gradients",
    "doubleposition": "conic-gradients",
    "repeating-conic-gradient": "conic-gradients",
    "HTMLButtonElement.checkValidity": "constraint-validation",
    "htmlbuttonelement.checkvalidity": "constraint-validation",
    "HTMLButtonElement": "constraint-validation",
    "checkValidity": "constraint-validation",
    "new checkValidity": "constraint-validation",
    "HTMLButtonElement.reportValidity": "constraint-validation",
    "htmlbuttonelement.reportvalidity": "constraint-validation",
    "reportValidity": "constraint-validation",
    "new reportValidity": "constraint-validation",
    "HTMLButtonElement.setCustomValidity": "constraint-validation",
    "htmlbuttonelement.setcustomvalidity": "constraint-validation",
    "setCustomValidity": "constraint-validation",
    "new setCustomValidity": "constraint-validation",
    "HTMLButtonElement.validationMessage": "constraint-validation",
    "htmlbuttonelement.validationmessage": "constraint-validation",
    "validationMessage": "constraint-validation",
    "new validationMessage": "constraint-validation",
    "HTMLButtonElement.validity": "constraint-validation",
    "htmlbuttonelement.validity": "constraint-validation",
    "validity": "constraint-validation",
    "new validity": "constraint-validation",
    "HTMLButtonElement.willValidate": "constraint-validation",
    "htmlbuttonelement.willvalidate": "constraint-validation",
    "willValidate": "constraint-validation",
    "new willValidate": "constraint-validation",
    "HTMLFieldSetElement.checkValidity": "constraint-validation",
    "htmlfieldsetelement.checkvalidity": "constraint-validation",
    "HTMLFieldSetElement": "constraint-validation",
    "HTMLFieldSetElement.reportValidity": "constraint-validation",
    "htmlfieldsetelement.reportvalidity": "constraint-validation",
    "HTMLFieldSetElement.setCustomValidity": "constraint-validation",
    "htmlfieldsetelement.setcustomvalidity": "constraint-validation",
    "HTMLFieldSetElement.validationMessage": "constraint-validation",
    "htmlfieldsetelement.validationmessage": "constraint-validation",
    "HTMLFieldSetElement.validity": "constraint-validation",
    "htmlfieldsetelement.validity": "constraint-validation",
    "HTMLFieldSetElement.willValidate": "constraint-validation",
    "htmlfieldsetelement.willvalidate": "constraint-validation",
    "HTMLFormElement.checkValidity": "constraint-validation",
    "htmlformelement.checkvalidity": "constraint-validation",
    "HTMLFormElement": "constraint-validation",
    "HTMLFormElement.reportValidity": "constraint-validation",
    "htmlformelement.reportvalidity": "constraint-validation",
    "HTMLInputElement.checkValidity": "constraint-validation",
    "htmlinputelement.checkvalidity": "constraint-validation",
    "HTMLInputElement": "constraint-validation",
    "HTMLInputElement.reportValidity": "constraint-validation",
    "htmlinputelement.reportvalidity": "constraint-validation",
    "HTMLInputElement.setCustomValidity": "constraint-validation",
    "htmlinputelement.setcustomvalidity": "constraint-validation",
    "HTMLInputElement.validationMessage": "constraint-validation",
    "htmlinputelement.validationmessage": "constraint-validation",
    "HTMLInputElement.validity": "constraint-validation",
    "htmlinputelement.validity": "constraint-validation",
    "HTMLInputElement.willValidate": "constraint-validation",
    "htmlinputelement.willvalidate": "constraint-validation",
    "HTMLObjectElement.checkValidity": "constraint-validation",
    "htmlobjectelement.checkvalidity": "constraint-validation",
    "HTMLObjectElement": "constraint-validation",
    "HTMLObjectElement.reportValidity": "constraint-validation",
    "htmlobjectelement.reportvalidity": "constraint-validation",
    "HTMLObjectElement.setCustomValidity": "constraint-validation",
    "htmlobjectelement.setcustomvalidity": "constraint-validation",
    "HTMLObjectElement.validationMessage": "constraint-validation",
    "htmlobjectelement.validationmessage": "constraint-validation",
    "HTMLObjectElement.validity": "constraint-validation",
    "htmlobjectelement.validity": "constraint-validation",
    "HTMLObjectElement.willValidate": "constraint-validation",
    "htmlobjectelement.willvalidate": "constraint-validation",
    "HTMLOutputElement.checkValidity": "constraint-validation",
    "htmloutputelement.checkvalidity": "constraint-validation",
    "HTMLOutputElement": "constraint-validation",
    "HTMLOutputElement.reportValidity": "constraint-validation",
    "htmloutputelement.reportvalidity": "constraint-validation",
    "HTMLOutputElement.setCustomValidity": "constraint-validation",
    "htmloutputelement.setcustomvalidity": "constraint-validation",
    "HTMLOutputElement.validationMessage": "constraint-validation",
    "htmloutputelement.validationmessage": "constraint-validation",
    "HTMLOutputElement.validity": "constraint-validation",
    "htmloutputelement.validity": "constraint-validation",
    "HTMLOutputElement.willValidate": "constraint-validation",
    "htmloutputelement.willvalidate": "constraint-validation",
    "HTMLSelectElement.checkValidity": "constraint-validation",
    "htmlselectelement.checkvalidity": "constraint-validation",
    "HTMLSelectElement": "constraint-validation",
    "HTMLSelectElement.reportValidity": "constraint-validation",
    "htmlselectelement.reportvalidity": "constraint-validation",
    "HTMLSelectElement.setCustomValidity": "constraint-validation",
    "htmlselectelement.setcustomvalidity": "constraint-validation",
    "HTMLSelectElement.validationMessage": "constraint-validation",
    "htmlselectelement.validationmessage": "constraint-validation",
    "HTMLSelectElement.validity": "constraint-validation",
    "htmlselectelement.validity": "constraint-validation",
    "HTMLSelectElement.willValidate": "constraint-validation",
    "htmlselectelement.willvalidate": "constraint-validation",
    "HTMLTextAreaElement.checkValidity": "constraint-validation",
    "htmltextareaelement.checkvalidity": "constraint-validation",
    "HTMLTextAreaElement": "constraint-validation",
    "HTMLTextAreaElement.reportValidity": "constraint-validation",
    "htmltextareaelement.reportvalidity": "constraint-validation",
    "HTMLTextAreaElement.setCustomValidity": "constraint-validation",
    "htmltextareaelement.setcustomvalidity": "constraint-validation",
    "HTMLTextAreaElement.validationMessage": "constraint-validation",
    "htmltextareaelement.validationmessage": "constraint-validation",
    "HTMLTextAreaElement.validity": "constraint-validation",
    "htmltextareaelement.validity": "constraint-validation",
    "HTMLTextAreaElement.willValidate": "constraint-validation",
    "htmltextareaelement.willvalidate": "constraint-validation",
    "ValidityState": "constraint-validation",
    "validitystate": "constraint-validation",
    "ValidityState.badInput": "constraint-validation",
    "validitystate.badinput": "constraint-validation",
    "badInput": "constraint-validation",
    "new badInput": "constraint-validation",
    "ValidityState.customError": "constraint-validation",
    "validitystate.customerror": "constraint-validation",
    "customError": "constraint-validation",
    "new customError": "constraint-validation",
    "ValidityState.patternMismatch": "constraint-validation",
    "validitystate.patternmismatch": "constraint-validation",
    "patternMismatch": "constraint-validation",
    "new patternMismatch": "constraint-validation",
    "ValidityState.rangeOverflow": "constraint-validation",
    "validitystate.rangeoverflow": "constraint-validation",
    "rangeOverflow": "constraint-validation",
    "new rangeOverflow": "constraint-validation",
    "ValidityState.rangeUnderflow": "constraint-validation",
    "validitystate.rangeunderflow": "constraint-validation",
    "rangeUnderflow": "constraint-validation",
    "new rangeUnderflow": "constraint-validation",
    "ValidityState.stepMismatch": "constraint-validation",
    "validitystate.stepmismatch": "constraint-validation",
    "stepMismatch": "constraint-validation",
    "new stepMismatch": "constraint-validation",
    "ValidityState.tooLong": "constraint-validation",
    "validitystate.toolong": "constraint-validation",
    "tooLong": "constraint-validation",
    "new tooLong": "constraint-validation",
    "ValidityState.tooShort": "constraint-validation",
    "validitystate.tooshort": "constraint-validation",
    "tooShort": "constraint-validation",
    "new tooShort": "constraint-validation",
    "ValidityState.typeMismatch": "constraint-validation",
    "validitystate.typemismatch": "constraint-validation",
    "typeMismatch": "constraint-validation",
    "new typeMismatch": "constraint-validation",
    "ValidityState.valid": "constraint-validation",
    "validitystate.valid": "constraint-validation",
    "valid": "constraint-validation",
    "new valid": "constraint-validation",
    "ValidityState.valueMissing": "constraint-validation",
    "validitystate.valuemissing": "constraint-validation",
    "valueMissing": "constraint-validation",
    "new valueMissing": "constraint-validation",
    "CSSStyleSheet.CSSStyleSheet": "constructed-stylesheets",
    "cssstylesheet.cssstylesheet": "constructed-stylesheets",
    "CSSStyleSheet": "constructed-stylesheets",
    "new CSSStyleSheet": "constructed-stylesheets",
    "CSSStyleSheet.replace": "constructed-stylesheets",
    "cssstylesheet.replace": "constructed-stylesheets",
    "replace": "constructed-stylesheets",
    "new replace": "constructed-stylesheets",
    "CSSStyleSheet.replaceSync": "constructed-stylesheets",
    "cssstylesheet.replacesync": "constructed-stylesheets",
    "replaceSync": "constructed-stylesheets",
    "new replaceSync": "constructed-stylesheets",
    "Document.adoptedStyleSheets": "constructed-stylesheets",
    "document.adoptedstylesheets": "constructed-stylesheets",
    "Document": "constructed-stylesheets",
    "adoptedStyleSheets": "constructed-stylesheets",
    "new adoptedStyleSheets": "constructed-stylesheets",
    "ShadowRoot.adoptedStyleSheets": "constructed-stylesheets",
    "shadowroot.adoptedstylesheets": "constructed-stylesheets",
    "ShadowRoot": "constructed-stylesheets",
    "contain-intrinsic-block-size": "contain-intrinsic-size",
    "contain": "contain-intrinsic-size",
    "contain-intrinsic": "contain-intrinsic-size",
    "contain-intrinsic-block": "contain-intrinsic-size",
    "contain-intrinsic-height": "contain-intrinsic-size",
    "contain-intrinsic-inline-size": "contain-intrinsic-size",
    "contain-intrinsic-inline": "contain-intrinsic-size",
    "contain-intrinsic-size": "contain-intrinsic-size",
    "contain-intrinsic-width": "contain-intrinsic-size",
    "CSSContainerRule": "container-queries",
    "csscontainerrule": "container-queries",
    "@container": "container-queries",
    "contain.inline-size": "container-queries",
    "contain.inline": "container-queries",
    "contain.style": "container-queries",
    "container": "container-queries",
    "container-name": "container-queries",
    "container-name.none": "container-queries",
    "container-type": "container-queries",
    "container-type.inline-size": "container-queries",
    "container-type.inline": "container-queries",
    "container-type.normal": "container-queries",
    "container-type.size": "container-queries",
    "container_query_length_units": "container-queries",
    "@container.style_queries_for_custom_properties": "container-style-queries",
    "ContentVisibilityAutoStateChangeEvent": "content-visibility",
    "contentvisibilityautostatechangeevent": "content-visibility",
    "ContentVisibilityAutoStateChangeEvent.ContentVisibilityAutoStateChangeEvent": "content-visibility",
    "contentvisibilityautostatechangeevent.contentvisibilityautostatechangeevent": "content-visibility",
    "new ContentVisibilityAutoStateChangeEvent": "content-visibility",
    "ContentVisibilityAutoStateChangeEvent.skipped": "content-visibility",
    "contentvisibilityautostatechangeevent.skipped": "content-visibility",
    "skipped": "content-visibility",
    "new skipped": "content-visibility",
    "content-visibility": "content-visibility",
    "content": "content-visibility",
    "HTMLMediaElement.controlsList": "controls-list",
    "htmlmediaelement.controlslist": "controls-list",
    "controlsList": "controls-list",
    "new controlsList": "controls-list",
    "audio.controlslist": "controls-list",
    "controlslist": "controls-list",
    "video.controlslist": "controls-list",
    "counter-set": "counter-set",
    "counter": "counter-set",
    "counter-set.list-item": "counter-set",
    "counter-set.list": "counter-set",
    "counter-set.none": "counter-set",
    "@counter-style": "counter-style",
    "@counter-style.additive-symbols": "counter-style",
    "@counter-style.fallback": "counter-style",
    "@counter-style.negative": "counter-style",
    "@counter-style.pad": "counter-style",
    "@counter-style.prefix": "counter-style",
    "@counter-style.range": "counter-style",
    "@counter-style.suffix": "counter-style",
    "@counter-style.system": "counter-style",
    "CSSCounterStyleRule": "counter-style",
    "csscounterstylerule": "counter-style",
    "CSSCounterStyleRule.additiveSymbols": "counter-style",
    "csscounterstylerule.additivesymbols": "counter-style",
    "additiveSymbols": "counter-style",
    "new additiveSymbols": "counter-style",
    "CSSCounterStyleRule.fallback": "counter-style",
    "csscounterstylerule.fallback": "counter-style",
    "fallback": "counter-style",
    "new fallback": "counter-style",
    "CSSCounterStyleRule.name": "counter-style",
    "csscounterstylerule.name": "counter-style",
    "CSSCounterStyleRule.negative": "counter-style",
    "csscounterstylerule.negative": "counter-style",
    "negative": "counter-style",
    "new negative": "counter-style",
    "CSSCounterStyleRule.pad": "counter-style",
    "csscounterstylerule.pad": "counter-style",
    "pad": "counter-style",
    "new pad": "counter-style",
    "CSSCounterStyleRule.prefix": "counter-style",
    "csscounterstylerule.prefix": "counter-style",
    "prefix": "counter-style",
    "new prefix": "counter-style",
    "CSSCounterStyleRule.range": "counter-style",
    "csscounterstylerule.range": "counter-style",
    "range": "counter-style",
    "new range": "counter-style",
    "CSSCounterStyleRule.system": "counter-style",
    "csscounterstylerule.system": "counter-style",
    "system": "counter-style",
    "new system": "counter-style",
    "CSSCounterStyleRule.suffix": "counter-style",
    "csscounterstylerule.suffix": "counter-style",
    "suffix": "counter-style",
    "new suffix": "counter-style",
    "import.import attributes.type_css": "css-modules",
    "custom-property": "custom-properties",
    "custom": "custom-properties",
    "custom-property.var": "custom-properties",
    "CustomElementRegistry.builtin_element_support": "customized-built-in-elements",
    "customelementregistry.builtin_element_support": "customized-built-in-elements",
    "builtin_element_support": "customized-built-in-elements",
    "new builtin_element_support": "customized-built-in-elements",
    "is": "customized-built-in-elements",
    "loading-is": "customized-built-in-elements",
    "HTMLDataListElement": "datalist",
    "htmldatalistelement": "datalist",
    "HTMLDataListElement.options": "datalist",
    "htmldatalistelement.options": "datalist",
    "options": "datalist",
    "new options": "datalist",
    "datalist": "datalist",
    "HTMLTemplateElement.shadowRootMode": "declarative-shadow-dom",
    "htmltemplateelement.shadowrootmode": "declarative-shadow-dom",
    "HTMLTemplateElement": "declarative-shadow-dom",
    "shadowRootMode": "declarative-shadow-dom",
    "new shadowRootMode": "declarative-shadow-dom",
    "template.shadowrootmode": "declarative-shadow-dom",
    "shadowrootmode": "declarative-shadow-dom",
    ":default": "default",
    "::default": "default",
    "HTMLDetailsElement": "details",
    "htmldetailselement": "details",
    "HTMLDetailsElement.open": "details",
    "htmldetailselement.open": "details",
    "open": "details",
    "new open": "details",
    "details": "details",
    "details.open": "details",
    "HTMLDetailsElement.name": "details-name",
    "htmldetailselement.name": "details-name",
    "details.name": "details-name",
    "DeviceMotionEvent": "device-orientation-events",
    "devicemotionevent": "device-orientation-events",
    "DeviceMotionEvent.acceleration": "device-orientation-events",
    "devicemotionevent.acceleration": "device-orientation-events",
    "acceleration": "device-orientation-events",
    "new acceleration": "device-orientation-events",
    "DeviceMotionEvent.accelerationIncludingGravity": "device-orientation-events",
    "devicemotionevent.accelerationincludinggravity": "device-orientation-events",
    "accelerationIncludingGravity": "device-orientation-events",
    "new accelerationIncludingGravity": "device-orientation-events",
    "DeviceMotionEvent.interval": "device-orientation-events",
    "devicemotionevent.interval": "device-orientation-events",
    "interval": "device-orientation-events",
    "new interval": "device-orientation-events",
    "DeviceMotionEvent.rotationRate": "device-orientation-events",
    "devicemotionevent.rotationrate": "device-orientation-events",
    "rotationRate": "device-orientation-events",
    "new rotationRate": "device-orientation-events",
    "DeviceOrientationEvent": "device-orientation-events",
    "deviceorientationevent": "device-orientation-events",
    "DeviceOrientationEvent.alpha": "device-orientation-events",
    "deviceorientationevent.alpha": "device-orientation-events",
    "alpha": "device-orientation-events",
    "new alpha": "device-orientation-events",
    "DeviceOrientationEvent.beta": "device-orientation-events",
    "deviceorientationevent.beta": "device-orientation-events",
    "beta": "device-orientation-events",
    "new beta": "device-orientation-events",
    "DeviceOrientationEvent.gamma": "device-orientation-events",
    "deviceorientationevent.gamma": "device-orientation-events",
    "gamma": "device-orientation-events",
    "new gamma": "device-orientation-events",
    "Window.devicemotion_event": "device-orientation-events",
    "window.devicemotion_event": "device-orientation-events",
    "devicemotion_event": "device-orientation-events",
    "new devicemotion_event": "device-orientation-events",
    "Window.deviceorientation_event": "device-orientation-events",
    "window.deviceorientation_event": "device-orientation-events",
    "deviceorientation_event": "device-orientation-events",
    "new deviceorientation_event": "device-orientation-events",
    "DevicePosture": "device-posture",
    "deviceposture": "device-posture",
    "DevicePosture.change_event": "device-posture",
    "deviceposture.change_event": "device-posture",
    "DevicePosture.type": "device-posture",
    "deviceposture.type": "device-posture",
    "Navigator.devicePosture": "device-posture",
    "navigator.deviceposture": "device-posture",
    "devicePosture": "device-posture",
    "new devicePosture": "device-posture",
    "@media.device-posture": "device-posture",
    "HTMLDialogElement": "dialog",
    "htmldialogelement": "dialog",
    "HTMLDialogElement.cancel_event": "dialog",
    "htmldialogelement.cancel_event": "dialog",
    "cancel_event": "dialog",
    "new cancel_event": "dialog",
    "HTMLDialogElement.close": "dialog",
    "htmldialogelement.close": "dialog",
    "HTMLDialogElement.close_event": "dialog",
    "htmldialogelement.close_event": "dialog",
    "close_event": "dialog",
    "new close_event": "dialog",
    "HTMLDialogElement.open": "dialog",
    "htmldialogelement.open": "dialog",
    "HTMLDialogElement.returnValue": "dialog",
    "htmldialogelement.returnvalue": "dialog",
    "returnValue": "dialog",
    "new returnValue": "dialog",
    "HTMLDialogElement.show": "dialog",
    "htmldialogelement.show": "dialog",
    "show": "dialog",
    "new show": "dialog",
    "HTMLDialogElement.showModal": "dialog",
    "htmldialogelement.showmodal": "dialog",
    "showModal": "dialog",
    "new showModal": "dialog",
    ":backdrop.dialog": "dialog",
    "::backdrop.dialog": "dialog",
    "dialog": "dialog",
    "dialog.open": "dialog",
    ":dir": "dir-pseudo",
    "::dir": "dir-pseudo",
    "HTMLInputElement.dirName": "dirname",
    "htmlinputelement.dirname": "dirname",
    "dirName": "dirname",
    "new dirName": "dirname",
    "HTMLTextAreaElement.dirName": "dirname",
    "htmltextareaelement.dirname": "dirname",
    "input.dirname": "dirname",
    "dirname": "dirname",
    "textarea.dirname": "dirname",
    "content-visibility.is_transitionable": "display-animation",
    "content-visibility.keyframe_animatable": "display-animation",
    "display.is_transitionable": "display-animation",
    "display.keyframe_animatable": "display-animation",
    "DocumentPictureInPicture": "document-picture-in-picture",
    "documentpictureinpicture": "document-picture-in-picture",
    "DocumentPictureInPicture.enter_event": "document-picture-in-picture",
    "documentpictureinpicture.enter_event": "document-picture-in-picture",
    "enter_event": "document-picture-in-picture",
    "new enter_event": "document-picture-in-picture",
    "DocumentPictureInPicture.requestWindow": "document-picture-in-picture",
    "documentpictureinpicture.requestwindow": "document-picture-in-picture",
    "requestWindow": "document-picture-in-picture",
    "new requestWindow": "document-picture-in-picture",
    "DocumentPictureInPicture.window": "document-picture-in-picture",
    "documentpictureinpicture.window": "document-picture-in-picture",
    "window": "document-picture-in-picture",
    "new window": "document-picture-in-picture",
    "DocumentPictureInPictureEvent": "document-picture-in-picture",
    "documentpictureinpictureevent": "document-picture-in-picture",
    "DocumentPictureInPictureEvent.DocumentPictureInPictureEvent": "document-picture-in-picture",
    "documentpictureinpictureevent.documentpictureinpictureevent": "document-picture-in-picture",
    "new DocumentPictureInPictureEvent": "document-picture-in-picture",
    "DocumentPictureInPictureEvent.window": "document-picture-in-picture",
    "documentpictureinpictureevent.window": "document-picture-in-picture",
    "Window.documentPictureInPicture": "document-picture-in-picture",
    "window.documentpictureinpicture": "document-picture-in-picture",
    "documentPictureInPicture": "document-picture-in-picture",
    "new documentPictureInPicture": "document-picture-in-picture",
    "CharacterBoundsUpdateEvent": "edit-context",
    "characterboundsupdateevent": "edit-context",
    "CharacterBoundsUpdateEvent.CharacterBoundsUpdateEvent": "edit-context",
    "characterboundsupdateevent.characterboundsupdateevent": "edit-context",
    "new CharacterBoundsUpdateEvent": "edit-context",
    "CharacterBoundsUpdateEvent.rangeEnd": "edit-context",
    "characterboundsupdateevent.rangeend": "edit-context",
    "rangeEnd": "edit-context",
    "new rangeEnd": "edit-context",
    "CharacterBoundsUpdateEvent.rangeStart": "edit-context",
    "characterboundsupdateevent.rangestart": "edit-context",
    "rangeStart": "edit-context",
    "new rangeStart": "edit-context",
    "EditContext": "edit-context",
    "editcontext": "edit-context",
    "EditContext.EditContext": "edit-context",
    "editcontext.editcontext": "edit-context",
    "new EditContext": "edit-context",
    "EditContext.attachedElements": "edit-context",
    "editcontext.attachedelements": "edit-context",
    "attachedElements": "edit-context",
    "new attachedElements": "edit-context",
    "EditContext.characterBounds": "edit-context",
    "editcontext.characterbounds": "edit-context",
    "characterBounds": "edit-context",
    "new characterBounds": "edit-context",
    "EditContext.characterBoundsRangeStart": "edit-context",
    "editcontext.characterboundsrangestart": "edit-context",
    "characterBoundsRangeStart": "edit-context",
    "new characterBoundsRangeStart": "edit-context",
    "EditContext.characterboundsupdate_event": "edit-context",
    "editcontext.characterboundsupdate_event": "edit-context",
    "characterboundsupdate_event": "edit-context",
    "new characterboundsupdate_event": "edit-context",
    "EditContext.compositionend_event": "edit-context",
    "editcontext.compositionend_event": "edit-context",
    "compositionend_event": "edit-context",
    "new compositionend_event": "edit-context",
    "EditContext.compositionstart_event": "edit-context",
    "editcontext.compositionstart_event": "edit-context",
    "compositionstart_event": "edit-context",
    "new compositionstart_event": "edit-context",
    "EditContext.selectionEnd": "edit-context",
    "editcontext.selectionend": "edit-context",
    "selectionEnd": "edit-context",
    "new selectionEnd": "edit-context",
    "EditContext.selectionStart": "edit-context",
    "editcontext.selectionstart": "edit-context",
    "selectionStart": "edit-context",
    "new selectionStart": "edit-context",
    "EditContext.text": "edit-context",
    "editcontext.text": "edit-context",
    "text": "edit-context",
    "new text": "edit-context",
    "EditContext.textformatupdate_event": "edit-context",
    "editcontext.textformatupdate_event": "edit-context",
    "textformatupdate_event": "edit-context",
    "new textformatupdate_event": "edit-context",
    "EditContext.textupdate_event": "edit-context",
    "editcontext.textupdate_event": "edit-context",
    "textupdate_event": "edit-context",
    "new textupdate_event": "edit-context",
    "EditContext.updateCharacterBounds": "edit-context",
    "editcontext.updatecharacterbounds": "edit-context",
    "updateCharacterBounds": "edit-context",
    "new updateCharacterBounds": "edit-context",
    "EditContext.updateControlBounds": "edit-context",
    "editcontext.updatecontrolbounds": "edit-context",
    "updateControlBounds": "edit-context",
    "new updateControlBounds": "edit-context",
    "EditContext.updateSelection": "edit-context",
    "editcontext.updateselection": "edit-context",
    "updateSelection": "edit-context",
    "new updateSelection": "edit-context",
    "EditContext.updateSelectionBounds": "edit-context",
    "editcontext.updateselectionbounds": "edit-context",
    "updateSelectionBounds": "edit-context",
    "new updateSelectionBounds": "edit-context",
    "EditContext.updateText": "edit-context",
    "editcontext.updatetext": "edit-context",
    "updateText": "edit-context",
    "new updateText": "edit-context",
    "HTMLElement.editContext": "edit-context",
    "htmlelement.editcontext": "edit-context",
    "editContext": "edit-context",
    "new editContext": "edit-context",
    "TextFormat": "edit-context",
    "textformat": "edit-context",
    "TextFormat.TextFormat": "edit-context",
    "textformat.textformat": "edit-context",
    "new TextFormat": "edit-context",
    "TextFormat.rangeEnd": "edit-context",
    "textformat.rangeend": "edit-context",
    "TextFormat.rangeStart": "edit-context",
    "textformat.rangestart": "edit-context",
    "TextFormat.underlineStyle": "edit-context",
    "textformat.underlinestyle": "edit-context",
    "underlineStyle": "edit-context",
    "new underlineStyle": "edit-context",
    "TextFormat.underlineThickness": "edit-context",
    "textformat.underlinethickness": "edit-context",
    "underlineThickness": "edit-context",
    "new underlineThickness": "edit-context",
    "TextFormatUpdateEvent": "edit-context",
    "textformatupdateevent": "edit-context",
    "TextFormatUpdateEvent.TextFormatUpdateEvent": "edit-context",
    "textformatupdateevent.textformatupdateevent": "edit-context",
    "new TextFormatUpdateEvent": "edit-context",
    "TextFormatUpdateEvent.getTextFormats": "edit-context",
    "textformatupdateevent.gettextformats": "edit-context",
    "getTextFormats": "edit-context",
    "new getTextFormats": "edit-context",
    "TextUpdateEvent": "edit-context",
    "textupdateevent": "edit-context",
    "TextUpdateEvent.TextUpdateEvent": "edit-context",
    "textupdateevent.textupdateevent": "edit-context",
    "new TextUpdateEvent": "edit-context",
    "TextUpdateEvent.selectionEnd": "edit-context",
    "textupdateevent.selectionend": "edit-context",
    "TextUpdateEvent.selectionStart": "edit-context",
    "textupdateevent.selectionstart": "edit-context",
    "TextUpdateEvent.text": "edit-context",
    "textupdateevent.text": "edit-context",
    "TextUpdateEvent.updateRangeEnd": "edit-context",
    "textupdateevent.updaterangeend": "edit-context",
    "updateRangeEnd": "edit-context",
    "new updateRangeEnd": "edit-context",
    "TextUpdateEvent.updateRangeStart": "edit-context",
    "textupdateevent.updaterangestart": "edit-context",
    "updateRangeStart": "edit-context",
    "new updateRangeStart": "edit-context",
    "exp": "exp-functions",
    "hypot": "exp-functions",
    "log": "exp-functions",
    "pow": "exp-functions",
    "sqrt": "exp-functions",
    "EyeDropper": "eyedropper",
    "eyedropper": "eyedropper",
    "EyeDropper.EyeDropper": "eyedropper",
    "eyedropper.eyedropper": "eyedropper",
    "new EyeDropper": "eyedropper",
    "EyeDropper.open": "eyedropper",
    "eyedropper.open": "eyedropper",
    "HTMLMediaElement.fastSeek": "fast-seek",
    "htmlmediaelement.fastseek": "fast-seek",
    "fastSeek": "fast-seek",
    "new fastSeek": "fast-seek",
    "Headers": "fetch",
    "headers": "fetch",
    "Headers.Headers": "fetch",
    "headers.headers": "fetch",
    "new Headers": "fetch",
    "Headers.append": "fetch",
    "headers.append": "fetch",
    "append": "fetch",
    "new append": "fetch",
    "Headers.delete": "fetch",
    "headers.delete": "fetch",
    "delete": "fetch",
    "new delete": "fetch",
    "Headers.get": "fetch",
    "headers.get": "fetch",
    "Headers.has": "fetch",
    "headers.has": "fetch",
    "has": "fetch",
    "new has": "fetch",
    "Headers.set": "fetch",
    "headers.set": "fetch",
    "set": "fetch",
    "new set": "fetch",
    "Request.Request": "fetch",
    "request.request": "fetch",
    "new Request": "fetch",
    "Request.arrayBuffer": "fetch",
    "request.arraybuffer": "fetch",
    "arrayBuffer": "fetch",
    "new arrayBuffer": "fetch",
    "Request.blob": "fetch",
    "request.blob": "fetch",
    "blob": "fetch",
    "new blob": "fetch",
    "Request.bodyUsed": "fetch",
    "request.bodyused": "fetch",
    "bodyUsed": "fetch",
    "new bodyUsed": "fetch",
    "Request.clone": "fetch",
    "request.clone": "fetch",
    "clone": "fetch",
    "new clone": "fetch",
    "Request.credentials": "fetch",
    "request.credentials": "fetch",
    "credentials": "fetch",
    "new credentials": "fetch",
    "Request.headers": "fetch",
    "request.headers": "fetch",
    "new headers": "fetch",
    "Request.json": "fetch",
    "request.json": "fetch",
    "json": "fetch",
    "new json": "fetch",
    "Request.method": "fetch",
    "request.method": "fetch",
    "method": "fetch",
    "new method": "fetch",
    "Request.mode": "fetch",
    "request.mode": "fetch",
    "mode": "fetch",
    "new mode": "fetch",
    "Request.text": "fetch",
    "request.text": "fetch",
    "Request.url": "fetch",
    "request.url": "fetch",
    "url": "fetch",
    "new url": "fetch",
    "Response": "fetch",
    "response": "fetch",
    "Response.Response": "fetch",
    "response.response": "fetch",
    "new Response": "fetch",
    "Response.arrayBuffer": "fetch",
    "response.arraybuffer": "fetch",
    "Response.blob": "fetch",
    "response.blob": "fetch",
    "Response.bodyUsed": "fetch",
    "response.bodyused": "fetch",
    "Response.clone": "fetch",
    "response.clone": "fetch",
    "Response.headers": "fetch",
    "response.headers": "fetch",
    "Response.json": "fetch",
    "response.json": "fetch",
    "Response.ok": "fetch",
    "response.ok": "fetch",
    "ok": "fetch",
    "new ok": "fetch",
    "Response.status": "fetch",
    "response.status": "fetch",
    "status": "fetch",
    "new status": "fetch",
    "Response.statusText": "fetch",
    "response.statustext": "fetch",
    "statusText": "fetch",
    "new statusText": "fetch",
    "Response.text": "fetch",
    "response.text": "fetch",
    "Response.type": "fetch",
    "response.type": "fetch",
    "Response.url": "fetch",
    "response.url": "fetch",
    "sec-fetch-dest": "fetch-metadata",
    "Sec_Fetch_Dest": "fetch-metadata",
    "sec-fetch-mode": "fetch-metadata",
    "Sec_Fetch_Mode": "fetch-metadata",
    "sec-fetch-site": "fetch-metadata",
    "Sec_Fetch_Site": "fetch-metadata",
    "sec-fetch-user": "fetch-metadata",
    "Sec_Fetch_User": "fetch-metadata",
    "HTMLImageElement.fetchPriority": "fetch-priority",
    "htmlimageelement.fetchpriority": "fetch-priority",
    "HTMLImageElement": "fetch-priority",
    "fetchPriority": "fetch-priority",
    "new fetchPriority": "fetch-priority",
    "HTMLLinkElement.fetchPriority": "fetch-priority",
    "htmllinkelement.fetchpriority": "fetch-priority",
    "HTMLScriptElement.fetchPriority": "fetch-priority",
    "htmlscriptelement.fetchpriority": "fetch-priority",
    "Request.Request.init_priority_parameter": "fetch-priority",
    "request.request.init_priority_parameter": "fetch-priority",
    "new init_priority_parameter": "fetch-priority",
    "Request.prototype.init_priority_parameter": "fetch-priority",
    "fetch.init_priority_parameter": "fetch-priority",
    "init_priority_parameter": "fetch-priority",
    "img.fetchpriority": "fetch-priority",
    "fetchpriority": "fetch-priority",
    "link.fetchpriority": "fetch-priority",
    "script.fetchpriority": "fetch-priority",
    "field-sizing": "field-sizing",
    "field": "field-sizing",
    "field-sizing.content": "field-sizing",
    "field-sizing.fixed": "field-sizing",
    "align-content.flex_context": "flexbox",
    "align-content.flex_context.stretch": "flexbox",
    "align-items.flex_context": "flexbox",
    "align-items.flex_context.baseline": "flexbox",
    "align-self.flex_context": "flexbox",
    "align-self.flex_context.baseline": "flexbox",
    "align-self.flex_context.stretch": "flexbox",
    "display.flex": "flexbox",
    "display.inline-flex": "flexbox",
    "display.inline": "flexbox",
    "flex": "flexbox",
    "flex-basis": "flexbox",
    "flex-basis.auto": "flexbox",
    "flex-direction": "flexbox",
    "flex-flow": "flexbox",
    "flex-grow": "flexbox",
    "flex-shrink": "flexbox",
    "flex-wrap": "flexbox",
    "justify-content.flex_context": "flexbox",
    "justify-content.flex_context.stretch": "flexbox",
    "justify-items.flex_context": "flexbox",
    "justify-self.flex_context": "flexbox",
    "order": "flexbox",
    "place-content.flex_context": "flexbox",
    "place-items.flex_context": "flexbox",
    "place-self.flex_context": "flexbox",
    "column-gap.flex_context": "flexbox-gap",
    "column": "flexbox-gap",
    "gap.flex_context": "flexbox-gap",
    "row-gap.flex_context": "flexbox-gap",
    "row": "flexbox-gap",
    ":focus-visible": "focus-visible",
    "::focus-visible": "focus-visible",
    "@font-face": "font-face",
    "@font-face.WOFF": "font-face",
    "@font-face.WOFF_2": "font-face",
    "@font-face.font-family": "font-face",
    "@font-face.src": "font-face",
    "font-optical-sizing": "font-optical-sizing",
    "font": "font-optical-sizing",
    "font-optical": "font-optical-sizing",
    "CSSFontPaletteValuesRule": "font-palette",
    "cssfontpalettevaluesrule": "font-palette",
    "CSSFontPaletteValuesRule.basePalette": "font-palette",
    "cssfontpalettevaluesrule.basepalette": "font-palette",
    "basePalette": "font-palette",
    "new basePalette": "font-palette",
    "CSSFontPaletteValuesRule.fontFamily": "font-palette",
    "cssfontpalettevaluesrule.fontfamily": "font-palette",
    "fontFamily": "font-palette",
    "new fontFamily": "font-palette",
    "CSSFontPaletteValuesRule.name": "font-palette",
    "cssfontpalettevaluesrule.name": "font-palette",
    "CSSFontPaletteValuesRule.overrideColors": "font-palette",
    "cssfontpalettevaluesrule.overridecolors": "font-palette",
    "overrideColors": "font-palette",
    "new overrideColors": "font-palette",
    "@font-palette-values": "font-palette",
    "@font-palette-values.base-palette": "font-palette",
    "@font-palette-values.font-family": "font-palette",
    "@font-palette-values.override-colors": "font-palette",
    "font-palette": "font-palette",
    "font-palette.animation_computed": "font-palette-animation",
    "font-palette.palette-mix_function": "font-palette-animation",
    "font-palette.palette": "font-palette-animation",
    "font-size-adjust": "font-size-adjust",
    "font-size": "font-size-adjust",
    "font-synthesis": "font-synthesis",
    "font-synthesis-position": "font-synthesis-position",
    "font-synthesis-position.auto": "font-synthesis-position",
    "font-synthesis-position.none": "font-synthesis-position",
    "font-synthesis-small-caps": "font-synthesis-small-caps",
    "font-synthesis-small": "font-synthesis-small-caps",
    "font-synthesis-small-caps.auto": "font-synthesis-small-caps",
    "font-synthesis-small-caps.none": "font-synthesis-small-caps",
    "font-synthesis-style": "font-synthesis-style",
    "font-synthesis-style.auto": "font-synthesis-style",
    "font-synthesis-style.none": "font-synthesis-style",
    "font-synthesis-weight": "font-synthesis-weight",
    "font-synthesis-weight.auto": "font-synthesis-weight",
    "font-synthesis-weight.none": "font-synthesis-weight",
    "CSSFontFeatureValuesRule": "font-variant-alternates",
    "cssfontfeaturevaluesrule": "font-variant-alternates",
    "CSSFontFeatureValuesRule.fontFamily": "font-variant-alternates",
    "cssfontfeaturevaluesrule.fontfamily": "font-variant-alternates",
    "@font-feature-values": "font-variant-alternates",
    "@font-feature-values.annotation": "font-variant-alternates",
    "@font-feature-values.character-variant": "font-variant-alternates",
    "@font-feature-values.historical-forms": "font-variant-alternates",
    "@font-feature-values.ornaments": "font-variant-alternates",
    "@font-feature-values.styleset": "font-variant-alternates",
    "@font-feature-values.stylistic": "font-variant-alternates",
    "@font-feature-values.swash": "font-variant-alternates",
    "font-variant-alternates": "font-variant-alternates",
    "font-variant": "font-variant-alternates",
    "font-variant-alternates.annotation": "font-variant-alternates",
    "font-variant-alternates.character_variant": "font-variant-alternates",
    "font-variant-alternates.ornaments": "font-variant-alternates",
    "font-variant-alternates.styleset": "font-variant-alternates",
    "font-variant-alternates.stylistic": "font-variant-alternates",
    "font-variant-alternates.swash": "font-variant-alternates",
    "HTMLElement.attachInternals": "form-associated-custom-elements",
    "htmlelement.attachinternals": "form-associated-custom-elements",
    "attachInternals": "form-associated-custom-elements",
    "new attachInternals": "form-associated-custom-elements",
    "ElementInternals": "form-associated-custom-elements",
    "elementinternals": "form-associated-custom-elements",
    "ElementInternals.checkValidity": "form-associated-custom-elements",
    "elementinternals.checkvalidity": "form-associated-custom-elements",
    "ElementInternals.form": "form-associated-custom-elements",
    "elementinternals.form": "form-associated-custom-elements",
    "form": "form-associated-custom-elements",
    "new form": "form-associated-custom-elements",
    "ElementInternals.labels": "form-associated-custom-elements",
    "elementinternals.labels": "form-associated-custom-elements",
    "labels": "form-associated-custom-elements",
    "new labels": "form-associated-custom-elements",
    "ElementInternals.reportValidity": "form-associated-custom-elements",
    "elementinternals.reportvalidity": "form-associated-custom-elements",
    "ElementInternals.setFormValue": "form-associated-custom-elements",
    "elementinternals.setformvalue": "form-associated-custom-elements",
    "setFormValue": "form-associated-custom-elements",
    "new setFormValue": "form-associated-custom-elements",
    "ElementInternals.setValidity": "form-associated-custom-elements",
    "elementinternals.setvalidity": "form-associated-custom-elements",
    "setValidity": "form-associated-custom-elements",
    "new setValidity": "form-associated-custom-elements",
    "ElementInternals.validationMessage": "form-associated-custom-elements",
    "elementinternals.validationmessage": "form-associated-custom-elements",
    "ElementInternals.validity": "form-associated-custom-elements",
    "elementinternals.validity": "form-associated-custom-elements",
    "ElementInternals.willValidate": "form-associated-custom-elements",
    "elementinternals.willvalidate": "form-associated-custom-elements",
    "Document.exitFullscreen": "fullscreen",
    "document.exitfullscreen": "fullscreen",
    "exitFullscreen": "fullscreen",
    "new exitFullscreen": "fullscreen",
    "Document.exitFullscreen.returns_promise": "fullscreen",
    "document.exitfullscreen.returns_promise": "fullscreen",
    "new returns_promise": "fullscreen",
    "Document.prototype.returns_promise": "fullscreen",
    "Document.fullscreenchange_event": "fullscreen",
    "document.fullscreenchange_event": "fullscreen",
    "fullscreenchange_event": "fullscreen",
    "new fullscreenchange_event": "fullscreen",
    "Document.fullscreenElement": "fullscreen",
    "document.fullscreenelement": "fullscreen",
    "fullscreenElement": "fullscreen",
    "new fullscreenElement": "fullscreen",
    "Document.fullscreenEnabled": "fullscreen",
    "document.fullscreenenabled": "fullscreen",
    "fullscreenEnabled": "fullscreen",
    "new fullscreenEnabled": "fullscreen",
    "Document.fullscreenerror_event": "fullscreen",
    "document.fullscreenerror_event": "fullscreen",
    "fullscreenerror_event": "fullscreen",
    "new fullscreenerror_event": "fullscreen",
    "Element.fullscreenchange_event": "fullscreen",
    "element.fullscreenchange_event": "fullscreen",
    "Element.fullscreenerror_event": "fullscreen",
    "element.fullscreenerror_event": "fullscreen",
    "Element.requestFullscreen": "fullscreen",
    "element.requestfullscreen": "fullscreen",
    "requestFullscreen": "fullscreen",
    "new requestFullscreen": "fullscreen",
    "Element.requestFullscreen.returns_promise": "fullscreen",
    "element.requestfullscreen.returns_promise": "fullscreen",
    "Element.prototype.returns_promise": "fullscreen",
    "HTMLIFrameElement.allowFullscreen": "fullscreen",
    "htmliframeelement.allowfullscreen": "fullscreen",
    "HTMLIFrameElement": "fullscreen",
    "allowFullscreen": "fullscreen",
    "new allowFullscreen": "fullscreen",
    "ShadowRoot.fullscreenElement": "fullscreen",
    "shadowroot.fullscreenelement": "fullscreen",
    ":backdrop.fullscreen": "fullscreen",
    "::backdrop.fullscreen": "fullscreen",
    ":fullscreen": "fullscreen",
    "::fullscreen": "fullscreen",
    "iframe.allowfullscreen": "fullscreen",
    "allowfullscreen": "fullscreen",
    "align-content.grid_context": "grid",
    "align-items.grid_context": "grid",
    "align-items.grid_context.start_end": "grid",
    "align-self.grid_context": "grid",
    "column-gap.grid_context": "grid",
    "display.grid": "grid",
    "display.inline-grid": "grid",
    "gap.grid_context": "grid",
    "gap.grid_context.calc_values": "grid",
    "gap.grid_context.percentage_values": "grid",
    "grid": "grid",
    "grid-area": "grid",
    "grid-auto-columns": "grid",
    "grid-auto": "grid",
    "grid-auto-flow": "grid",
    "grid-auto-rows": "grid",
    "grid-column": "grid",
    "grid-column-end": "grid",
    "grid-column-start": "grid",
    "grid-row": "grid",
    "grid-row-end": "grid",
    "grid-row-start": "grid",
    "grid-template": "grid",
    "grid-template-areas": "grid",
    "grid-template-columns": "grid",
    "grid-template-columns.fit-content": "grid",
    "grid-template-columns.fit": "grid",
    "grid-template-columns.minmax": "grid",
    "grid-template-columns.repeat": "grid",
    "grid-template-rows": "grid",
    "grid-template-rows.fit-content": "grid",
    "grid-template-rows.fit": "grid",
    "grid-template-rows.minmax": "grid",
    "grid-template-rows.repeat": "grid",
    "justify-content.grid_context": "grid",
    "justify-items.grid_context": "grid",
    "justify-self.grid_context": "grid",
    "place-content.grid_context": "grid",
    "place-items.grid_context": "grid",
    "place-self.grid_context": "grid",
    "row-gap.grid_context": "grid",
    "grid-template-columns.animation": "grid-animation",
    "grid-template-rows.animation": "grid-animation",
    ":has": "has",
    "::has": "has",
    "hidden.until-found_value": "hidden-until-found",
    "loading-hidden.until-found_value": "hidden-until-found",
    "CSS.highlights_static": "highlight",
    "css.highlights_static": "highlight",
    "CSS": "highlight",
    "highlights_static": "highlight",
    "new highlights_static": "highlight",
    "Highlight": "highlight",
    "highlight": "highlight",
    "Highlight.@@iterator": "highlight",
    "highlight.@@iterator": "highlight",
    "new @@iterator": "highlight",
    "Highlight.Highlight": "highlight",
    "highlight.highlight": "highlight",
    "new Highlight": "highlight",
    "Highlight.add": "highlight",
    "highlight.add": "highlight",
    "add": "highlight",
    "new add": "highlight",
    "Highlight.clear": "highlight",
    "highlight.clear": "highlight",
    "clear": "highlight",
    "new clear": "highlight",
    "Highlight.delete": "highlight",
    "highlight.delete": "highlight",
    "Highlight.entries": "highlight",
    "highlight.entries": "highlight",
    "new entries": "highlight",
    "Highlight.forEach": "highlight",
    "highlight.foreach": "highlight",
    "new forEach": "highlight",
    "Highlight.has": "highlight",
    "highlight.has": "highlight",
    "Highlight.keys": "highlight",
    "highlight.keys": "highlight",
    "new keys": "highlight",
    "Highlight.priority": "highlight",
    "highlight.priority": "highlight",
    "priority": "highlight",
    "new priority": "highlight",
    "Highlight.size": "highlight",
    "highlight.size": "highlight",
    "size": "highlight",
    "new size": "highlight",
    "Highlight.type": "highlight",
    "highlight.type": "highlight",
    "Highlight.values": "highlight",
    "highlight.values": "highlight",
    "new values": "highlight",
    "HighlightRegistry": "highlight",
    "highlightregistry": "highlight",
    "HighlightRegistry.@@iterator": "highlight",
    "highlightregistry.@@iterator": "highlight",
    "HighlightRegistry.clear": "highlight",
    "highlightregistry.clear": "highlight",
    "HighlightRegistry.delete": "highlight",
    "highlightregistry.delete": "highlight",
    "HighlightRegistry.entries": "highlight",
    "highlightregistry.entries": "highlight",
    "HighlightRegistry.forEach": "highlight",
    "highlightregistry.foreach": "highlight",
    "HighlightRegistry.get": "highlight",
    "highlightregistry.get": "highlight",
    "HighlightRegistry.has": "highlight",
    "highlightregistry.has": "highlight",
    "HighlightRegistry.keys": "highlight",
    "highlightregistry.keys": "highlight",
    "HighlightRegistry.set": "highlight",
    "highlightregistry.set": "highlight",
    "HighlightRegistry.size": "highlight",
    "highlightregistry.size": "highlight",
    "HighlightRegistry.values": "highlight",
    "highlightregistry.values": "highlight",
    ":highlight": "highlight",
    "::highlight": "highlight",
    "HTMLInputElement.capture": "html-media-capture",
    "htmlinputelement.capture": "html-media-capture",
    "capture": "html-media-capture",
    "new capture": "html-media-capture",
    "input.capture": "html-media-capture",
    "hyphens": "hyphens",
    "ic": "ic",
    "IdleDetector": "idle-detection",
    "idledetector": "idle-detection",
    "IdleDetector.IdleDetector": "idle-detection",
    "idledetector.idledetector": "idle-detection",
    "new IdleDetector": "idle-detection",
    "IdleDetector.change_event": "idle-detection",
    "idledetector.change_event": "idle-detection",
    "IdleDetector.requestPermission_static": "idle-detection",
    "idledetector.requestpermission_static": "idle-detection",
    "requestPermission_static": "idle-detection",
    "new requestPermission_static": "idle-detection",
    "IdleDetector.screenState": "idle-detection",
    "idledetector.screenstate": "idle-detection",
    "screenState": "idle-detection",
    "new screenState": "idle-detection",
    "IdleDetector.start": "idle-detection",
    "idledetector.start": "idle-detection",
    "start": "idle-detection",
    "new start": "idle-detection",
    "IdleDetector.userState": "idle-detection",
    "idledetector.userstate": "idle-detection",
    "userState": "idle-detection",
    "new userState": "idle-detection",
    "permissions-policy.idle-detection": "idle-detection",
    "Permissions_Policy.idle_detection": "idle-detection",
    "background-image.image-set": "image-set",
    "background-image.image": "image-set",
    "content.image-set": "image-set",
    "content.image": "image-set",
    "image-set": "image-set",
    "script.type.importmap": "import-maps",
    ":indeterminate": "indeterminate",
    "::indeterminate": "indeterminate",
    ":indeterminate.checkbox": "indeterminate",
    "::indeterminate.checkbox": "indeterminate",
    ":indeterminate.progress": "indeterminate",
    "::indeterminate.progress": "indeterminate",
    ":indeterminate.radio": "indeterminate",
    "::indeterminate.radio": "indeterminate",
    "rotate": "individual-transforms",
    "scale": "individual-transforms",
    "translate": "individual-transforms",
    "HTMLElement.inert": "inert",
    "htmlelement.inert": "inert",
    "inert": "inert",
    "new inert": "inert",
    "loading-inert": "inert",
    "Element.input_event": "input-event",
    "element.input_event": "input-event",
    "input_event": "input-event",
    "new input_event": "input-event",
    "InputEvent": "input-event",
    "inputevent": "input-event",
    "InputEvent.InputEvent": "input-event",
    "inputevent.inputevent": "input-event",
    "new InputEvent": "input-event",
    "InputEvent.data": "input-event",
    "inputevent.data": "input-event",
    "data": "input-event",
    "new data": "input-event",
    "InputEvent.dataTransfer": "input-event",
    "inputevent.datatransfer": "input-event",
    "dataTransfer": "input-event",
    "new dataTransfer": "input-event",
    "InputEvent.getTargetRanges": "input-event",
    "inputevent.gettargetranges": "input-event",
    "getTargetRanges": "input-event",
    "new getTargetRanges": "input-event",
    "InputEvent.inputType": "input-event",
    "inputevent.inputtype": "input-event",
    "inputType": "input-event",
    "new inputType": "input-event",
    "InputEvent.isComposing": "input-event",
    "inputevent.iscomposing": "input-event",
    "isComposing": "input-event",
    "new isComposing": "input-event",
    "IntersectionObserver": "intersection-observer",
    "intersectionobserver": "intersection-observer",
    "IntersectionObserver.IntersectionObserver": "intersection-observer",
    "intersectionobserver.intersectionobserver": "intersection-observer",
    "new IntersectionObserver": "intersection-observer",
    "IntersectionObserver.disconnect": "intersection-observer",
    "intersectionobserver.disconnect": "intersection-observer",
    "IntersectionObserver.observe": "intersection-observer",
    "intersectionobserver.observe": "intersection-observer",
    "IntersectionObserver.root": "intersection-observer",
    "intersectionobserver.root": "intersection-observer",
    "root": "intersection-observer",
    "new root": "intersection-observer",
    "IntersectionObserver.rootMargin": "intersection-observer",
    "intersectionobserver.rootmargin": "intersection-observer",
    "rootMargin": "intersection-observer",
    "new rootMargin": "intersection-observer",
    "IntersectionObserver.takeRecords": "intersection-observer",
    "intersectionobserver.takerecords": "intersection-observer",
    "IntersectionObserver.thresholds": "intersection-observer",
    "intersectionobserver.thresholds": "intersection-observer",
    "thresholds": "intersection-observer",
    "new thresholds": "intersection-observer",
    "IntersectionObserver.unobserve": "intersection-observer",
    "intersectionobserver.unobserve": "intersection-observer",
    "IntersectionObserverEntry": "intersection-observer",
    "intersectionobserverentry": "intersection-observer",
    "IntersectionObserverEntry.boundingClientRect": "intersection-observer",
    "intersectionobserverentry.boundingclientrect": "intersection-observer",
    "boundingClientRect": "intersection-observer",
    "new boundingClientRect": "intersection-observer",
    "IntersectionObserverEntry.intersectionRatio": "intersection-observer",
    "intersectionobserverentry.intersectionratio": "intersection-observer",
    "intersectionRatio": "intersection-observer",
    "new intersectionRatio": "intersection-observer",
    "IntersectionObserverEntry.intersectionRect": "intersection-observer",
    "intersectionobserverentry.intersectionrect": "intersection-observer",
    "intersectionRect": "intersection-observer",
    "new intersectionRect": "intersection-observer",
    "IntersectionObserverEntry.isIntersecting": "intersection-observer",
    "intersectionobserverentry.isintersecting": "intersection-observer",
    "isIntersecting": "intersection-observer",
    "new isIntersecting": "intersection-observer",
    "IntersectionObserverEntry.rootBounds": "intersection-observer",
    "intersectionobserverentry.rootbounds": "intersection-observer",
    "rootBounds": "intersection-observer",
    "new rootBounds": "intersection-observer",
    "IntersectionObserverEntry.target": "intersection-observer",
    "intersectionobserverentry.target": "intersection-observer",
    "target": "intersection-observer",
    "new target": "intersection-observer",
    "IntersectionObserverEntry.time": "intersection-observer",
    "intersectionobserverentry.time": "intersection-observer",
    ":is": "is",
    "::is": "is",
    ":is.forgiving_selector_list": "is",
    "::is.forgiving_selector_list": "is",
    "script.nomodule": "js-modules",
    "nomodule": "js-modules",
    "script.type.module": "js-modules",
    "export": "js-modules",
    "export.default": "js-modules",
    "import": "js-modules",
    "ServiceWorker.ecmascript_modules": "js-modules-service-workers",
    "serviceworker.ecmascript_modules": "js-modules-service-workers",
    "ServiceWorker": "js-modules-service-workers",
    "ecmascript_modules": "js-modules-service-workers",
    "new ecmascript_modules": "js-modules-service-workers",
    "import.service worker_support": "js-modules-service-workers",
    "SharedWorker.SharedWorker.ecmascript_modules": "js-modules-shared-workers",
    "sharedworker.sharedworker.ecmascript_modules": "js-modules-shared-workers",
    "SharedWorker": "js-modules-shared-workers",
    "SharedWorker.SharedWorker": "js-modules-shared-workers",
    "SharedWorker.prototype.ecmascript_modules": "js-modules-shared-workers",
    "Worker.Worker.ecmascript_modules": "js-modules-workers",
    "worker.worker.ecmascript_modules": "js-modules-workers",
    "Worker": "js-modules-workers",
    "Worker.Worker": "js-modules-workers",
    "Worker.prototype.ecmascript_modules": "js-modules-workers",
    "Worker.Worker.options_type_parameter": "js-modules-workers",
    "worker.worker.options_type_parameter": "js-modules-workers",
    "new options_type_parameter": "js-modules-workers",
    "Worker.prototype.options_type_parameter": "js-modules-workers",
    "import.worker_support": "js-modules-workers",
    "import.worker support": "js-modules-workers",
    "lab": "lab",
    "lch": "lab",
    "lh": "lh",
    "light-dark": "light-dark",
    "line-clamp": "line-clamp",
    "line": "line-clamp",
    "linear-function": "linear-easing",
    "HTMLIFrameElement.loading": "loading-lazy",
    "htmliframeelement.loading": "loading-lazy",
    "loading": "loading-lazy",
    "new loading": "loading-lazy",
    "HTMLImageElement.loading": "loading-lazy",
    "htmlimageelement.loading": "loading-lazy",
    "iframe.loading": "loading-lazy",
    "loading-lazy": "loading-lazy",
    "loading-eager": "loading-lazy",
    "img.loading": "loading-lazy",
    "ManagedMediaSource": "managed-media-source",
    "managedmediasource": "managed-media-source",
    "ManagedMediaSource.ManagedMediaSource": "managed-media-source",
    "managedmediasource.managedmediasource": "managed-media-source",
    "new ManagedMediaSource": "managed-media-source",
    "ManagedMediaSource.endstreaming_event": "managed-media-source",
    "managedmediasource.endstreaming_event": "managed-media-source",
    "endstreaming_event": "managed-media-source",
    "new endstreaming_event": "managed-media-source",
    "ManagedMediaSource.startstreaming_event": "managed-media-source",
    "managedmediasource.startstreaming_event": "managed-media-source",
    "startstreaming_event": "managed-media-source",
    "new startstreaming_event": "managed-media-source",
    "ManagedMediaSource.streaming": "managed-media-source",
    "managedmediasource.streaming": "managed-media-source",
    "streaming": "managed-media-source",
    "new streaming": "managed-media-source",
    "ManagedSourceBuffer": "managed-media-source",
    "managedsourcebuffer": "managed-media-source",
    "ManagedSourceBuffer.bufferedchange_event": "managed-media-source",
    "managedsourcebuffer.bufferedchange_event": "managed-media-source",
    "bufferedchange_event": "managed-media-source",
    "new bufferedchange_event": "managed-media-source",
    "Map": "map",
    "Map.Map": "map",
    "Map.prototype.Map": "map",
    "Map.Map.iterable_allowed": "map",
    "Map.Map.null_allowed": "map",
    "Map.clear": "map",
    "Map.prototype.clear": "map",
    "Map.delete": "map",
    "Map.prototype.delete": "map",
    "Map.entries": "map",
    "Map.prototype.entries": "map",
    "Map.forEach": "map",
    "Map.prototype.forEach": "map",
    "Map.get": "map",
    "Map.prototype.get": "map",
    "Map.has": "map",
    "Map.prototype.has": "map",
    "Map.key_equality_for_zeros": "map",
    "Map.prototype.key_equality_for_zeros": "map",
    "key_equality_for_zeros": "map",
    "Map.keys": "map",
    "Map.prototype.keys": "map",
    "Map.set": "map",
    "Map.prototype.set": "map",
    "Map.size": "map",
    "Map.prototype.size": "map",
    "Map.values": "map",
    "Map.prototype.values": "map",
    "Map.@@iterator": "map",
    "Map.prototype.@@iterator": "map",
    "Map.@@species": "map",
    "Map.prototype.@@species": "map",
    "@@species": "map",
    "margin-trim": "margin-trim",
    "margin-trim.block": "margin-trim",
    "margin-trim.block-end": "margin-trim",
    "margin-trim.block-start": "margin-trim",
    "margin-trim.inline": "margin-trim",
    "margin-trim.inline-end": "margin-trim",
    "margin-trim.inline-start": "margin-trim",
    "margin-trim.none": "margin-trim",
    "mask": "masks",
    "mask-clip": "masks",
    "mask-composite": "masks",
    "mask-image": "masks",
    "mask-mode": "masks",
    "mask-origin": "masks",
    "mask-position": "masks",
    "mask-repeat": "masks",
    "mask-size": "masks",
    "align-tracks": "masonry",
    "grid-template-columns.masonry": "masonry",
    "grid-template-rows.masonry": "masonry",
    "justify-tracks": "masonry",
    "masonry-auto-flow": "masonry",
    "masonry": "masonry",
    "masonry-auto": "masonry",
    "MediaDeviceInfo": "media-capture",
    "mediadeviceinfo": "media-capture",
    "MediaDeviceInfo.deviceId": "media-capture",
    "mediadeviceinfo.deviceid": "media-capture",
    "deviceId": "media-capture",
    "new deviceId": "media-capture",
    "MediaDeviceInfo.groupId": "media-capture",
    "mediadeviceinfo.groupid": "media-capture",
    "groupId": "media-capture",
    "new groupId": "media-capture",
    "MediaDeviceInfo.kind": "media-capture",
    "mediadeviceinfo.kind": "media-capture",
    "MediaDeviceInfo.label": "media-capture",
    "mediadeviceinfo.label": "media-capture",
    "MediaDevices": "media-capture",
    "mediadevices": "media-capture",
    "MediaDevices.enumerateDevices": "media-capture",
    "mediadevices.enumeratedevices": "media-capture",
    "enumerateDevices": "media-capture",
    "new enumerateDevices": "media-capture",
    "MediaDevices.getUserMedia": "media-capture",
    "mediadevices.getusermedia": "media-capture",
    "getUserMedia": "media-capture",
    "new getUserMedia": "media-capture",
    "MediaStream.getAudioTracks": "media-capture",
    "mediastream.getaudiotracks": "media-capture",
    "MediaStream": "media-capture",
    "getAudioTracks": "media-capture",
    "new getAudioTracks": "media-capture",
    "MediaStream.getTracks": "media-capture",
    "mediastream.gettracks": "media-capture",
    "getTracks": "media-capture",
    "new getTracks": "media-capture",
    "MediaStream.getVideoTracks": "media-capture",
    "mediastream.getvideotracks": "media-capture",
    "getVideoTracks": "media-capture",
    "new getVideoTracks": "media-capture",
    "MediaStreamTrack": "media-capture",
    "mediastreamtrack": "media-capture",
    "MediaStreamTrack.enabled": "media-capture",
    "mediastreamtrack.enabled": "media-capture",
    "MediaStreamTrack.id": "media-capture",
    "mediastreamtrack.id": "media-capture",
    "MediaStreamTrack.kind": "media-capture",
    "mediastreamtrack.kind": "media-capture",
    "MediaStreamTrack.label": "media-capture",
    "mediastreamtrack.label": "media-capture",
    "MediaStreamTrack.stop": "media-capture",
    "mediastreamtrack.stop": "media-capture",
    "stop": "media-capture",
    "new stop": "media-capture",
    ":buffering": "media-pseudos",
    "::buffering": "media-pseudos",
    ":muted": "media-pseudos",
    "::muted": "media-pseudos",
    ":paused": "media-pseudos",
    "::paused": "media-pseudos",
    ":playing": "media-pseudos",
    "::playing": "media-pseudos",
    ":seeking": "media-pseudos",
    "::seeking": "media-pseudos",
    ":stalled": "media-pseudos",
    "::stalled": "media-pseudos",
    ":volume-locked": "media-pseudos",
    "::volume-locked": "media-pseudos",
    "@media.range_syntax": "media-query-range-syntax",
    "MediaMetadata": "media-session",
    "mediametadata": "media-session",
    "MediaMetadata.album": "media-session",
    "mediametadata.album": "media-session",
    "album": "media-session",
    "new album": "media-session",
    "MediaMetadata.artist": "media-session",
    "mediametadata.artist": "media-session",
    "artist": "media-session",
    "new artist": "media-session",
    "MediaMetadata.artwork": "media-session",
    "mediametadata.artwork": "media-session",
    "artwork": "media-session",
    "new artwork": "media-session",
    "MediaMetadata.MediaMetadata": "media-session",
    "mediametadata.mediametadata": "media-session",
    "new MediaMetadata": "media-session",
    "MediaMetadata.title": "media-session",
    "mediametadata.title": "media-session",
    "title": "media-session",
    "new title": "media-session",
    "MediaSession": "media-session",
    "mediasession": "media-session",
    "MediaSession.metadata": "media-session",
    "mediasession.metadata": "media-session",
    "metadata": "media-session",
    "new metadata": "media-session",
    "MediaSession.playbackState": "media-session",
    "mediasession.playbackstate": "media-session",
    "playbackState": "media-session",
    "new playbackState": "media-session",
    "MediaSession.setActionHandler": "media-session",
    "mediasession.setactionhandler": "media-session",
    "setActionHandler": "media-session",
    "new setActionHandler": "media-session",
    "MediaSession.setActionHandler.nexttrack_type": "media-session",
    "mediasession.setactionhandler.nexttrack_type": "media-session",
    "new nexttrack_type": "media-session",
    "MediaSession.prototype.nexttrack_type": "media-session",
    "MediaSession.setActionHandler.pause_type": "media-session",
    "mediasession.setactionhandler.pause_type": "media-session",
    "new pause_type": "media-session",
    "MediaSession.prototype.pause_type": "media-session",
    "MediaSession.setActionHandler.play_type": "media-session",
    "mediasession.setactionhandler.play_type": "media-session",
    "new play_type": "media-session",
    "MediaSession.prototype.play_type": "media-session",
    "MediaSession.setActionHandler.previoustrack_type": "media-session",
    "mediasession.setactionhandler.previoustrack_type": "media-session",
    "new previoustrack_type": "media-session",
    "MediaSession.prototype.previoustrack_type": "media-session",
    "MediaSession.setActionHandler.seekbackward_type": "media-session",
    "mediasession.setactionhandler.seekbackward_type": "media-session",
    "new seekbackward_type": "media-session",
    "MediaSession.prototype.seekbackward_type": "media-session",
    "MediaSession.setActionHandler.seekforward_type": "media-session",
    "mediasession.setactionhandler.seekforward_type": "media-session",
    "new seekforward_type": "media-session",
    "MediaSession.prototype.seekforward_type": "media-session",
    "Navigator.mediaSession": "media-session",
    "navigator.mediasession": "media-session",
    "mediaSession": "media-session",
    "new mediaSession": "media-session",
    "MediaSource": "media-source",
    "mediasource": "media-source",
    "SourceBuffer": "media-source",
    "sourcebuffer": "media-source",
    "SourceBufferList": "media-source",
    "sourcebufferlist": "media-source",
    "DedicatedWorkerGlobalScope.messageerror_event": "messageerror",
    "dedicatedworkerglobalscope.messageerror_event": "messageerror",
    "DedicatedWorkerGlobalScope": "messageerror",
    "MessagePort.messageerror_event": "messageerror",
    "messageport.messageerror_event": "messageerror",
    "MessagePort": "messageerror",
    "ServiceWorkerContainer.messageerror_event": "messageerror",
    "serviceworkercontainer.messageerror_event": "messageerror",
    "ServiceWorkerContainer": "messageerror",
    "Window.messageerror_event": "messageerror",
    "window.messageerror_event": "messageerror",
    "clamp": "min-max-clamp",
    ":modal": "modal",
    "::modal": "modal",
    "link.rel.modulepreload": "modulepreload",
    "rel": "modulepreload",
    "offset": "motion-path",
    "offset-anchor": "motion-path",
    "offset-distance": "motion-path",
    "offset-path": "motion-path",
    "offset-path.path": "motion-path",
    "offset-rotate": "motion-path",
    "NavigateEvent": "navigation",
    "navigateevent": "navigation",
    "NavigateEvent.NavigateEvent": "navigation",
    "navigateevent.navigateevent": "navigation",
    "new NavigateEvent": "navigation",
    "NavigateEvent.destination": "navigation",
    "navigateevent.destination": "navigation",
    "destination": "navigation",
    "new destination": "navigation",
    "NavigateEvent.downloadRequest": "navigation",
    "navigateevent.downloadrequest": "navigation",
    "downloadRequest": "navigation",
    "new downloadRequest": "navigation",
    "NavigateEvent.formData": "navigation",
    "navigateevent.formdata": "navigation",
    "formData": "navigation",
    "new formData": "navigation",
    "NavigateEvent.hashChange": "navigation",
    "navigateevent.hashchange": "navigation",
    "hashChange": "navigation",
    "new hashChange": "navigation",
    "NavigateEvent.info": "navigation",
    "navigateevent.info": "navigation",
    "info": "navigation",
    "new info": "navigation",
    "NavigateEvent.navigationType": "navigation",
    "navigateevent.navigationtype": "navigation",
    "navigationType": "navigation",
    "new navigationType": "navigation",
    "NavigateEvent.signal": "navigation",
    "navigateevent.signal": "navigation",
    "NavigateEvent.userInitiated": "navigation",
    "navigateevent.userinitiated": "navigation",
    "userInitiated": "navigation",
    "new userInitiated": "navigation",
    "Navigation": "navigation",
    "navigation": "navigation",
    "Navigation.back": "navigation",
    "navigation.back": "navigation",
    "back": "navigation",
    "new back": "navigation",
    "Navigation.canGoBack": "navigation",
    "navigation.cangoback": "navigation",
    "canGoBack": "navigation",
    "new canGoBack": "navigation",
    "Navigation.canGoForward": "navigation",
    "navigation.cangoforward": "navigation",
    "canGoForward": "navigation",
    "new canGoForward": "navigation",
    "Navigation.currentEntry": "navigation",
    "navigation.currententry": "navigation",
    "currentEntry": "navigation",
    "new currentEntry": "navigation",
    "Navigation.currententrychange_event": "navigation",
    "navigation.currententrychange_event": "navigation",
    "currententrychange_event": "navigation",
    "new currententrychange_event": "navigation",
    "Navigation.entries": "navigation",
    "navigation.entries": "navigation",
    "Navigation.forward": "navigation",
    "navigation.forward": "navigation",
    "forward": "navigation",
    "new forward": "navigation",
    "Navigation.navigate": "navigation",
    "navigation.navigate": "navigation",
    "navigate": "navigation",
    "new navigate": "navigation",
    "Navigation.navigate_event": "navigation",
    "navigation.navigate_event": "navigation",
    "navigate_event": "navigation",
    "new navigate_event": "navigation",
    "Navigation.navigateerror_event": "navigation",
    "navigation.navigateerror_event": "navigation",
    "navigateerror_event": "navigation",
    "new navigateerror_event": "navigation",
    "Navigation.navigatesuccess_event": "navigation",
    "navigation.navigatesuccess_event": "navigation",
    "navigatesuccess_event": "navigation",
    "new navigatesuccess_event": "navigation",
    "Navigation.reload": "navigation",
    "navigation.reload": "navigation",
    "reload": "navigation",
    "new reload": "navigation",
    "Navigation.transition": "navigation",
    "navigation.transition": "navigation",
    "transition": "navigation",
    "new transition": "navigation",
    "Navigation.traverseTo": "navigation",
    "navigation.traverseto": "navigation",
    "traverseTo": "navigation",
    "new traverseTo": "navigation",
    "Navigation.updateCurrentEntry": "navigation",
    "navigation.updatecurrententry": "navigation",
    "updateCurrentEntry": "navigation",
    "new updateCurrentEntry": "navigation",
    "NavigationCurrentEntryChangeEvent": "navigation",
    "navigationcurrententrychangeevent": "navigation",
    "NavigationCurrentEntryChangeEvent.NavigationCurrentEntryChangeEvent": "navigation",
    "navigationcurrententrychangeevent.navigationcurrententrychangeevent": "navigation",
    "new NavigationCurrentEntryChangeEvent": "navigation",
    "NavigationCurrentEntryChangeEvent.from": "navigation",
    "navigationcurrententrychangeevent.from": "navigation",
    "new from": "navigation",
    "NavigationCurrentEntryChangeEvent.navigationType": "navigation",
    "navigationcurrententrychangeevent.navigationtype": "navigation",
    "NavigationDestination": "navigation",
    "navigationdestination": "navigation",
    "NavigationDestination.getState": "navigation",
    "navigationdestination.getstate": "navigation",
    "getState": "navigation",
    "new getState": "navigation",
    "NavigationDestination.id": "navigation",
    "navigationdestination.id": "navigation",
    "NavigationDestination.index": "navigation",
    "navigationdestination.index": "navigation",
    "index": "navigation",
    "new index": "navigation",
    "NavigationDestination.key": "navigation",
    "navigationdestination.key": "navigation",
    "key": "navigation",
    "new key": "navigation",
    "NavigationDestination.sameDocument": "navigation",
    "navigationdestination.samedocument": "navigation",
    "sameDocument": "navigation",
    "new sameDocument": "navigation",
    "NavigationDestination.url": "navigation",
    "navigationdestination.url": "navigation",
    "NavigationHistoryEntry": "navigation",
    "navigationhistoryentry": "navigation",
    "NavigationHistoryEntry.dispose_event": "navigation",
    "navigationhistoryentry.dispose_event": "navigation",
    "dispose_event": "navigation",
    "new dispose_event": "navigation",
    "NavigationHistoryEntry.getState": "navigation",
    "navigationhistoryentry.getstate": "navigation",
    "NavigationHistoryEntry.id": "navigation",
    "navigationhistoryentry.id": "navigation",
    "NavigationHistoryEntry.index": "navigation",
    "navigationhistoryentry.index": "navigation",
    "NavigationHistoryEntry.key": "navigation",
    "navigationhistoryentry.key": "navigation",
    "NavigationHistoryEntry.sameDocument": "navigation",
    "navigationhistoryentry.samedocument": "navigation",
    "NavigationHistoryEntry.url": "navigation",
    "navigationhistoryentry.url": "navigation",
    "NavigationTransition": "navigation",
    "navigationtransition": "navigation",
    "NavigationTransition.finished": "navigation",
    "navigationtransition.finished": "navigation",
    "finished": "navigation",
    "new finished": "navigation",
    "NavigationTransition.from": "navigation",
    "navigationtransition.from": "navigation",
    "NavigationTransition.navigationType": "navigation",
    "navigationtransition.navigationtype": "navigation",
    "Window.navigation": "navigation",
    "window.navigation": "navigation",
    "new navigation": "navigation",
    "CSSStyleRule.cssRules": "nesting",
    "cssstylerule.cssrules": "nesting",
    "CSSStyleRule": "nesting",
    "cssRules": "nesting",
    "new cssRules": "nesting",
    "CSSStyleRule.deleteRule": "nesting",
    "cssstylerule.deleterule": "nesting",
    "deleteRule": "nesting",
    "new deleteRule": "nesting",
    "CSSStyleRule.insertRule": "nesting",
    "cssstylerule.insertrule": "nesting",
    "insertRule": "nesting",
    "new insertRule": "nesting",
    ":nesting": "nesting",
    "::nesting": "nesting",
    ":nth-child": "nth-child",
    "::nth-child": "nth-child",
    ":nth-last-child": "nth-child",
    "::nth-last-child": "nth-child",
    ":nth-child.of_syntax": "nth-child-of",
    "::nth-child.of_syntax": "nth-child-of",
    ":nth-last-child.of_syntax": "nth-child-of",
    "::nth-last-child.of_syntax": "nth-child-of",
    "HTMLCanvasElement.transferControlToOffscreen": "offscreen-canvas",
    "htmlcanvaselement.transfercontroltooffscreen": "offscreen-canvas",
    "transferControlToOffscreen": "offscreen-canvas",
    "new transferControlToOffscreen": "offscreen-canvas",
    "offscreencanvas": "offscreen-canvas",
    "OffscreenCanvas.convertToBlob": "offscreen-canvas",
    "offscreencanvas.converttoblob": "offscreen-canvas",
    "convertToBlob": "offscreen-canvas",
    "new convertToBlob": "offscreen-canvas",
    "OffscreenCanvas.getContext": "offscreen-canvas",
    "offscreencanvas.getcontext": "offscreen-canvas",
    "getContext": "offscreen-canvas",
    "new getContext": "offscreen-canvas",
    "OffscreenCanvas.getContext.2d_context": "offscreen-canvas",
    "offscreencanvas.getcontext.2d_context": "offscreen-canvas",
    "new 2d_context": "offscreen-canvas",
    "OffscreenCanvas.prototype.2d_context": "offscreen-canvas",
    "OffscreenCanvas.getContext.bitmaprenderer_context": "offscreen-canvas",
    "offscreencanvas.getcontext.bitmaprenderer_context": "offscreen-canvas",
    "new bitmaprenderer_context": "offscreen-canvas",
    "OffscreenCanvas.prototype.bitmaprenderer_context": "offscreen-canvas",
    "OffscreenCanvas.height": "offscreen-canvas",
    "offscreencanvas.height": "offscreen-canvas",
    "OffscreenCanvas.OffscreenCanvas": "offscreen-canvas",
    "offscreencanvas.offscreencanvas": "offscreen-canvas",
    "new OffscreenCanvas": "offscreen-canvas",
    "OffscreenCanvas.transferToImageBitmap": "offscreen-canvas",
    "offscreencanvas.transfertoimagebitmap": "offscreen-canvas",
    "transferToImageBitmap": "offscreen-canvas",
    "new transferToImageBitmap": "offscreen-canvas",
    "OffscreenCanvas.width": "offscreen-canvas",
    "offscreencanvas.width": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.arc": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.arc": "offscreen-canvas",
    "arc": "offscreen-canvas",
    "new arc": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.arcTo": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.arcto": "offscreen-canvas",
    "arcTo": "offscreen-canvas",
    "new arcTo": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.beginPath": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.beginpath": "offscreen-canvas",
    "beginPath": "offscreen-canvas",
    "new beginPath": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.bezierCurveTo": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.beziercurveto": "offscreen-canvas",
    "bezierCurveTo": "offscreen-canvas",
    "new bezierCurveTo": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.canvas": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.canvas": "offscreen-canvas",
    "canvas": "offscreen-canvas",
    "new canvas": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.clearRect": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.clearrect": "offscreen-canvas",
    "clearRect": "offscreen-canvas",
    "new clearRect": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.clip": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.clip": "offscreen-canvas",
    "clip": "offscreen-canvas",
    "new clip": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.closePath": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.closepath": "offscreen-canvas",
    "closePath": "offscreen-canvas",
    "new closePath": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.createImageData": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.createimagedata": "offscreen-canvas",
    "createImageData": "offscreen-canvas",
    "new createImageData": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.createLinearGradient": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.createlineargradient": "offscreen-canvas",
    "createLinearGradient": "offscreen-canvas",
    "new createLinearGradient": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.createPattern": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.createpattern": "offscreen-canvas",
    "createPattern": "offscreen-canvas",
    "new createPattern": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.createRadialGradient": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.createradialgradient": "offscreen-canvas",
    "createRadialGradient": "offscreen-canvas",
    "new createRadialGradient": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.direction": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.direction": "offscreen-canvas",
    "direction": "offscreen-canvas",
    "new direction": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.drawImage": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.drawimage": "offscreen-canvas",
    "drawImage": "offscreen-canvas",
    "new drawImage": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.ellipse": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.ellipse": "offscreen-canvas",
    "ellipse": "offscreen-canvas",
    "new ellipse": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.fill": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.fill": "offscreen-canvas",
    "new fill": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.fillRect": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.fillrect": "offscreen-canvas",
    "fillRect": "offscreen-canvas",
    "new fillRect": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.fillStyle": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.fillstyle": "offscreen-canvas",
    "fillStyle": "offscreen-canvas",
    "new fillStyle": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.fillText": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.filltext": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.font": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.font": "offscreen-canvas",
    "new font": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.getImageData": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.getimagedata": "offscreen-canvas",
    "getImageData": "offscreen-canvas",
    "new getImageData": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.getLineDash": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.getlinedash": "offscreen-canvas",
    "getLineDash": "offscreen-canvas",
    "new getLineDash": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.getTransform": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.gettransform": "offscreen-canvas",
    "getTransform": "offscreen-canvas",
    "new getTransform": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.globalAlpha": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.globalalpha": "offscreen-canvas",
    "globalAlpha": "offscreen-canvas",
    "new globalAlpha": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.globalCompositeOperation": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.globalcompositeoperation": "offscreen-canvas",
    "globalCompositeOperation": "offscreen-canvas",
    "new globalCompositeOperation": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.imageSmoothingEnabled": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.imagesmoothingenabled": "offscreen-canvas",
    "imageSmoothingEnabled": "offscreen-canvas",
    "new imageSmoothingEnabled": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.isPointInPath": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.ispointinpath": "offscreen-canvas",
    "isPointInPath": "offscreen-canvas",
    "new isPointInPath": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.isPointInStroke": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.ispointinstroke": "offscreen-canvas",
    "isPointInStroke": "offscreen-canvas",
    "new isPointInStroke": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.lineCap": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.linecap": "offscreen-canvas",
    "lineCap": "offscreen-canvas",
    "new lineCap": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.lineDashOffset": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.linedashoffset": "offscreen-canvas",
    "lineDashOffset": "offscreen-canvas",
    "new lineDashOffset": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.lineJoin": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.linejoin": "offscreen-canvas",
    "lineJoin": "offscreen-canvas",
    "new lineJoin": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.lineTo": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.lineto": "offscreen-canvas",
    "lineTo": "offscreen-canvas",
    "new lineTo": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.lineWidth": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.linewidth": "offscreen-canvas",
    "lineWidth": "offscreen-canvas",
    "new lineWidth": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.measureText": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.measuretext": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.miterLimit": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.miterlimit": "offscreen-canvas",
    "miterLimit": "offscreen-canvas",
    "new miterLimit": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.moveTo": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.moveto": "offscreen-canvas",
    "moveTo": "offscreen-canvas",
    "new moveTo": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.putImageData": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.putimagedata": "offscreen-canvas",
    "putImageData": "offscreen-canvas",
    "new putImageData": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.quadraticCurveTo": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.quadraticcurveto": "offscreen-canvas",
    "quadraticCurveTo": "offscreen-canvas",
    "new quadraticCurveTo": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.rect": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.rect": "offscreen-canvas",
    "rect": "offscreen-canvas",
    "new rect": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.resetTransform": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.resettransform": "offscreen-canvas",
    "resetTransform": "offscreen-canvas",
    "new resetTransform": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.restore": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.restore": "offscreen-canvas",
    "restore": "offscreen-canvas",
    "new restore": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.rotate": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.rotate": "offscreen-canvas",
    "new rotate": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.save": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.save": "offscreen-canvas",
    "save": "offscreen-canvas",
    "new save": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.scale": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.scale": "offscreen-canvas",
    "new scale": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.setLineDash": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.setlinedash": "offscreen-canvas",
    "setLineDash": "offscreen-canvas",
    "new setLineDash": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.setTransform": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.settransform": "offscreen-canvas",
    "setTransform": "offscreen-canvas",
    "new setTransform": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.shadowBlur": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.shadowblur": "offscreen-canvas",
    "shadowBlur": "offscreen-canvas",
    "new shadowBlur": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.shadowColor": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.shadowcolor": "offscreen-canvas",
    "shadowColor": "offscreen-canvas",
    "new shadowColor": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.shadowOffsetX": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.shadowoffsetx": "offscreen-canvas",
    "shadowOffsetX": "offscreen-canvas",
    "new shadowOffsetX": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.shadowOffsetY": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.shadowoffsety": "offscreen-canvas",
    "shadowOffsetY": "offscreen-canvas",
    "new shadowOffsetY": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.stroke": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.stroke": "offscreen-canvas",
    "stroke": "offscreen-canvas",
    "new stroke": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.strokeRect": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.strokerect": "offscreen-canvas",
    "strokeRect": "offscreen-canvas",
    "new strokeRect": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.strokeStyle": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.strokestyle": "offscreen-canvas",
    "strokeStyle": "offscreen-canvas",
    "new strokeStyle": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.strokeText": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.stroketext": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.textAlign": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.textalign": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.textBaseline": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.textbaseline": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.transform": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.transform": "offscreen-canvas",
    "transform": "offscreen-canvas",
    "new transform": "offscreen-canvas",
    "OffscreenCanvasRenderingContext2D.translate": "offscreen-canvas",
    "offscreencanvasrenderingcontext2d.translate": "offscreen-canvas",
    "new translate": "offscreen-canvas",
    "oklab": "oklab",
    "oklch": "oklab",
    "FileSystemDirectoryHandle": "origin-private-file-system",
    "filesystemdirectoryhandle": "origin-private-file-system",
    "FileSystemDirectoryHandle.entries": "origin-private-file-system",
    "filesystemdirectoryhandle.entries": "origin-private-file-system",
    "FileSystemDirectoryHandle.getDirectoryHandle": "origin-private-file-system",
    "filesystemdirectoryhandle.getdirectoryhandle": "origin-private-file-system",
    "getDirectoryHandle": "origin-private-file-system",
    "new getDirectoryHandle": "origin-private-file-system",
    "FileSystemDirectoryHandle.getFileHandle": "origin-private-file-system",
    "filesystemdirectoryhandle.getfilehandle": "origin-private-file-system",
    "getFileHandle": "origin-private-file-system",
    "new getFileHandle": "origin-private-file-system",
    "FileSystemDirectoryHandle.keys": "origin-private-file-system",
    "filesystemdirectoryhandle.keys": "origin-private-file-system",
    "FileSystemDirectoryHandle.removeEntry": "origin-private-file-system",
    "filesystemdirectoryhandle.removeentry": "origin-private-file-system",
    "removeEntry": "origin-private-file-system",
    "new removeEntry": "origin-private-file-system",
    "FileSystemDirectoryHandle.resolve": "origin-private-file-system",
    "filesystemdirectoryhandle.resolve": "origin-private-file-system",
    "resolve": "origin-private-file-system",
    "new resolve": "origin-private-file-system",
    "FileSystemDirectoryHandle.values": "origin-private-file-system",
    "filesystemdirectoryhandle.values": "origin-private-file-system",
    "FileSystemFileHandle": "origin-private-file-system",
    "filesystemfilehandle": "origin-private-file-system",
    "FileSystemFileHandle.createSyncAccessHandle": "origin-private-file-system",
    "filesystemfilehandle.createsyncaccesshandle": "origin-private-file-system",
    "createSyncAccessHandle": "origin-private-file-system",
    "new createSyncAccessHandle": "origin-private-file-system",
    "FileSystemFileHandle.getFile": "origin-private-file-system",
    "filesystemfilehandle.getfile": "origin-private-file-system",
    "getFile": "origin-private-file-system",
    "new getFile": "origin-private-file-system",
    "FileSystemHandle": "origin-private-file-system",
    "filesystemhandle": "origin-private-file-system",
    "FileSystemHandle.isSameEntry": "origin-private-file-system",
    "filesystemhandle.issameentry": "origin-private-file-system",
    "isSameEntry": "origin-private-file-system",
    "new isSameEntry": "origin-private-file-system",
    "FileSystemHandle.kind": "origin-private-file-system",
    "filesystemhandle.kind": "origin-private-file-system",
    "FileSystemHandle.name": "origin-private-file-system",
    "filesystemhandle.name": "origin-private-file-system",
    "FileSystemSyncAccessHandle": "origin-private-file-system",
    "filesystemsyncaccesshandle": "origin-private-file-system",
    "FileSystemSyncAccessHandle.close": "origin-private-file-system",
    "filesystemsyncaccesshandle.close": "origin-private-file-system",
    "FileSystemSyncAccessHandle.flush": "origin-private-file-system",
    "filesystemsyncaccesshandle.flush": "origin-private-file-system",
    "flush": "origin-private-file-system",
    "new flush": "origin-private-file-system",
    "FileSystemSyncAccessHandle.getSize": "origin-private-file-system",
    "filesystemsyncaccesshandle.getsize": "origin-private-file-system",
    "getSize": "origin-private-file-system",
    "new getSize": "origin-private-file-system",
    "FileSystemSyncAccessHandle.read": "origin-private-file-system",
    "filesystemsyncaccesshandle.read": "origin-private-file-system",
    "FileSystemSyncAccessHandle.truncate": "origin-private-file-system",
    "filesystemsyncaccesshandle.truncate": "origin-private-file-system",
    "truncate": "origin-private-file-system",
    "new truncate": "origin-private-file-system",
    "FileSystemSyncAccessHandle.write": "origin-private-file-system",
    "filesystemsyncaccesshandle.write": "origin-private-file-system",
    "StorageManager.getDirectory": "origin-private-file-system",
    "storagemanager.getdirectory": "origin-private-file-system",
    "StorageManager": "origin-private-file-system",
    "getDirectory": "origin-private-file-system",
    "new getDirectory": "origin-private-file-system",
    "overflow": "overflow-shorthand",
    "overflow.clip": "overflow-shorthand",
    "overflow.multiple_keywords": "overflow-shorthand",
    "overflow-x": "overflow-shorthand",
    "overflow-x.clip": "overflow-shorthand",
    "overflow-y": "overflow-shorthand",
    "overflow-y.clip": "overflow-shorthand",
    "break-after": "page-breaks",
    "break-after.paged_context": "page-breaks",
    "break-after.paged_context.page": "page-breaks",
    "break-before": "page-breaks",
    "break-before.paged_context": "page-breaks",
    "break-before.paged_context.page": "page-breaks",
    "break-inside": "page-breaks",
    "break-inside.paged_context": "page-breaks",
    "page-break-after": "page-breaks",
    "page": "page-breaks",
    "page-break": "page-breaks",
    "page-break-after.avoid": "page-breaks",
    "page-break-before": "page-breaks",
    "page-break-before.avoid": "page-breaks",
    "page-break-inside": "page-breaks",
    "page-break-inside.avoid": "page-breaks",
    "paint": "paint",
    "CSS.paintWorklet_static": "paint",
    "css.paintworklet_static": "paint",
    "paintWorklet_static": "paint",
    "new paintWorklet_static": "paint",
    "PaintWorkletGlobalScope": "paint",
    "paintworkletglobalscope": "paint",
    "Document.parseHTMLUnsafe_static": "parse-html-unsafe",
    "document.parsehtmlunsafe_static": "parse-html-unsafe",
    "parseHTMLUnsafe_static": "parse-html-unsafe",
    "new parseHTMLUnsafe_static": "parse-html-unsafe",
    "Element.setHTMLUnsafe": "parse-html-unsafe",
    "element.sethtmlunsafe": "parse-html-unsafe",
    "setHTMLUnsafe": "parse-html-unsafe",
    "new setHTMLUnsafe": "parse-html-unsafe",
    "ShadowRoot.setHTMLUnsafe": "parse-html-unsafe",
    "shadowroot.sethtmlunsafe": "parse-html-unsafe",
    "Navigator.permissions": "permissions",
    "navigator.permissions": "permissions",
    "permissions": "permissions",
    "new permissions": "permissions",
    "PermissionStatus": "permissions",
    "permissionstatus": "permissions",
    "PermissionStatus.state": "permissions",
    "permissionstatus.state": "permissions",
    "Permissions.query": "permissions",
    "permissions.query": "permissions",
    "query": "permissions",
    "new query": "permissions",
    "Document.exitPictureInPicture": "picture-in-picture",
    "document.exitpictureinpicture": "picture-in-picture",
    "exitPictureInPicture": "picture-in-picture",
    "new exitPictureInPicture": "picture-in-picture",
    "Document.pictureInPictureElement": "picture-in-picture",
    "document.pictureinpictureelement": "picture-in-picture",
    "pictureInPictureElement": "picture-in-picture",
    "new pictureInPictureElement": "picture-in-picture",
    "Document.pictureInPictureEnabled": "picture-in-picture",
    "document.pictureinpictureenabled": "picture-in-picture",
    "pictureInPictureEnabled": "picture-in-picture",
    "new pictureInPictureEnabled": "picture-in-picture",
    "HTMLVideoElement.disablePictureInPicture": "picture-in-picture",
    "htmlvideoelement.disablepictureinpicture": "picture-in-picture",
    "HTMLVideoElement": "picture-in-picture",
    "disablePictureInPicture": "picture-in-picture",
    "new disablePictureInPicture": "picture-in-picture",
    "HTMLVideoElement.enterpictureinpicture_event": "picture-in-picture",
    "htmlvideoelement.enterpictureinpicture_event": "picture-in-picture",
    "enterpictureinpicture_event": "picture-in-picture",
    "new enterpictureinpicture_event": "picture-in-picture",
    "HTMLVideoElement.leavepictureinpicture_event": "picture-in-picture",
    "htmlvideoelement.leavepictureinpicture_event": "picture-in-picture",
    "leavepictureinpicture_event": "picture-in-picture",
    "new leavepictureinpicture_event": "picture-in-picture",
    "HTMLVideoElement.requestPictureInPicture": "picture-in-picture",
    "htmlvideoelement.requestpictureinpicture": "picture-in-picture",
    "requestPictureInPicture": "picture-in-picture",
    "new requestPictureInPicture": "picture-in-picture",
    "PictureInPictureWindow": "picture-in-picture",
    "pictureinpicturewindow": "picture-in-picture",
    "PictureInPictureWindow.height": "picture-in-picture",
    "pictureinpicturewindow.height": "picture-in-picture",
    "PictureInPictureWindow.resize_event": "picture-in-picture",
    "pictureinpicturewindow.resize_event": "picture-in-picture",
    "resize_event": "picture-in-picture",
    "new resize_event": "picture-in-picture",
    "PictureInPictureWindow.width": "picture-in-picture",
    "pictureinpicturewindow.width": "picture-in-picture",
    "ShadowRoot.pictureInPictureElement": "picture-in-picture",
    "shadowroot.pictureinpictureelement": "picture-in-picture",
    "video.disablepictureinpicture": "picture-in-picture",
    "disablepictureinpicture": "picture-in-picture",
    "Document.exitPointerLock": "pointer-lock",
    "document.exitpointerlock": "pointer-lock",
    "exitPointerLock": "pointer-lock",
    "new exitPointerLock": "pointer-lock",
    "Document.pointerlockchange_event": "pointer-lock",
    "document.pointerlockchange_event": "pointer-lock",
    "pointerlockchange_event": "pointer-lock",
    "new pointerlockchange_event": "pointer-lock",
    "Document.pointerLockElement": "pointer-lock",
    "document.pointerlockelement": "pointer-lock",
    "pointerLockElement": "pointer-lock",
    "new pointerLockElement": "pointer-lock",
    "Document.pointerlockerror_event": "pointer-lock",
    "document.pointerlockerror_event": "pointer-lock",
    "pointerlockerror_event": "pointer-lock",
    "new pointerlockerror_event": "pointer-lock",
    "Element.requestPointerLock": "pointer-lock",
    "element.requestpointerlock": "pointer-lock",
    "requestPointerLock": "pointer-lock",
    "new requestPointerLock": "pointer-lock",
    "MouseEvent.movementX": "pointer-lock",
    "mouseevent.movementx": "pointer-lock",
    "MouseEvent": "pointer-lock",
    "movementX": "pointer-lock",
    "new movementX": "pointer-lock",
    "MouseEvent.movementY": "pointer-lock",
    "mouseevent.movementy": "pointer-lock",
    "movementY": "pointer-lock",
    "new movementY": "pointer-lock",
    "HTMLButtonElement.popoverTargetAction": "popover",
    "htmlbuttonelement.popovertargetaction": "popover",
    "popoverTargetAction": "popover",
    "new popoverTargetAction": "popover",
    "HTMLButtonElement.popoverTargetElement": "popover",
    "htmlbuttonelement.popovertargetelement": "popover",
    "popoverTargetElement": "popover",
    "new popoverTargetElement": "popover",
    "HTMLElement.beforetoggle_event": "popover",
    "htmlelement.beforetoggle_event": "popover",
    "beforetoggle_event": "popover",
    "new beforetoggle_event": "popover",
    "HTMLElement.hidePopover": "popover",
    "htmlelement.hidepopover": "popover",
    "hidePopover": "popover",
    "new hidePopover": "popover",
    "HTMLElement.popover": "popover",
    "htmlelement.popover": "popover",
    "popover": "popover",
    "new popover": "popover",
    "HTMLElement.showPopover": "popover",
    "htmlelement.showpopover": "popover",
    "showPopover": "popover",
    "new showPopover": "popover",
    "HTMLElement.togglePopover": "popover",
    "htmlelement.togglepopover": "popover",
    "togglePopover": "popover",
    "new togglePopover": "popover",
    "HTMLElement.toggle_event": "popover",
    "htmlelement.toggle_event": "popover",
    "toggle_event": "popover",
    "new toggle_event": "popover",
    "HTMLInputElement.popoverTargetAction": "popover",
    "htmlinputelement.popovertargetaction": "popover",
    "HTMLInputElement.popoverTargetElement": "popover",
    "htmlinputelement.popovertargetelement": "popover",
    "ToggleEvent": "popover",
    "toggleevent": "popover",
    "ToggleEvent.ToggleEvent": "popover",
    "toggleevent.toggleevent": "popover",
    "new ToggleEvent": "popover",
    "ToggleEvent.newState": "popover",
    "toggleevent.newstate": "popover",
    "newState": "popover",
    "new newState": "popover",
    "ToggleEvent.oldState": "popover",
    "toggleevent.oldstate": "popover",
    "oldState": "popover",
    "new oldState": "popover",
    ":backdrop.popover": "popover",
    "::backdrop.popover": "popover",
    ":popover-open": "popover",
    "::popover-open": "popover",
    "button.popovertarget": "popover",
    "popovertarget": "popover",
    "button.popovertargetaction": "popover",
    "popovertargetaction": "popover",
    "input.popovertarget": "popover",
    "input.popovertargetaction": "popover",
    "loading-popover": "popover",
    "@media.prefers-color-scheme": "prefers-color-scheme",
    "HTMLLinkElement.imageSizes": "preloading-responsive-images",
    "htmllinkelement.imagesizes": "preloading-responsive-images",
    "imageSizes": "preloading-responsive-images",
    "new imageSizes": "preloading-responsive-images",
    "HTMLLinkElement.imageSrcset": "preloading-responsive-images",
    "htmllinkelement.imagesrcset": "preloading-responsive-images",
    "imageSrcset": "preloading-responsive-images",
    "new imageSrcset": "preloading-responsive-images",
    "link.imagesizes": "preloading-responsive-images",
    "imagesizes": "preloading-responsive-images",
    "link.imagesrcset": "preloading-responsive-images",
    "imagesrcset": "preloading-responsive-images",
    "HTMLMediaElement.preservesPitch": "preserves-pitch",
    "htmlmediaelement.preservespitch": "preserves-pitch",
    "preservesPitch": "preserves-pitch",
    "new preservesPitch": "preserves-pitch",
    "Window.print": "print",
    "window.print": "print",
    "print": "print",
    "new print": "print",
    "Window.afterprint_event": "print-events",
    "window.afterprint_event": "print-events",
    "afterprint_event": "print-events",
    "new afterprint_event": "print-events",
    "Window.beforeprint_event": "print-events",
    "window.beforeprint_event": "print-events",
    "beforeprint_event": "print-events",
    "new beforeprint_event": "print-events",
    "Promise": "promise",
    "Promise.@@species": "promise",
    "Promise.prototype.@@species": "promise",
    "Promise.Promise": "promise",
    "Promise.prototype.Promise": "promise",
    "Promise.all": "promise",
    "Promise.prototype.all": "promise",
    "all": "promise",
    "Promise.catch": "promise",
    "Promise.prototype.catch": "promise",
    "catch": "promise",
    "Promise.race": "promise",
    "Promise.prototype.race": "promise",
    "race": "promise",
    "Promise.reject": "promise",
    "Promise.prototype.reject": "promise",
    "reject": "promise",
    "Promise.resolve": "promise",
    "Promise.prototype.resolve": "promise",
    "Promise.then": "promise",
    "Promise.prototype.then": "promise",
    "then": "promise",
    "Promise.allSettled": "promise-allsettled",
    "Promise.prototype.allSettled": "promise-allsettled",
    "allSettled": "promise-allsettled",
    "Promise.any": "promise-any",
    "Promise.prototype.any": "promise-any",
    "any": "promise-any",
    "Promise.finally": "promise-finally",
    "Promise.prototype.finally": "promise-finally",
    "finally": "promise-finally",
    "Promise.withResolvers": "promise-withresolvers",
    "Promise.prototype.withResolvers": "promise-withresolvers",
    "withResolvers": "promise-withresolvers",
    "PushEvent": "push",
    "pushevent": "push",
    "PushEvent.PushEvent": "push",
    "pushevent.pushevent": "push",
    "new PushEvent": "push",
    "PushEvent.data": "push",
    "pushevent.data": "push",
    "PushManager": "push",
    "pushmanager": "push",
    "PushManager.getSubscription": "push",
    "pushmanager.getsubscription": "push",
    "getSubscription": "push",
    "new getSubscription": "push",
    "PushManager.permissionState": "push",
    "pushmanager.permissionstate": "push",
    "permissionState": "push",
    "new permissionState": "push",
    "PushMessageData": "push",
    "pushmessagedata": "push",
    "PushMessageData.arrayBuffer": "push",
    "pushmessagedata.arraybuffer": "push",
    "PushMessageData.blob": "push",
    "pushmessagedata.blob": "push",
    "PushMessageData.json": "push",
    "pushmessagedata.json": "push",
    "PushMessageData.text": "push",
    "pushmessagedata.text": "push",
    "PushSubscription": "push",
    "pushsubscription": "push",
    "PushSubscription.endpoint": "push",
    "pushsubscription.endpoint": "push",
    "endpoint": "push",
    "new endpoint": "push",
    "PushSubscription.getKey": "push",
    "pushsubscription.getkey": "push",
    "getKey": "push",
    "new getKey": "push",
    "PushSubscription.toJSON": "push",
    "pushsubscription.tojson": "push",
    "PushSubscription.unsubscribe": "push",
    "pushsubscription.unsubscribe": "push",
    "unsubscribe": "push",
    "new unsubscribe": "push",
    "ServiceWorkerRegistration.pushManager": "push",
    "serviceworkerregistration.pushmanager": "push",
    "pushManager": "push",
    "new pushManager": "push",
    "ServiceWorkerGlobalScope.push_event": "push",
    "serviceworkerglobalscope.push_event": "push",
    "push_event": "push",
    "new push_event": "push",
    ":read-only": "read-write-pseudos",
    "::read-only": "read-write-pseudos",
    ":read-write": "read-write-pseudos",
    "::read-write": "read-write-pseudos",
    "CSS.registerProperty_static": "registered-custom-properties",
    "css.registerproperty_static": "registered-custom-properties",
    "registerProperty_static": "registered-custom-properties",
    "new registerProperty_static": "registered-custom-properties",
    "CSSPropertyRule": "registered-custom-properties",
    "csspropertyrule": "registered-custom-properties",
    "CSSPropertyRule.inherits": "registered-custom-properties",
    "csspropertyrule.inherits": "registered-custom-properties",
    "inherits": "registered-custom-properties",
    "new inherits": "registered-custom-properties",
    "CSSPropertyRule.initialValue": "registered-custom-properties",
    "csspropertyrule.initialvalue": "registered-custom-properties",
    "initialValue": "registered-custom-properties",
    "new initialValue": "registered-custom-properties",
    "CSSPropertyRule.name": "registered-custom-properties",
    "csspropertyrule.name": "registered-custom-properties",
    "CSSPropertyRule.syntax": "registered-custom-properties",
    "csspropertyrule.syntax": "registered-custom-properties",
    "syntax": "registered-custom-properties",
    "new syntax": "registered-custom-properties",
    "@property": "registered-custom-properties",
    "@property.inherits": "registered-custom-properties",
    "@property.initial-value": "registered-custom-properties",
    "@property.syntax": "registered-custom-properties",
    "relative_syntax": "relative-color",
    "Window.cancelAnimationFrame": "request-animation-frame",
    "window.cancelanimationframe": "request-animation-frame",
    "cancelAnimationFrame": "request-animation-frame",
    "new cancelAnimationFrame": "request-animation-frame",
    "Window.requestAnimationFrame": "request-animation-frame",
    "window.requestanimationframe": "request-animation-frame",
    "requestAnimationFrame": "request-animation-frame",
    "new requestAnimationFrame": "request-animation-frame",
    "DedicatedWorkerGlobalScope.cancelAnimationFrame": "request-animation-frame-workers",
    "dedicatedworkerglobalscope.cancelanimationframe": "request-animation-frame-workers",
    "DedicatedWorkerGlobalScope.requestAnimationFrame": "request-animation-frame-workers",
    "dedicatedworkerglobalscope.requestanimationframe": "request-animation-frame-workers",
    "HTMLVideoElement.requestVideoFrameCallback": "request-video-frame-callback",
    "htmlvideoelement.requestvideoframecallback": "request-video-frame-callback",
    "requestVideoFrameCallback": "request-video-frame-callback",
    "new requestVideoFrameCallback": "request-video-frame-callback",
    "HTMLVideoElement.cancelVideoFrameCallback": "request-video-frame-callback",
    "htmlvideoelement.cancelvideoframecallback": "request-video-frame-callback",
    "cancelVideoFrameCallback": "request-video-frame-callback",
    "new cancelVideoFrameCallback": "request-video-frame-callback",
    "PerformanceResourceTiming.transferSize": "resource-size",
    "performanceresourcetiming.transfersize": "resource-size",
    "PerformanceResourceTiming": "resource-size",
    "transferSize": "resource-size",
    "new transferSize": "resource-size",
    "PerformanceResourceTiming.decodedBodySize": "resource-size",
    "performanceresourcetiming.decodedbodysize": "resource-size",
    "decodedBodySize": "resource-size",
    "new decodedBodySize": "resource-size",
    "PerformanceResourceTiming.encodedBodySize": "resource-size",
    "performanceresourcetiming.encodedbodysize": "resource-size",
    "encodedBodySize": "resource-size",
    "new encodedBodySize": "resource-size",
    "performanceresourcetiming": "resource-timing",
    "PerformanceResourceTiming.connectEnd": "resource-timing",
    "performanceresourcetiming.connectend": "resource-timing",
    "connectEnd": "resource-timing",
    "new connectEnd": "resource-timing",
    "PerformanceResourceTiming.connectStart": "resource-timing",
    "performanceresourcetiming.connectstart": "resource-timing",
    "connectStart": "resource-timing",
    "new connectStart": "resource-timing",
    "PerformanceResourceTiming.domainLookupEnd": "resource-timing",
    "performanceresourcetiming.domainlookupend": "resource-timing",
    "domainLookupEnd": "resource-timing",
    "new domainLookupEnd": "resource-timing",
    "PerformanceResourceTiming.domainLookupStart": "resource-timing",
    "performanceresourcetiming.domainlookupstart": "resource-timing",
    "domainLookupStart": "resource-timing",
    "new domainLookupStart": "resource-timing",
    "PerformanceResourceTiming.fetchStart": "resource-timing",
    "performanceresourcetiming.fetchstart": "resource-timing",
    "fetchStart": "resource-timing",
    "new fetchStart": "resource-timing",
    "PerformanceResourceTiming.initiatorType": "resource-timing",
    "performanceresourcetiming.initiatortype": "resource-timing",
    "initiatorType": "resource-timing",
    "new initiatorType": "resource-timing",
    "PerformanceResourceTiming.redirectEnd": "resource-timing",
    "performanceresourcetiming.redirectend": "resource-timing",
    "redirectEnd": "resource-timing",
    "new redirectEnd": "resource-timing",
    "PerformanceResourceTiming.redirectStart": "resource-timing",
    "performanceresourcetiming.redirectstart": "resource-timing",
    "redirectStart": "resource-timing",
    "new redirectStart": "resource-timing",
    "PerformanceResourceTiming.requestStart": "resource-timing",
    "performanceresourcetiming.requeststart": "resource-timing",
    "requestStart": "resource-timing",
    "new requestStart": "resource-timing",
    "PerformanceResourceTiming.responseEnd": "resource-timing",
    "performanceresourcetiming.responseend": "resource-timing",
    "responseEnd": "resource-timing",
    "new responseEnd": "resource-timing",
    "PerformanceResourceTiming.responseStart": "resource-timing",
    "performanceresourcetiming.responsestart": "resource-timing",
    "responseStart": "resource-timing",
    "new responseStart": "resource-timing",
    "mod": "round-mod-rem",
    "rem": "round-mod-rem",
    "round": "round-mod-rem",
    "Scheduler": "scheduler",
    "scheduler": "scheduler",
    "Scheduler.postTask": "scheduler",
    "scheduler.posttask": "scheduler",
    "postTask": "scheduler",
    "new postTask": "scheduler",
    "TaskController": "scheduler",
    "taskcontroller": "scheduler",
    "TaskController.TaskController": "scheduler",
    "taskcontroller.taskcontroller": "scheduler",
    "new TaskController": "scheduler",
    "TaskController.setPriority": "scheduler",
    "taskcontroller.setpriority": "scheduler",
    "setPriority": "scheduler",
    "new setPriority": "scheduler",
    "TaskPriorityChangeEvent": "scheduler",
    "taskprioritychangeevent": "scheduler",
    "TaskPriorityChangeEvent.TaskPriorityChangeEvent": "scheduler",
    "taskprioritychangeevent.taskprioritychangeevent": "scheduler",
    "new TaskPriorityChangeEvent": "scheduler",
    "TaskPriorityChangeEvent.previousPriority": "scheduler",
    "taskprioritychangeevent.previouspriority": "scheduler",
    "previousPriority": "scheduler",
    "new previousPriority": "scheduler",
    "TaskSignal": "scheduler",
    "tasksignal": "scheduler",
    "TaskSignal.priority": "scheduler",
    "tasksignal.priority": "scheduler",
    "CSSScopeRule": "scope",
    "cssscoperule": "scope",
    "CSSScopeRule.end": "scope",
    "cssscoperule.end": "scope",
    "end": "scope",
    "new end": "scope",
    "CSSScopeRule.start": "scope",
    "cssscoperule.start": "scope",
    "@scope": "scope",
    "Screen.orientation": "screen-orientation",
    "screen.orientation": "screen-orientation",
    "Screen": "screen-orientation",
    "orientation": "screen-orientation",
    "new orientation": "screen-orientation",
    "ScreenOrientation": "screen-orientation",
    "screenorientation": "screen-orientation",
    "ScreenOrientation.angle": "screen-orientation",
    "screenorientation.angle": "screen-orientation",
    "angle": "screen-orientation",
    "new angle": "screen-orientation",
    "ScreenOrientation.change_event": "screen-orientation",
    "screenorientation.change_event": "screen-orientation",
    "ScreenOrientation.type": "screen-orientation",
    "screenorientation.type": "screen-orientation",
    "ScreenOrientation.lock": "screen-orientation-lock",
    "screenorientation.lock": "screen-orientation-lock",
    "lock": "screen-orientation-lock",
    "new lock": "screen-orientation-lock",
    "ScreenOrientation.unlock": "screen-orientation-lock",
    "screenorientation.unlock": "screen-orientation-lock",
    "unlock": "screen-orientation-lock",
    "new unlock": "screen-orientation-lock",
    "ScrollTimeline": "scroll-driven-animations",
    "scrolltimeline": "scroll-driven-animations",
    "ScrollTimeline.axis": "scroll-driven-animations",
    "scrolltimeline.axis": "scroll-driven-animations",
    "axis": "scroll-driven-animations",
    "new axis": "scroll-driven-animations",
    "ScrollTimeline.ScrollTimeline": "scroll-driven-animations",
    "scrolltimeline.scrolltimeline": "scroll-driven-animations",
    "new ScrollTimeline": "scroll-driven-animations",
    "ScrollTimeline.source": "scroll-driven-animations",
    "scrolltimeline.source": "scroll-driven-animations",
    "ViewTimeline": "scroll-driven-animations",
    "viewtimeline": "scroll-driven-animations",
    "ViewTimeline.endOffset": "scroll-driven-animations",
    "viewtimeline.endoffset": "scroll-driven-animations",
    "endOffset": "scroll-driven-animations",
    "new endOffset": "scroll-driven-animations",
    "ViewTimeline.startOffset": "scroll-driven-animations",
    "viewtimeline.startoffset": "scroll-driven-animations",
    "startOffset": "scroll-driven-animations",
    "new startOffset": "scroll-driven-animations",
    "ViewTimeline.subject": "scroll-driven-animations",
    "viewtimeline.subject": "scroll-driven-animations",
    "subject": "scroll-driven-animations",
    "new subject": "scroll-driven-animations",
    "ViewTimeline.ViewTimeline": "scroll-driven-animations",
    "viewtimeline.viewtimeline": "scroll-driven-animations",
    "new ViewTimeline": "scroll-driven-animations",
    "animation-range": "scroll-driven-animations",
    "animation-range-end": "scroll-driven-animations",
    "animation-range-start": "scroll-driven-animations",
    "animation-timeline": "scroll-driven-animations",
    "animation-timeline.scroll": "scroll-driven-animations",
    "animation-timeline.view": "scroll-driven-animations",
    "scroll-timeline": "scroll-driven-animations",
    "scroll": "scroll-driven-animations",
    "scroll-timeline-axis": "scroll-driven-animations",
    "scroll-timeline-name": "scroll-driven-animations",
    "view-timeline": "scroll-driven-animations",
    "view": "scroll-driven-animations",
    "view-timeline-axis": "scroll-driven-animations",
    "view-timeline-inset": "scroll-driven-animations",
    "view-timeline-name": "scroll-driven-animations",
    "Element.scrollIntoView": "scroll-into-view",
    "element.scrollintoview": "scroll-into-view",
    "scrollIntoView": "scroll-into-view",
    "new scrollIntoView": "scroll-into-view",
    "Element.scrollIntoView.options_parameter": "scroll-into-view",
    "element.scrollintoview.options_parameter": "scroll-into-view",
    "new options_parameter": "scroll-into-view",
    "Element.prototype.options_parameter": "scroll-into-view",
    "scroll-margin": "scroll-snap",
    "scroll-margin-block": "scroll-snap",
    "scroll-margin-block-end": "scroll-snap",
    "scroll-margin-block-start": "scroll-snap",
    "scroll-margin-bottom": "scroll-snap",
    "scroll-margin-inline": "scroll-snap",
    "scroll-margin-inline-end": "scroll-snap",
    "scroll-margin-inline-start": "scroll-snap",
    "scroll-margin-left": "scroll-snap",
    "scroll-margin-right": "scroll-snap",
    "scroll-margin-top": "scroll-snap",
    "scroll-padding": "scroll-snap",
    "scroll-padding-block": "scroll-snap",
    "scroll-padding-block-end": "scroll-snap",
    "scroll-padding-block-start": "scroll-snap",
    "scroll-padding-bottom": "scroll-snap",
    "scroll-padding-inline": "scroll-snap",
    "scroll-padding-inline-end": "scroll-snap",
    "scroll-padding-inline-start": "scroll-snap",
    "scroll-padding-left": "scroll-snap",
    "scroll-padding-right": "scroll-snap",
    "scroll-padding-top": "scroll-snap",
    "scroll-snap-align": "scroll-snap",
    "scroll-snap": "scroll-snap",
    "scroll-snap-stop": "scroll-snap",
    "scroll-snap-type": "scroll-snap",
    "scrollbar-color": "scrollbar-color",
    "scrollbar": "scrollbar-color",
    "scrollbar-gutter": "scrollbar-gutter",
    "scrollbar-width": "scrollbar-width",
    "Document.scrollend_event": "scrollend",
    "document.scrollend_event": "scrollend",
    "scrollend_event": "scrollend",
    "new scrollend_event": "scrollend",
    "Element.scrollend_event": "scrollend",
    "element.scrollend_event": "scrollend",
    "search": "search",
    "input.type_search": "search-input-type",
    "type_search": "search-input-type",
    "PerformanceResourceTiming.serverTiming": "server-timing",
    "performanceresourcetiming.servertiming": "server-timing",
    "serverTiming": "server-timing",
    "new serverTiming": "server-timing",
    "PerformanceServerTiming": "server-timing",
    "performanceservertiming": "server-timing",
    "PerformanceServerTiming.description": "server-timing",
    "performanceservertiming.description": "server-timing",
    "description": "server-timing",
    "new description": "server-timing",
    "PerformanceServerTiming.duration": "server-timing",
    "performanceservertiming.duration": "server-timing",
    "duration": "server-timing",
    "new duration": "server-timing",
    "PerformanceServerTiming.name": "server-timing",
    "performanceservertiming.name": "server-timing",
    "PerformanceServerTiming.toJSON": "server-timing",
    "performanceservertiming.tojson": "server-timing",
    "server-timing": "server-timing",
    "Server_Timing": "server-timing",
    "Set": "set",
    "Set.Set": "set",
    "Set.prototype.Set": "set",
    "Set.Set.iterable_allowed": "set",
    "Set.Set.null_allowed": "set",
    "Set.add": "set",
    "Set.prototype.add": "set",
    "Set.clear": "set",
    "Set.prototype.clear": "set",
    "Set.delete": "set",
    "Set.prototype.delete": "set",
    "Set.entries": "set",
    "Set.prototype.entries": "set",
    "Set.forEach": "set",
    "Set.prototype.forEach": "set",
    "Set.has": "set",
    "Set.prototype.has": "set",
    "Set.key_equality_for_zeros": "set",
    "Set.prototype.key_equality_for_zeros": "set",
    "Set.keys": "set",
    "Set.prototype.keys": "set",
    "Set.size": "set",
    "Set.prototype.size": "set",
    "Set.values": "set",
    "Set.prototype.values": "set",
    "Set.@@iterator": "set",
    "Set.prototype.@@iterator": "set",
    "Set.@@species": "set",
    "Set.prototype.@@species": "set",
    "Set.difference": "set-methods",
    "Set.prototype.difference": "set-methods",
    "difference": "set-methods",
    "Set.intersection": "set-methods",
    "Set.prototype.intersection": "set-methods",
    "intersection": "set-methods",
    "Set.isDisjointFrom": "set-methods",
    "Set.prototype.isDisjointFrom": "set-methods",
    "isDisjointFrom": "set-methods",
    "Set.isSubsetOf": "set-methods",
    "Set.prototype.isSubsetOf": "set-methods",
    "isSubsetOf": "set-methods",
    "Set.isSupersetOf": "set-methods",
    "Set.prototype.isSupersetOf": "set-methods",
    "isSupersetOf": "set-methods",
    "Set.symmetricDifference": "set-methods",
    "Set.prototype.symmetricDifference": "set-methods",
    "symmetricDifference": "set-methods",
    "Set.union": "set-methods",
    "Set.prototype.union": "set-methods",
    "union": "set-methods",
    "Element.attachShadow": "shadow-dom",
    "element.attachshadow": "shadow-dom",
    "attachShadow": "shadow-dom",
    "new attachShadow": "shadow-dom",
    "Element.shadowRoot": "shadow-dom",
    "element.shadowroot": "shadow-dom",
    "shadowRoot": "shadow-dom",
    "new shadowRoot": "shadow-dom",
    "Event.composed": "shadow-dom",
    "event.composed": "shadow-dom",
    "Event": "shadow-dom",
    "composed": "shadow-dom",
    "new composed": "shadow-dom",
    "Event.composedPath": "shadow-dom",
    "event.composedpath": "shadow-dom",
    "composedPath": "shadow-dom",
    "new composedPath": "shadow-dom",
    "Node.getRootNode": "shadow-dom",
    "node.getrootnode": "shadow-dom",
    "Node": "shadow-dom",
    "getRootNode": "shadow-dom",
    "new getRootNode": "shadow-dom",
    "Node.isConnected": "shadow-dom",
    "node.isconnected": "shadow-dom",
    "isConnected": "shadow-dom",
    "new isConnected": "shadow-dom",
    "shadowroot": "shadow-dom",
    "ShadowRoot.host": "shadow-dom",
    "shadowroot.host": "shadow-dom",
    "host": "shadow-dom",
    "new host": "shadow-dom",
    "ShadowRoot.mode": "shadow-dom",
    "shadowroot.mode": "shadow-dom",
    "HTMLInputElement.showPicker": "show-picker-input",
    "htmlinputelement.showpicker": "show-picker-input",
    "showPicker": "show-picker-input",
    "new showPicker": "show-picker-input",
    "HTMLInputElement.showPicker.color_input": "show-picker-input",
    "htmlinputelement.showpicker.color_input": "show-picker-input",
    "new color_input": "show-picker-input",
    "HTMLInputElement.prototype.color_input": "show-picker-input",
    "HTMLInputElement.showPicker.file_input": "show-picker-input",
    "htmlinputelement.showpicker.file_input": "show-picker-input",
    "new file_input": "show-picker-input",
    "HTMLInputElement.prototype.file_input": "show-picker-input",
    "HTMLInputElement.showPicker.date_input": "show-picker-input",
    "htmlinputelement.showpicker.date_input": "show-picker-input",
    "new date_input": "show-picker-input",
    "HTMLInputElement.prototype.date_input": "show-picker-input",
    "HTMLInputElement.showPicker.datetime_local_input": "show-picker-input",
    "htmlinputelement.showpicker.datetime_local_input": "show-picker-input",
    "new datetime_local_input": "show-picker-input",
    "HTMLInputElement.prototype.datetime_local_input": "show-picker-input",
    "HTMLSelectElement.showPicker": "show-picker-select",
    "htmlselectelement.showpicker": "show-picker-select",
    "Element.assignedSlot": "slot",
    "element.assignedslot": "slot",
    "assignedSlot": "slot",
    "new assignedSlot": "slot",
    "Element.slot": "slot",
    "element.slot": "slot",
    "slot": "slot",
    "new slot": "slot",
    "HTMLSlotElement": "slot",
    "htmlslotelement": "slot",
    "HTMLSlotElement.assignedNodes": "slot",
    "htmlslotelement.assignednodes": "slot",
    "assignedNodes": "slot",
    "new assignedNodes": "slot",
    "HTMLSlotElement.name": "slot",
    "htmlslotelement.name": "slot",
    "Text.assignedSlot": "slot",
    "text.assignedslot": "slot",
    "Text": "slot",
    ":slotted": "slot",
    "::slotted": "slot",
    "slot.name": "slot",
    "loading-slot": "slot",
    "HTMLSlotElement.assign": "slot-assign",
    "htmlslotelement.assign": "slot-assign",
    "assign": "slot-assign",
    "new assign": "slot-assign",
    "ShadowRoot.slotAssignment": "slot-assign",
    "shadowroot.slotassignment": "slot-assign",
    "slotAssignment": "slot-assign",
    "new slotAssignment": "slot-assign",
    "SpeechSynthesis": "speech-synthesis",
    "speechsynthesis": "speech-synthesis",
    "SpeechSynthesis.cancel": "speech-synthesis",
    "speechsynthesis.cancel": "speech-synthesis",
    "cancel": "speech-synthesis",
    "new cancel": "speech-synthesis",
    "SpeechSynthesis.getVoices": "speech-synthesis",
    "speechsynthesis.getvoices": "speech-synthesis",
    "getVoices": "speech-synthesis",
    "new getVoices": "speech-synthesis",
    "SpeechSynthesis.pause": "speech-synthesis",
    "speechsynthesis.pause": "speech-synthesis",
    "pause": "speech-synthesis",
    "new pause": "speech-synthesis",
    "SpeechSynthesis.paused": "speech-synthesis",
    "speechsynthesis.paused": "speech-synthesis",
    "paused": "speech-synthesis",
    "new paused": "speech-synthesis",
    "SpeechSynthesis.pending": "speech-synthesis",
    "speechsynthesis.pending": "speech-synthesis",
    "pending": "speech-synthesis",
    "new pending": "speech-synthesis",
    "SpeechSynthesis.resume": "speech-synthesis",
    "speechsynthesis.resume": "speech-synthesis",
    "resume": "speech-synthesis",
    "new resume": "speech-synthesis",
    "SpeechSynthesis.speak": "speech-synthesis",
    "speechsynthesis.speak": "speech-synthesis",
    "speak": "speech-synthesis",
    "new speak": "speech-synthesis",
    "SpeechSynthesis.speaking": "speech-synthesis",
    "speechsynthesis.speaking": "speech-synthesis",
    "speaking": "speech-synthesis",
    "new speaking": "speech-synthesis",
    "SpeechSynthesisEvent": "speech-synthesis",
    "speechsynthesisevent": "speech-synthesis",
    "SpeechSynthesisEvent.charIndex": "speech-synthesis",
    "speechsynthesisevent.charindex": "speech-synthesis",
    "charIndex": "speech-synthesis",
    "new charIndex": "speech-synthesis",
    "SpeechSynthesisEvent.elapsedTime": "speech-synthesis",
    "speechsynthesisevent.elapsedtime": "speech-synthesis",
    "elapsedTime": "speech-synthesis",
    "new elapsedTime": "speech-synthesis",
    "SpeechSynthesisEvent.name": "speech-synthesis",
    "speechsynthesisevent.name": "speech-synthesis",
    "SpeechSynthesisEvent.utterance": "speech-synthesis",
    "speechsynthesisevent.utterance": "speech-synthesis",
    "utterance": "speech-synthesis",
    "new utterance": "speech-synthesis",
    "SpeechSynthesisUtterance": "speech-synthesis",
    "speechsynthesisutterance": "speech-synthesis",
    "SpeechSynthesisUtterance.SpeechSynthesisUtterance": "speech-synthesis",
    "speechsynthesisutterance.speechsynthesisutterance": "speech-synthesis",
    "new SpeechSynthesisUtterance": "speech-synthesis",
    "SpeechSynthesisUtterance.end_event": "speech-synthesis",
    "speechsynthesisutterance.end_event": "speech-synthesis",
    "end_event": "speech-synthesis",
    "new end_event": "speech-synthesis",
    "SpeechSynthesisUtterance.error_event": "speech-synthesis",
    "speechsynthesisutterance.error_event": "speech-synthesis",
    "error_event": "speech-synthesis",
    "new error_event": "speech-synthesis",
    "SpeechSynthesisUtterance.lang": "speech-synthesis",
    "speechsynthesisutterance.lang": "speech-synthesis",
    "lang": "speech-synthesis",
    "new lang": "speech-synthesis",
    "SpeechSynthesisUtterance.mark_event": "speech-synthesis",
    "speechsynthesisutterance.mark_event": "speech-synthesis",
    "mark_event": "speech-synthesis",
    "new mark_event": "speech-synthesis",
    "SpeechSynthesisUtterance.pause_event": "speech-synthesis",
    "speechsynthesisutterance.pause_event": "speech-synthesis",
    "pause_event": "speech-synthesis",
    "new pause_event": "speech-synthesis",
    "SpeechSynthesisUtterance.pitch": "speech-synthesis",
    "speechsynthesisutterance.pitch": "speech-synthesis",
    "pitch": "speech-synthesis",
    "new pitch": "speech-synthesis",
    "SpeechSynthesisUtterance.rate": "speech-synthesis",
    "speechsynthesisutterance.rate": "speech-synthesis",
    "rate": "speech-synthesis",
    "new rate": "speech-synthesis",
    "SpeechSynthesisUtterance.resume_event": "speech-synthesis",
    "speechsynthesisutterance.resume_event": "speech-synthesis",
    "resume_event": "speech-synthesis",
    "new resume_event": "speech-synthesis",
    "SpeechSynthesisUtterance.start_event": "speech-synthesis",
    "speechsynthesisutterance.start_event": "speech-synthesis",
    "start_event": "speech-synthesis",
    "new start_event": "speech-synthesis",
    "SpeechSynthesisUtterance.text": "speech-synthesis",
    "speechsynthesisutterance.text": "speech-synthesis",
    "SpeechSynthesisUtterance.voice": "speech-synthesis",
    "speechsynthesisutterance.voice": "speech-synthesis",
    "voice": "speech-synthesis",
    "new voice": "speech-synthesis",
    "SpeechSynthesisUtterance.volume": "speech-synthesis",
    "speechsynthesisutterance.volume": "speech-synthesis",
    "volume": "speech-synthesis",
    "new volume": "speech-synthesis",
    "SpeechSynthesisVoice": "speech-synthesis",
    "speechsynthesisvoice": "speech-synthesis",
    "SpeechSynthesisVoice.default": "speech-synthesis",
    "speechsynthesisvoice.default": "speech-synthesis",
    "default": "speech-synthesis",
    "new default": "speech-synthesis",
    "SpeechSynthesisVoice.lang": "speech-synthesis",
    "speechsynthesisvoice.lang": "speech-synthesis",
    "SpeechSynthesisVoice.localService": "speech-synthesis",
    "speechsynthesisvoice.localservice": "speech-synthesis",
    "localService": "speech-synthesis",
    "new localService": "speech-synthesis",
    "SpeechSynthesisVoice.name": "speech-synthesis",
    "speechsynthesisvoice.name": "speech-synthesis",
    "SpeechSynthesisVoice.voiceURI": "speech-synthesis",
    "speechsynthesisvoice.voiceuri": "speech-synthesis",
    "voiceURI": "speech-synthesis",
    "new voiceURI": "speech-synthesis",
    "Window.speechSynthesis": "speech-synthesis",
    "window.speechsynthesis": "speech-synthesis",
    "speechSynthesis": "speech-synthesis",
    "new speechSynthesis": "speech-synthesis",
    ":grammar-error": "spelling-grammar-error",
    "::grammar-error": "spelling-grammar-error",
    ":spelling-error": "spelling-grammar-error",
    "::spelling-error": "spelling-grammar-error",
    "Array.sort.stable_sorting": "stable-array-sort",
    "CSSStartingStyleRule": "starting-style",
    "cssstartingstylerule": "starting-style",
    "@starting-style": "starting-style",
    "position.position_sticky_table_elements": "sticky-positioning",
    "position.sticky": "sticky-positioning",
    "Document.hasStorageAccess": "storage-access",
    "document.hasstorageaccess": "storage-access",
    "hasStorageAccess": "storage-access",
    "new hasStorageAccess": "storage-access",
    "Document.requestStorageAccess": "storage-access",
    "document.requeststorageaccess": "storage-access",
    "requestStorageAccess": "storage-access",
    "new requestStorageAccess": "storage-access",
    "Navigator.storageBuckets": "storage-buckets",
    "navigator.storagebuckets": "storage-buckets",
    "storageBuckets": "storage-buckets",
    "new storageBuckets": "storage-buckets",
    "StorageBucket": "storage-buckets",
    "storagebucket": "storage-buckets",
    "StorageBucket.caches": "storage-buckets",
    "storagebucket.caches": "storage-buckets",
    "caches": "storage-buckets",
    "new caches": "storage-buckets",
    "StorageBucket.estimate": "storage-buckets",
    "storagebucket.estimate": "storage-buckets",
    "estimate": "storage-buckets",
    "new estimate": "storage-buckets",
    "StorageBucket.expires": "storage-buckets",
    "storagebucket.expires": "storage-buckets",
    "expires": "storage-buckets",
    "new expires": "storage-buckets",
    "StorageBucket.getDirectory": "storage-buckets",
    "storagebucket.getdirectory": "storage-buckets",
    "StorageBucket.indexedDB": "storage-buckets",
    "storagebucket.indexeddb": "storage-buckets",
    "indexedDB": "storage-buckets",
    "new indexedDB": "storage-buckets",
    "StorageBucket.name": "storage-buckets",
    "storagebucket.name": "storage-buckets",
    "StorageBucket.persist": "storage-buckets",
    "storagebucket.persist": "storage-buckets",
    "persist": "storage-buckets",
    "new persist": "storage-buckets",
    "StorageBucket.persisted": "storage-buckets",
    "storagebucket.persisted": "storage-buckets",
    "persisted": "storage-buckets",
    "new persisted": "storage-buckets",
    "StorageBucket.setExpires": "storage-buckets",
    "storagebucket.setexpires": "storage-buckets",
    "setExpires": "storage-buckets",
    "new setExpires": "storage-buckets",
    "StorageBucketManager": "storage-buckets",
    "storagebucketmanager": "storage-buckets",
    "StorageBucketManager.delete": "storage-buckets",
    "storagebucketmanager.delete": "storage-buckets",
    "StorageBucketManager.keys": "storage-buckets",
    "storagebucketmanager.keys": "storage-buckets",
    "StorageBucketManager.open": "storage-buckets",
    "storagebucketmanager.open": "storage-buckets",
    "WorkerNavigator.storageBuckets": "storage-buckets",
    "workernavigator.storagebuckets": "storage-buckets",
    "WorkerNavigator": "storage-buckets",
    "ByteLengthQueuingStrategy": "streams",
    "bytelengthqueuingstrategy": "streams",
    "ByteLengthQueuingStrategy.ByteLengthQueuingStrategy": "streams",
    "bytelengthqueuingstrategy.bytelengthqueuingstrategy": "streams",
    "new ByteLengthQueuingStrategy": "streams",
    "ByteLengthQueuingStrategy.highWaterMark": "streams",
    "bytelengthqueuingstrategy.highwatermark": "streams",
    "highWaterMark": "streams",
    "new highWaterMark": "streams",
    "ByteLengthQueuingStrategy.size": "streams",
    "bytelengthqueuingstrategy.size": "streams",
    "CountQueuingStrategy": "streams",
    "countqueuingstrategy": "streams",
    "CountQueuingStrategy.CountQueuingStrategy": "streams",
    "countqueuingstrategy.countqueuingstrategy": "streams",
    "new CountQueuingStrategy": "streams",
    "CountQueuingStrategy.highWaterMark": "streams",
    "countqueuingstrategy.highwatermark": "streams",
    "CountQueuingStrategy.size": "streams",
    "countqueuingstrategy.size": "streams",
    "ReadableStream": "streams",
    "readablestream": "streams",
    "ReadableStream.ReadableStream": "streams",
    "readablestream.readablestream": "streams",
    "new ReadableStream": "streams",
    "ReadableStream.cancel": "streams",
    "readablestream.cancel": "streams",
    "ReadableStream.getReader": "streams",
    "readablestream.getreader": "streams",
    "getReader": "streams",
    "new getReader": "streams",
    "ReadableStream.locked": "streams",
    "readablestream.locked": "streams",
    "locked": "streams",
    "new locked": "streams",
    "ReadableStream.pipeThrough": "streams",
    "readablestream.pipethrough": "streams",
    "pipeThrough": "streams",
    "new pipeThrough": "streams",
    "ReadableStream.pipeTo": "streams",
    "readablestream.pipeto": "streams",
    "pipeTo": "streams",
    "new pipeTo": "streams",
    "ReadableStream.tee": "streams",
    "readablestream.tee": "streams",
    "tee": "streams",
    "new tee": "streams",
    "WritableStream": "streams",
    "writablestream": "streams",
    "WritableStream.WritableStream": "streams",
    "writablestream.writablestream": "streams",
    "new WritableStream": "streams",
    "WritableStream.abort": "streams",
    "writablestream.abort": "streams",
    "WritableStream.getWriter": "streams",
    "writablestream.getwriter": "streams",
    "getWriter": "streams",
    "new getWriter": "streams",
    "WritableStream.locked": "streams",
    "writablestream.locked": "streams",
    "WritableStreamDefaultController": "streams",
    "writablestreamdefaultcontroller": "streams",
    "WritableStreamDefaultController.error": "streams",
    "writablestreamdefaultcontroller.error": "streams",
    "error": "streams",
    "new error": "streams",
    "WritableStreamDefaultWriter": "streams",
    "writablestreamdefaultwriter": "streams",
    "WritableStreamDefaultWriter.abort": "streams",
    "writablestreamdefaultwriter.abort": "streams",
    "WritableStreamDefaultWriter.close": "streams",
    "writablestreamdefaultwriter.close": "streams",
    "WritableStreamDefaultWriter.closed": "streams",
    "writablestreamdefaultwriter.closed": "streams",
    "closed": "streams",
    "new closed": "streams",
    "WritableStreamDefaultWriter.desiredSize": "streams",
    "writablestreamdefaultwriter.desiredsize": "streams",
    "desiredSize": "streams",
    "new desiredSize": "streams",
    "WritableStreamDefaultWriter.ready": "streams",
    "writablestreamdefaultwriter.ready": "streams",
    "ready": "streams",
    "new ready": "streams",
    "WritableStreamDefaultWriter.releaseLock": "streams",
    "writablestreamdefaultwriter.releaselock": "streams",
    "releaseLock": "streams",
    "new releaseLock": "streams",
    "WritableStreamDefaultWriter.write": "streams",
    "writablestreamdefaultwriter.write": "streams",
    "structuredClone": "structured-clone",
    "structuredclone": "structured-clone",
    "grid-template-columns.subgrid": "subgrid",
    "grid-template-rows.subgrid": "subgrid",
    "HTMLElement.tabIndex": "tabindex",
    "htmlelement.tabindex": "tabindex",
    "tabIndex": "tabindex",
    "new tabIndex": "tabindex",
    "tabindex": "tabindex",
    "loading-tabindex": "tabindex",
    ":target-text": "target-text",
    "::target-text": "target-text",
    "htmltemplateelement": "template",
    "HTMLTemplateElement.content": "template",
    "htmltemplateelement.content": "template",
    "new content": "template",
    "template": "template",
    "Temporal": "temporal",
    "Temporal.Calendar": "temporal",
    "Temporal.prototype.Calendar": "temporal",
    "Calendar": "temporal",
    "Temporal.Calendar.Calendar": "temporal",
    "Temporal.Calendar.dateAdd": "temporal",
    "Temporal.Calendar.dateFromFields": "temporal",
    "Temporal.Calendar.dateUntil": "temporal",
    "Temporal.Calendar.day": "temporal",
    "Temporal.Calendar.dayOfWeek": "temporal",
    "Temporal.Calendar.dayOfYear": "temporal",
    "Temporal.Calendar.daysInMonth": "temporal",
    "Temporal.Calendar.daysInWeek": "temporal",
    "Temporal.Calendar.daysInYear": "temporal",
    "Temporal.Calendar.era": "temporal",
    "Temporal.Calendar.eraYear": "temporal",
    "Temporal.Calendar.fields": "temporal",
    "Temporal.Calendar.from": "temporal",
    "Temporal.Calendar.id": "temporal",
    "Temporal.Calendar.inLeapYear": "temporal",
    "Temporal.Calendar.mergeFields": "temporal",
    "Temporal.Calendar.month": "temporal",
    "Temporal.Calendar.monthCode": "temporal",
    "Temporal.Calendar.monthDayFromFields": "temporal",
    "Temporal.Calendar.monthsInYear": "temporal",
    "Temporal.Calendar.toJSON": "temporal",
    "Temporal.Calendar.toString": "temporal",
    "Temporal.Calendar.weekOfYear": "temporal",
    "Temporal.Calendar.year": "temporal",
    "Temporal.Calendar.yearMonthFromFields": "temporal",
    "Temporal.Duration": "temporal",
    "Temporal.prototype.Duration": "temporal",
    "Duration": "temporal",
    "Temporal.Duration.Duration": "temporal",
    "Temporal.Duration.abs": "temporal",
    "Temporal.Duration.add": "temporal",
    "Temporal.Duration.blank": "temporal",
    "Temporal.Duration.compare": "temporal",
    "Temporal.Duration.days": "temporal",
    "Temporal.Duration.from": "temporal",
    "Temporal.Duration.hours": "temporal",
    "Temporal.Duration.microseconds": "temporal",
    "Temporal.Duration.milliseconds": "temporal",
    "Temporal.Duration.minutes": "temporal",
    "Temporal.Duration.months": "temporal",
    "Temporal.Duration.nanoseconds": "temporal",
    "Temporal.Duration.negated": "temporal",
    "Temporal.Duration.round": "temporal",
    "Temporal.Duration.seconds": "temporal",
    "Temporal.Duration.sign": "temporal",
    "Temporal.Duration.subtract": "temporal",
    "Temporal.Duration.toJSON": "temporal",
    "Temporal.Duration.toLocaleString": "temporal",
    "Temporal.Duration.toString": "temporal",
    "Temporal.Duration.total": "temporal",
    "Temporal.Duration.valueOf": "temporal",
    "Temporal.Duration.weeks": "temporal",
    "Temporal.Duration.with": "temporal",
    "Temporal.Duration.years": "temporal",
    "Temporal.Instant": "temporal",
    "Temporal.prototype.Instant": "temporal",
    "Instant": "temporal",
    "Temporal.Instant.Instant": "temporal",
    "Temporal.Instant.add": "temporal",
    "Temporal.Instant.compare": "temporal",
    "Temporal.Instant.epochMicroseconds": "temporal",
    "Temporal.Instant.epochMilliseconds": "temporal",
    "Temporal.Instant.epochNanoseconds": "temporal",
    "Temporal.Instant.epochSeconds": "temporal",
    "Temporal.Instant.equals": "temporal",
    "Temporal.Instant.from": "temporal",
    "Temporal.Instant.fromEpochMicroseconds": "temporal",
    "Temporal.Instant.fromEpochMilliseconds": "temporal",
    "Temporal.Instant.fromEpochNanoseconds": "temporal",
    "Temporal.Instant.fromEpochSeconds": "temporal",
    "Temporal.Instant.round": "temporal",
    "Temporal.Instant.since": "temporal",
    "Temporal.Instant.subtract": "temporal",
    "Temporal.Instant.toJSON": "temporal",
    "Temporal.Instant.toLocaleString": "temporal",
    "Temporal.Instant.toString": "temporal",
    "Temporal.Instant.toZonedDateTime": "temporal",
    "Temporal.Instant.toZonedDateTimeISO": "temporal",
    "Temporal.Instant.until": "temporal",
    "Temporal.Instant.valueOf": "temporal",
    "Temporal.Now": "temporal",
    "Temporal.prototype.Now": "temporal",
    "Now": "temporal",
    "Temporal.Now.instant": "temporal",
    "Temporal.Now.plainDate": "temporal",
    "Temporal.Now.plainDateISO": "temporal",
    "Temporal.Now.plainDateTime": "temporal",
    "Temporal.Now.plainDateTimeISO": "temporal",
    "Temporal.Now.timeZone": "temporal",
    "Temporal.Now.zonedDateTime": "temporal",
    "Temporal.Now.zonedDateTimeISO": "temporal",
    "Temporal.PlainDate": "temporal",
    "Temporal.prototype.PlainDate": "temporal",
    "PlainDate": "temporal",
    "Temporal.PlainDate.PlainDate": "temporal",
    "Temporal.PlainDate.add": "temporal",
    "Temporal.PlainDate.calendar": "temporal",
    "Temporal.PlainDate.compare": "temporal",
    "Temporal.PlainDate.day": "temporal",
    "Temporal.PlainDate.dayOfWeek": "temporal",
    "Temporal.PlainDate.dayOfYear": "temporal",
    "Temporal.PlainDate.daysInMonth": "temporal",
    "Temporal.PlainDate.daysInWeek": "temporal",
    "Temporal.PlainDate.daysInYear": "temporal",
    "Temporal.PlainDate.equals": "temporal",
    "Temporal.PlainDate.era": "temporal",
    "Temporal.PlainDate.eraYear": "temporal",
    "Temporal.PlainDate.from": "temporal",
    "Temporal.PlainDate.getISOFields": "temporal",
    "Temporal.PlainDate.inLeapYear": "temporal",
    "Temporal.PlainDate.month": "temporal",
    "Temporal.PlainDate.monthCode": "temporal",
    "Temporal.PlainDate.monthsInYear": "temporal",
    "Temporal.PlainDate.since": "temporal",
    "Temporal.PlainDate.subtract": "temporal",
    "Temporal.PlainDate.toJSON": "temporal",
    "Temporal.PlainDate.toLocaleString": "temporal",
    "Temporal.PlainDate.toPlainDateTime": "temporal",
    "Temporal.PlainDate.toPlainMonthDay": "temporal",
    "Temporal.PlainDate.toPlainYearMonth": "temporal",
    "Temporal.PlainDate.toString": "temporal",
    "Temporal.PlainDate.toZonedDateTime": "temporal",
    "Temporal.PlainDate.until": "temporal",
    "Temporal.PlainDate.valueOf": "temporal",
    "Temporal.PlainDate.weekOfYear": "temporal",
    "Temporal.PlainDate.with": "temporal",
    "Temporal.PlainDate.withCalendar": "temporal",
    "Temporal.PlainDate.year": "temporal",
    "Temporal.PlainDateTime": "temporal",
    "Temporal.prototype.PlainDateTime": "temporal",
    "PlainDateTime": "temporal",
    "Temporal.PlainDateTime.PlainDateTime": "temporal",
    "Temporal.PlainDateTime.add": "temporal",
    "Temporal.PlainDateTime.calendar": "temporal",
    "Temporal.PlainDateTime.compare": "temporal",
    "Temporal.PlainDateTime.day": "temporal",
    "Temporal.PlainDateTime.dayOfWeek": "temporal",
    "Temporal.PlainDateTime.dayOfYear": "temporal",
    "Temporal.PlainDateTime.daysInMonth": "temporal",
    "Temporal.PlainDateTime.daysInWeek": "temporal",
    "Temporal.PlainDateTime.daysInYear": "temporal",
    "Temporal.PlainDateTime.equals": "temporal",
    "Temporal.PlainDateTime.era": "temporal",
    "Temporal.PlainDateTime.eraYear": "temporal",
    "Temporal.PlainDateTime.from": "temporal",
    "Temporal.PlainDateTime.getISOFields": "temporal",
    "Temporal.PlainDateTime.hour": "temporal",
    "Temporal.PlainDateTime.inLeapYear": "temporal",
    "Temporal.PlainDateTime.microsecond": "temporal",
    "Temporal.PlainDateTime.millisecond": "temporal",
    "Temporal.PlainDateTime.minute": "temporal",
    "Temporal.PlainDateTime.month": "temporal",
    "Temporal.PlainDateTime.monthCode": "temporal",
    "Temporal.PlainDateTime.monthsInYear": "temporal",
    "Temporal.PlainDateTime.nanosecond": "temporal",
    "Temporal.PlainDateTime.round": "temporal",
    "Temporal.PlainDateTime.second": "temporal",
    "Temporal.PlainDateTime.since": "temporal",
    "Temporal.PlainDateTime.subtract": "temporal",
    "Temporal.PlainDateTime.toJSON": "temporal",
    "Temporal.PlainDateTime.toLocaleString": "temporal",
    "Temporal.PlainDateTime.toPlainDate": "temporal",
    "Temporal.PlainDateTime.toPlainMonthDay": "temporal",
    "Temporal.PlainDateTime.toPlainTime": "temporal",
    "Temporal.PlainDateTime.toPlainYearMonth": "temporal",
    "Temporal.PlainDateTime.toString": "temporal",
    "Temporal.PlainDateTime.toZonedDateTime": "temporal",
    "Temporal.PlainDateTime.until": "temporal",
    "Temporal.PlainDateTime.valueOf": "temporal",
    "Temporal.PlainDateTime.weekOfYear": "temporal",
    "Temporal.PlainDateTime.with": "temporal",
    "Temporal.PlainDateTime.withCalendar": "temporal",
    "Temporal.PlainDateTime.withPlainDate": "temporal",
    "Temporal.PlainDateTime.withPlainTime": "temporal",
    "Temporal.PlainDateTime.year": "temporal",
    "Temporal.PlainMonthDay": "temporal",
    "Temporal.prototype.PlainMonthDay": "temporal",
    "PlainMonthDay": "temporal",
    "Temporal.PlainMonthDay.PlainMonthDay": "temporal",
    "Temporal.PlainMonthDay.calendar": "temporal",
    "Temporal.PlainMonthDay.day": "temporal",
    "Temporal.PlainMonthDay.equals": "temporal",
    "Temporal.PlainMonthDay.from": "temporal",
    "Temporal.PlainMonthDay.getISOFields": "temporal",
    "Temporal.PlainMonthDay.monthCode": "temporal",
    "Temporal.PlainMonthDay.toJSON": "temporal",
    "Temporal.PlainMonthDay.toLocaleString": "temporal",
    "Temporal.PlainMonthDay.toPlainDate": "temporal",
    "Temporal.PlainMonthDay.toString": "temporal",
    "Temporal.PlainMonthDay.valueOf": "temporal",
    "Temporal.PlainMonthDay.with": "temporal",
    "Temporal.PlainTime": "temporal",
    "Temporal.prototype.PlainTime": "temporal",
    "PlainTime": "temporal",
    "Temporal.PlainTime.PlainTime": "temporal",
    "Temporal.PlainTime.add": "temporal",
    "Temporal.PlainTime.calendar": "temporal",
    "Temporal.PlainTime.compare": "temporal",
    "Temporal.PlainTime.equals": "temporal",
    "Temporal.PlainTime.from": "temporal",
    "Temporal.PlainTime.getISOFields": "temporal",
    "Temporal.PlainTime.hour": "temporal",
    "Temporal.PlainTime.microsecond": "temporal",
    "Temporal.PlainTime.millisecond": "temporal",
    "Temporal.PlainTime.minute": "temporal",
    "Temporal.PlainTime.nanosecond": "temporal",
    "Temporal.PlainTime.round": "temporal",
    "Temporal.PlainTime.second": "temporal",
    "Temporal.PlainTime.since": "temporal",
    "Temporal.PlainTime.subtract": "temporal",
    "Temporal.PlainTime.toJSON": "temporal",
    "Temporal.PlainTime.toLocaleString": "temporal",
    "Temporal.PlainTime.toPlainDateTime": "temporal",
    "Temporal.PlainTime.toString": "temporal",
    "Temporal.PlainTime.toZonedDateTime": "temporal",
    "Temporal.PlainTime.until": "temporal",
    "Temporal.PlainTime.valueOf": "temporal",
    "Temporal.PlainTime.with": "temporal",
    "Temporal.PlainYearMonth": "temporal",
    "Temporal.prototype.PlainYearMonth": "temporal",
    "PlainYearMonth": "temporal",
    "Temporal.PlainYearMonth.PlainYearMonth": "temporal",
    "Temporal.PlainYearMonth.add": "temporal",
    "Temporal.PlainYearMonth.calendar": "temporal",
    "Temporal.PlainYearMonth.compare": "temporal",
    "Temporal.PlainYearMonth.daysInMonth": "temporal",
    "Temporal.PlainYearMonth.daysInYear": "temporal",
    "Temporal.PlainYearMonth.equals": "temporal",
    "Temporal.PlainYearMonth.era": "temporal",
    "Temporal.PlainYearMonth.eraYear": "temporal",
    "Temporal.PlainYearMonth.from": "temporal",
    "Temporal.PlainYearMonth.getISOFields": "temporal",
    "Temporal.PlainYearMonth.inLeapYear": "temporal",
    "Temporal.PlainYearMonth.month": "temporal",
    "Temporal.PlainYearMonth.monthCode": "temporal",
    "Temporal.PlainYearMonth.monthsInYear": "temporal",
    "Temporal.PlainYearMonth.since": "temporal",
    "Temporal.PlainYearMonth.subtract": "temporal",
    "Temporal.PlainYearMonth.toJSON": "temporal",
    "Temporal.PlainYearMonth.toLocaleString": "temporal",
    "Temporal.PlainYearMonth.toPlainDate": "temporal",
    "Temporal.PlainYearMonth.toString": "temporal",
    "Temporal.PlainYearMonth.until": "temporal",
    "Temporal.PlainYearMonth.valueOf": "temporal",
    "Temporal.PlainYearMonth.with": "temporal",
    "Temporal.PlainYearMonth.year": "temporal",
    "Temporal.TimeZone": "temporal",
    "Temporal.prototype.TimeZone": "temporal",
    "TimeZone": "temporal",
    "Temporal.TimeZone.TimeZone": "temporal",
    "Temporal.TimeZone.from": "temporal",
    "Temporal.TimeZone.getInstantFor": "temporal",
    "Temporal.TimeZone.getNextTransition": "temporal",
    "Temporal.TimeZone.getOffsetNanosecondsFor": "temporal",
    "Temporal.TimeZone.getOffsetStringFor": "temporal",
    "Temporal.TimeZone.getPlainDateTimeFor": "temporal",
    "Temporal.TimeZone.getPossibleInstantsFor": "temporal",
    "Temporal.TimeZone.getPreviousTransition": "temporal",
    "Temporal.TimeZone.id": "temporal",
    "Temporal.TimeZone.toJSON": "temporal",
    "Temporal.TimeZone.toString": "temporal",
    "Temporal.ZonedDateTime": "temporal",
    "Temporal.prototype.ZonedDateTime": "temporal",
    "ZonedDateTime": "temporal",
    "Temporal.ZonedDateTime.ZonedDateTime": "temporal",
    "Temporal.ZonedDateTime.add": "temporal",
    "Temporal.ZonedDateTime.calendar": "temporal",
    "Temporal.ZonedDateTime.compare": "temporal",
    "Temporal.ZonedDateTime.day": "temporal",
    "Temporal.ZonedDateTime.dayOfWeek": "temporal",
    "Temporal.ZonedDateTime.dayOfYear": "temporal",
    "Temporal.ZonedDateTime.daysInMonth": "temporal",
    "Temporal.ZonedDateTime.daysInWeek": "temporal",
    "Temporal.ZonedDateTime.daysInYear": "temporal",
    "Temporal.ZonedDateTime.epochMicroseconds": "temporal",
    "Temporal.ZonedDateTime.epochMilliseconds": "temporal",
    "Temporal.ZonedDateTime.epochNanoseconds": "temporal",
    "Temporal.ZonedDateTime.epochSeconds": "temporal",
    "Temporal.ZonedDateTime.equals": "temporal",
    "Temporal.ZonedDateTime.era": "temporal",
    "Temporal.ZonedDateTime.eraYear": "temporal",
    "Temporal.ZonedDateTime.from": "temporal",
    "Temporal.ZonedDateTime.getISOFields": "temporal",
    "Temporal.ZonedDateTime.hour": "temporal",
    "Temporal.ZonedDateTime.hoursInDay": "temporal",
    "Temporal.ZonedDateTime.inLeapYear": "temporal",
    "Temporal.ZonedDateTime.microsecond": "temporal",
    "Temporal.ZonedDateTime.millisecond": "temporal",
    "Temporal.ZonedDateTime.minute": "temporal",
    "Temporal.ZonedDateTime.month": "temporal",
    "Temporal.ZonedDateTime.monthCode": "temporal",
    "Temporal.ZonedDateTime.monthsInYear": "temporal",
    "Temporal.ZonedDateTime.nanosecond": "temporal",
    "Temporal.ZonedDateTime.offset": "temporal",
    "Temporal.ZonedDateTime.offsetNanoseconds": "temporal",
    "Temporal.ZonedDateTime.round": "temporal",
    "Temporal.ZonedDateTime.second": "temporal",
    "Temporal.ZonedDateTime.since": "temporal",
    "Temporal.ZonedDateTime.startOfDay": "temporal",
    "Temporal.ZonedDateTime.subtract": "temporal",
    "Temporal.ZonedDateTime.timeZone": "temporal",
    "Temporal.ZonedDateTime.toInstant": "temporal",
    "Temporal.ZonedDateTime.toJSON": "temporal",
    "Temporal.ZonedDateTime.toLocaleString": "temporal",
    "Temporal.ZonedDateTime.toPlainDate": "temporal",
    "Temporal.ZonedDateTime.toPlainDateTime": "temporal",
    "Temporal.ZonedDateTime.toPlainMonthDay": "temporal",
    "Temporal.ZonedDateTime.toPlainTime": "temporal",
    "Temporal.ZonedDateTime.toPlainYearMonth": "temporal",
    "Temporal.ZonedDateTime.toString": "temporal",
    "Temporal.ZonedDateTime.until": "temporal",
    "Temporal.ZonedDateTime.valueOf": "temporal",
    "Temporal.ZonedDateTime.weekOfYear": "temporal",
    "Temporal.ZonedDateTime.with": "temporal",
    "Temporal.ZonedDateTime.withCalendar": "temporal",
    "Temporal.ZonedDateTime.withPlainDate": "temporal",
    "Temporal.ZonedDateTime.withPlainTime": "temporal",
    "Temporal.ZonedDateTime.withTimeZone": "temporal",
    "Temporal.ZonedDateTime.year": "temporal",
    "text-indent": "text-indent",
    "text-spacing-trim": "text-spacing-trim",
    "text-spacing": "text-spacing-trim",
    "text-wrap.balance": "text-wrap-balance",
    "text-wrap.nowrap": "text-wrap-nowrap",
    "text-wrap.wrap": "text-wrap-nowrap",
    "text-wrap.pretty": "text-wrap-pretty",
    "ArrayBuffer.transfer": "transferable-arraybuffer",
    "ArrayBuffer.prototype.transfer": "transferable-arraybuffer",
    "transfer": "transferable-arraybuffer",
    "ArrayBuffer.transferToFixedLength": "transferable-arraybuffer",
    "ArrayBuffer.prototype.transferToFixedLength": "transferable-arraybuffer",
    "transferToFixedLength": "transferable-arraybuffer",
    "ArrayBuffer.detached": "transferable-arraybuffer",
    "ArrayBuffer.prototype.detached": "transferable-arraybuffer",
    "detached": "transferable-arraybuffer",
    "transform-origin": "transforms2d",
    "transform-function": "transforms2d",
    "matrix": "transforms2d",
    "scaleX": "transforms2d",
    "scaleY": "transforms2d",
    "skew": "transforms2d",
    "skewX": "transforms2d",
    "skewY": "transforms2d",
    "translateX": "transforms2d",
    "translateY": "transforms2d",
    "backface-visibility": "transforms3d",
    "backface": "transforms3d",
    "perspective": "transforms3d",
    "perspective.none": "transforms3d",
    "perspective-origin": "transforms3d",
    "perspective-origin.bottom": "transforms3d",
    "perspective-origin.center": "transforms3d",
    "perspective-origin.left": "transforms3d",
    "perspective-origin.right": "transforms3d",
    "perspective-origin.top": "transforms3d",
    "transform.3d": "transforms3d",
    "transform-style": "transforms3d",
    "matrix3d": "transforms3d",
    "rotate3d": "transforms3d",
    "rotateX": "transforms3d",
    "rotateY": "transforms3d",
    "rotateZ": "transforms3d",
    "scale3d": "transforms3d",
    "scaleZ": "transforms3d",
    "translate3d": "transforms3d",
    "translateZ": "transforms3d",
    "transition-behavior": "transition-behavior",
    "loading-translate": "translate",
    "HTMLElement.translate": "translate",
    "htmlelement.translate": "translate",
    "acos": "trig-functions",
    "asin": "trig-functions",
    "atan": "trig-functions",
    "atan2": "trig-functions",
    "cos": "trig-functions",
    "sin": "trig-functions",
    "tan": "trig-functions",
    "TrustedHTML": "trusted-types",
    "trustedhtml": "trusted-types",
    "TrustedHTML.toString": "trusted-types",
    "trustedhtml.tostring": "trusted-types",
    "new toString": "trusted-types",
    "TrustedScript": "trusted-types",
    "trustedscript": "trusted-types",
    "TrustedScript.toString": "trusted-types",
    "trustedscript.tostring": "trusted-types",
    "TrustedScriptURL": "trusted-types",
    "trustedscripturl": "trusted-types",
    "TrustedScriptURL.toString": "trusted-types",
    "trustedscripturl.tostring": "trusted-types",
    "TrustedTypePolicy": "trusted-types",
    "trustedtypepolicy": "trusted-types",
    "TrustedTypePolicy.createHTML": "trusted-types",
    "trustedtypepolicy.createhtml": "trusted-types",
    "createHTML": "trusted-types",
    "new createHTML": "trusted-types",
    "TrustedTypePolicy.createScript": "trusted-types",
    "trustedtypepolicy.createscript": "trusted-types",
    "createScript": "trusted-types",
    "new createScript": "trusted-types",
    "TrustedTypePolicy.createScriptURL": "trusted-types",
    "trustedtypepolicy.createscripturl": "trusted-types",
    "createScriptURL": "trusted-types",
    "new createScriptURL": "trusted-types",
    "TrustedTypePolicy.name": "trusted-types",
    "trustedtypepolicy.name": "trusted-types",
    "TrustedTypePolicyFactory": "trusted-types",
    "trustedtypepolicyfactory": "trusted-types",
    "TrustedTypePolicyFactory.createPolicy": "trusted-types",
    "trustedtypepolicyfactory.createpolicy": "trusted-types",
    "createPolicy": "trusted-types",
    "new createPolicy": "trusted-types",
    "TrustedTypePolicyFactory.defaultPolicy": "trusted-types",
    "trustedtypepolicyfactory.defaultpolicy": "trusted-types",
    "defaultPolicy": "trusted-types",
    "new defaultPolicy": "trusted-types",
    "TrustedTypePolicyFactory.emptyHTML": "trusted-types",
    "trustedtypepolicyfactory.emptyhtml": "trusted-types",
    "emptyHTML": "trusted-types",
    "new emptyHTML": "trusted-types",
    "TrustedTypePolicyFactory.emptyScript": "trusted-types",
    "trustedtypepolicyfactory.emptyscript": "trusted-types",
    "emptyScript": "trusted-types",
    "new emptyScript": "trusted-types",
    "TrustedTypePolicyFactory.getAttributeType": "trusted-types",
    "trustedtypepolicyfactory.getattributetype": "trusted-types",
    "getAttributeType": "trusted-types",
    "new getAttributeType": "trusted-types",
    "TrustedTypePolicyFactory.getPropertyType": "trusted-types",
    "trustedtypepolicyfactory.getpropertytype": "trusted-types",
    "getPropertyType": "trusted-types",
    "new getPropertyType": "trusted-types",
    "TrustedTypePolicyFactory.isHTML": "trusted-types",
    "trustedtypepolicyfactory.ishtml": "trusted-types",
    "isHTML": "trusted-types",
    "new isHTML": "trusted-types",
    "TrustedTypePolicyFactory.isScript": "trusted-types",
    "trustedtypepolicyfactory.isscript": "trusted-types",
    "isScript": "trusted-types",
    "new isScript": "trusted-types",
    "TrustedTypePolicyFactory.isScriptURL": "trusted-types",
    "trustedtypepolicyfactory.isscripturl": "trusted-types",
    "isScriptURL": "trusted-types",
    "new isScriptURL": "trusted-types",
    "trustedTypes": "trusted-types",
    "trustedtypes": "trusted-types",
    "content-security-policy.require-trusted-types-for": "trusted-types",
    "Content_Security_Policy.require_trusted_types_for": "trusted-types",
    "content-security-policy.trusted-types": "trusted-types",
    "Content_Security_Policy.trusted_types": "trusted-types",
    "display.multi-keyword_values": "two-value-display",
    "display.multi": "two-value-display",
    "TypedArray.every": "typed-array-iteration-methods",
    "TypedArray.prototype.every": "typed-array-iteration-methods",
    "TypedArray.filter": "typed-array-iteration-methods",
    "TypedArray.prototype.filter": "typed-array-iteration-methods",
    "TypedArray.forEach": "typed-array-iteration-methods",
    "TypedArray.prototype.forEach": "typed-array-iteration-methods",
    "TypedArray.indexOf": "typed-array-iteration-methods",
    "TypedArray.prototype.indexOf": "typed-array-iteration-methods",
    "TypedArray.lastIndexOf": "typed-array-iteration-methods",
    "TypedArray.prototype.lastIndexOf": "typed-array-iteration-methods",
    "TypedArray.map": "typed-array-iteration-methods",
    "TypedArray.prototype.map": "typed-array-iteration-methods",
    "TypedArray.reduce": "typed-array-iteration-methods",
    "TypedArray.prototype.reduce": "typed-array-iteration-methods",
    "TypedArray.reduceRight": "typed-array-iteration-methods",
    "TypedArray.prototype.reduceRight": "typed-array-iteration-methods",
    "TypedArray.some": "typed-array-iteration-methods",
    "TypedArray.prototype.some": "typed-array-iteration-methods",
    "TypedArray.@@iterator": "typed-array-iterators",
    "TypedArray.prototype.@@iterator": "typed-array-iterators",
    "TypedArray.entries": "typed-array-iterators",
    "TypedArray.prototype.entries": "typed-array-iterators",
    "TypedArray.keys": "typed-array-iterators",
    "TypedArray.prototype.keys": "typed-array-iterators",
    "TypedArray.values": "typed-array-iterators",
    "TypedArray.prototype.values": "typed-array-iterators",
    "Float32Array": "typed-arrays",
    "Float32Array.Float32Array": "typed-arrays",
    "Float32Array.prototype.Float32Array": "typed-arrays",
    "Float32Array.Float32Array.constructor_without_parameters": "typed-arrays",
    "Float32Array.Float32Array.iterable_allowed": "typed-arrays",
    "Float64Array": "typed-arrays",
    "Float64Array.Float64Array": "typed-arrays",
    "Float64Array.prototype.Float64Array": "typed-arrays",
    "Float64Array.Float64Array.constructor_without_parameters": "typed-arrays",
    "Float64Array.Float64Array.iterable_allowed": "typed-arrays",
    "Int16Array": "typed-arrays",
    "Int16Array.Int16Array": "typed-arrays",
    "Int16Array.prototype.Int16Array": "typed-arrays",
    "Int16Array.Int16Array.constructor_without_parameters": "typed-arrays",
    "Int32Array": "typed-arrays",
    "Int32Array.Int32Array": "typed-arrays",
    "Int32Array.prototype.Int32Array": "typed-arrays",
    "Int32Array.Int32Array.constructor_without_parameters": "typed-arrays",
    "Int32Array.Int32Array.iterable_allowed": "typed-arrays",
    "Int8Array": "typed-arrays",
    "Int8Array.Int8Array": "typed-arrays",
    "Int8Array.prototype.Int8Array": "typed-arrays",
    "Int8Array.Int8Array.constructor_without_parameters": "typed-arrays",
    "Int8Array.Int8Array.iterable_allowed": "typed-arrays",
    "TypedArray": "typed-arrays",
    "TypedArray.BYTES_PER_ELEMENT": "typed-arrays",
    "TypedArray.prototype.BYTES_PER_ELEMENT": "typed-arrays",
    "BYTES_PER_ELEMENT": "typed-arrays",
    "TypedArray.buffer": "typed-arrays",
    "TypedArray.prototype.buffer": "typed-arrays",
    "buffer": "typed-arrays",
    "TypedArray.byteLength": "typed-arrays",
    "TypedArray.prototype.byteLength": "typed-arrays",
    "byteLength": "typed-arrays",
    "TypedArray.byteOffset": "typed-arrays",
    "TypedArray.prototype.byteOffset": "typed-arrays",
    "byteOffset": "typed-arrays",
    "TypedArray.constructor_without_parameters": "typed-arrays",
    "TypedArray.prototype.constructor_without_parameters": "typed-arrays",
    "constructor_without_parameters": "typed-arrays",
    "TypedArray.join": "typed-arrays",
    "TypedArray.prototype.join": "typed-arrays",
    "TypedArray.length": "typed-arrays",
    "TypedArray.prototype.length": "typed-arrays",
    "TypedArray.name": "typed-arrays",
    "TypedArray.prototype.name": "typed-arrays",
    "TypedArray.named_properties": "typed-arrays",
    "TypedArray.prototype.named_properties": "typed-arrays",
    "named_properties": "typed-arrays",
    "TypedArray.reverse": "typed-arrays",
    "TypedArray.prototype.reverse": "typed-arrays",
    "TypedArray.set": "typed-arrays",
    "TypedArray.prototype.set": "typed-arrays",
    "TypedArray.slice": "typed-arrays",
    "TypedArray.prototype.slice": "typed-arrays",
    "TypedArray.sort": "typed-arrays",
    "TypedArray.prototype.sort": "typed-arrays",
    "TypedArray.subarray": "typed-arrays",
    "TypedArray.prototype.subarray": "typed-arrays",
    "subarray": "typed-arrays",
    "TypedArray.toLocaleString": "typed-arrays",
    "TypedArray.prototype.toLocaleString": "typed-arrays",
    "TypedArray.toString": "typed-arrays",
    "TypedArray.prototype.toString": "typed-arrays",
    "Uint16Array": "typed-arrays",
    "Uint16Array.Uint16Array": "typed-arrays",
    "Uint16Array.prototype.Uint16Array": "typed-arrays",
    "Uint16Array.Uint16Array.constructor_without_parameters": "typed-arrays",
    "Uint16Array.Uint16Array.iterable_allowed": "typed-arrays",
    "Uint32Array": "typed-arrays",
    "Uint32Array.Uint32Array": "typed-arrays",
    "Uint32Array.prototype.Uint32Array": "typed-arrays",
    "Uint32Array.Uint32Array.constructor_without_parameters": "typed-arrays",
    "Uint32Array.Uint32Array.iterable_allowed": "typed-arrays",
    "Uint8Array": "typed-arrays",
    "Uint8Array.Uint8Array": "typed-arrays",
    "Uint8Array.prototype.Uint8Array": "typed-arrays",
    "Uint8Array.Uint8Array.constructor_without_parameters": "typed-arrays",
    "Uint8Array.Uint8Array.iterable_allowed": "typed-arrays",
    "Uint8ClampedArray": "typed-arrays",
    "Uint8ClampedArray.Uint8ClampedArray": "typed-arrays",
    "Uint8ClampedArray.prototype.Uint8ClampedArray": "typed-arrays",
    "Uint8ClampedArray.Uint8ClampedArray.iterable_allowed": "typed-arrays",
    "URL.canParse_static": "url-canparse",
    "url.canparse_static": "url-canparse",
    "URL": "url-canparse",
    "canParse_static": "url-canparse",
    "new canParse_static": "url-canparse",
    "Navigator.userActivation": "user-activation",
    "navigator.useractivation": "user-activation",
    "userActivation": "user-activation",
    "new userActivation": "user-activation",
    "UserActivation": "user-activation",
    "useractivation": "user-activation",
    "UserActivation.hasBeenActive": "user-activation",
    "useractivation.hasbeenactive": "user-activation",
    "hasBeenActive": "user-activation",
    "new hasBeenActive": "user-activation",
    "UserActivation.isActive": "user-activation",
    "useractivation.isactive": "user-activation",
    "isActive": "user-activation",
    "new isActive": "user-activation",
    ":user-invalid": "user-pseudos",
    "::user-invalid": "user-pseudos",
    ":user-valid": "user-pseudos",
    "::user-valid": "user-pseudos",
    "Document.startViewTransition": "view-transitions",
    "document.startviewtransition": "view-transitions",
    "startViewTransition": "view-transitions",
    "new startViewTransition": "view-transitions",
    "ViewTransition": "view-transitions",
    "viewtransition": "view-transitions",
    "ViewTransition.finished": "view-transitions",
    "viewtransition.finished": "view-transitions",
    "ViewTransition.ready": "view-transitions",
    "viewtransition.ready": "view-transitions",
    "ViewTransition.skipTransition": "view-transitions",
    "viewtransition.skiptransition": "view-transitions",
    "skipTransition": "view-transitions",
    "new skipTransition": "view-transitions",
    "ViewTransition.updateCallbackDone": "view-transitions",
    "viewtransition.updatecallbackdone": "view-transitions",
    "updateCallbackDone": "view-transitions",
    "new updateCallbackDone": "view-transitions",
    "view-transition-name": "view-transitions",
    "view-transition": "view-transitions",
    ":view-transition": "view-transitions",
    "::view-transition": "view-transitions",
    ":view-transition-group": "view-transitions",
    "::view-transition-group": "view-transitions",
    ":view-transition-image-pair": "view-transitions",
    "::view-transition-image-pair": "view-transitions",
    ":view-transition-new": "view-transitions",
    "::view-transition-new": "view-transitions",
    ":view-transition-old": "view-transitions",
    "::view-transition-old": "view-transitions",
    "vb": "viewport-unit-variants",
    "vi": "viewport-unit-variants",
    "viewport_percentage_units_dynamic": "viewport-unit-variants",
    "viewport_percentage_units_large": "viewport-unit-variants",
    "viewport_percentage_units_small": "viewport-unit-variants",
    "vh": "viewport-units",
    "vmax": "viewport-units",
    "vmin": "viewport-units",
    "vw": "viewport-units",
    "VisualViewport": "visual-viewport",
    "visualviewport": "visual-viewport",
    "VisualViewport.height": "visual-viewport",
    "visualviewport.height": "visual-viewport",
    "VisualViewport.offsetLeft": "visual-viewport",
    "visualviewport.offsetleft": "visual-viewport",
    "offsetLeft": "visual-viewport",
    "new offsetLeft": "visual-viewport",
    "VisualViewport.offsetTop": "visual-viewport",
    "visualviewport.offsettop": "visual-viewport",
    "offsetTop": "visual-viewport",
    "new offsetTop": "visual-viewport",
    "VisualViewport.pageLeft": "visual-viewport",
    "visualviewport.pageleft": "visual-viewport",
    "pageLeft": "visual-viewport",
    "new pageLeft": "visual-viewport",
    "VisualViewport.pageTop": "visual-viewport",
    "visualviewport.pagetop": "visual-viewport",
    "pageTop": "visual-viewport",
    "new pageTop": "visual-viewport",
    "VisualViewport.scale": "visual-viewport",
    "visualviewport.scale": "visual-viewport",
    "VisualViewport.width": "visual-viewport",
    "visualviewport.width": "visual-viewport",
    "Window.visualViewport": "visual-viewport",
    "window.visualviewport": "visual-viewport",
    "visualViewport": "visual-viewport",
    "new visualViewport": "visual-viewport",
    "Animation": "web-animations",
    "Animation.Animation": "web-animations",
    "animation.animation": "web-animations",
    "new Animation": "web-animations",
    "Animation.cancel_event": "web-animations",
    "animation.cancel_event": "web-animations",
    "Animation.cancel": "web-animations",
    "animation.cancel": "web-animations",
    "Animation.commitStyles": "web-animations",
    "animation.commitstyles": "web-animations",
    "commitStyles": "web-animations",
    "new commitStyles": "web-animations",
    "Animation.currentTime": "web-animations",
    "animation.currenttime": "web-animations",
    "currentTime": "web-animations",
    "new currentTime": "web-animations",
    "Animation.effect": "web-animations",
    "animation.effect": "web-animations",
    "effect": "web-animations",
    "new effect": "web-animations",
    "Animation.finish": "web-animations",
    "animation.finish": "web-animations",
    "finish": "web-animations",
    "new finish": "web-animations",
    "Animation.finished": "web-animations",
    "animation.finished": "web-animations",
    "Animation.finish_event": "web-animations",
    "animation.finish_event": "web-animations",
    "finish_event": "web-animations",
    "new finish_event": "web-animations",
    "Animation.id": "web-animations",
    "animation.id": "web-animations",
    "Animation.pause": "web-animations",
    "animation.pause": "web-animations",
    "Animation.pending": "web-animations",
    "animation.pending": "web-animations",
    "Animation.persist": "web-animations",
    "animation.persist": "web-animations",
    "Animation.play": "web-animations",
    "animation.play": "web-animations",
    "play": "web-animations",
    "new play": "web-animations",
    "Animation.playbackRate": "web-animations",
    "animation.playbackrate": "web-animations",
    "playbackRate": "web-animations",
    "new playbackRate": "web-animations",
    "Animation.playState": "web-animations",
    "animation.playstate": "web-animations",
    "playState": "web-animations",
    "new playState": "web-animations",
    "Animation.ready": "web-animations",
    "animation.ready": "web-animations",
    "Animation.remove_event": "web-animations",
    "animation.remove_event": "web-animations",
    "remove_event": "web-animations",
    "new remove_event": "web-animations",
    "Animation.replaceState": "web-animations",
    "animation.replacestate": "web-animations",
    "replaceState": "web-animations",
    "new replaceState": "web-animations",
    "Animation.reverse": "web-animations",
    "animation.reverse": "web-animations",
    "new reverse": "web-animations",
    "Animation.startTime": "web-animations",
    "animation.starttime": "web-animations",
    "startTime": "web-animations",
    "new startTime": "web-animations",
    "Animation.timeline": "web-animations",
    "animation.timeline": "web-animations",
    "timeline": "web-animations",
    "new timeline": "web-animations",
    "Animation.updatePlaybackRate": "web-animations",
    "animation.updateplaybackrate": "web-animations",
    "updatePlaybackRate": "web-animations",
    "new updatePlaybackRate": "web-animations",
    "AnimationTimeline": "web-animations",
    "animationtimeline": "web-animations",
    "AnimationTimeline.currentTime": "web-animations",
    "animationtimeline.currenttime": "web-animations",
    "AnimationEffect": "web-animations",
    "animationeffect": "web-animations",
    "AnimationEffect.getComputedTiming": "web-animations",
    "animationeffect.getcomputedtiming": "web-animations",
    "getComputedTiming": "web-animations",
    "new getComputedTiming": "web-animations",
    "AnimationEffect.getTiming": "web-animations",
    "animationeffect.gettiming": "web-animations",
    "getTiming": "web-animations",
    "new getTiming": "web-animations",
    "AnimationEffect.updateTiming": "web-animations",
    "animationeffect.updatetiming": "web-animations",
    "updateTiming": "web-animations",
    "new updateTiming": "web-animations",
    "AnimationPlaybackEvent": "web-animations",
    "animationplaybackevent": "web-animations",
    "AnimationPlaybackEvent.AnimationPlaybackEvent": "web-animations",
    "animationplaybackevent.animationplaybackevent": "web-animations",
    "new AnimationPlaybackEvent": "web-animations",
    "AnimationPlaybackEvent.currentTime": "web-animations",
    "animationplaybackevent.currenttime": "web-animations",
    "AnimationPlaybackEvent.timelineTime": "web-animations",
    "animationplaybackevent.timelinetime": "web-animations",
    "timelineTime": "web-animations",
    "new timelineTime": "web-animations",
    "KeyframeEffect": "web-animations",
    "keyframeeffect": "web-animations",
    "KeyframeEffect.KeyframeEffect": "web-animations",
    "keyframeeffect.keyframeeffect": "web-animations",
    "new KeyframeEffect": "web-animations",
    "KeyframeEffect.composite": "web-animations",
    "keyframeeffect.composite": "web-animations",
    "composite": "web-animations",
    "new composite": "web-animations",
    "KeyframeEffect.getKeyframes": "web-animations",
    "keyframeeffect.getkeyframes": "web-animations",
    "getKeyframes": "web-animations",
    "new getKeyframes": "web-animations",
    "KeyframeEffect.pseudoElement": "web-animations",
    "keyframeeffect.pseudoelement": "web-animations",
    "pseudoElement": "web-animations",
    "new pseudoElement": "web-animations",
    "KeyframeEffect.setKeyframes": "web-animations",
    "keyframeeffect.setkeyframes": "web-animations",
    "setKeyframes": "web-animations",
    "new setKeyframes": "web-animations",
    "KeyframeEffect.target": "web-animations",
    "keyframeeffect.target": "web-animations",
    "DocumentTimeline": "web-animations",
    "documenttimeline": "web-animations",
    "DocumentTimeline.DocumentTimeline": "web-animations",
    "documenttimeline.documenttimeline": "web-animations",
    "new DocumentTimeline": "web-animations",
    "Document.getAnimations": "web-animations",
    "document.getanimations": "web-animations",
    "getAnimations": "web-animations",
    "new getAnimations": "web-animations",
    "Document.timeline": "web-animations",
    "document.timeline": "web-animations",
    "Element.animate": "web-animations",
    "element.animate": "web-animations",
    "animate": "web-animations",
    "new animate": "web-animations",
    "Bluetooth": "web-bluetooth",
    "bluetooth": "web-bluetooth",
    "Bluetooth.getAvailability": "web-bluetooth",
    "bluetooth.getavailability": "web-bluetooth",
    "getAvailability": "web-bluetooth",
    "new getAvailability": "web-bluetooth",
    "Bluetooth.getDevices": "web-bluetooth",
    "bluetooth.getdevices": "web-bluetooth",
    "getDevices": "web-bluetooth",
    "new getDevices": "web-bluetooth",
    "Bluetooth.requestDevice": "web-bluetooth",
    "bluetooth.requestdevice": "web-bluetooth",
    "requestDevice": "web-bluetooth",
    "new requestDevice": "web-bluetooth",
    "BluetoothCharacteristicProperties": "web-bluetooth",
    "bluetoothcharacteristicproperties": "web-bluetooth",
    "BluetoothCharacteristicProperties.authenticatedSignedWrites": "web-bluetooth",
    "bluetoothcharacteristicproperties.authenticatedsignedwrites": "web-bluetooth",
    "authenticatedSignedWrites": "web-bluetooth",
    "new authenticatedSignedWrites": "web-bluetooth",
    "BluetoothCharacteristicProperties.broadcast": "web-bluetooth",
    "bluetoothcharacteristicproperties.broadcast": "web-bluetooth",
    "broadcast": "web-bluetooth",
    "new broadcast": "web-bluetooth",
    "BluetoothCharacteristicProperties.indicate": "web-bluetooth",
    "bluetoothcharacteristicproperties.indicate": "web-bluetooth",
    "indicate": "web-bluetooth",
    "new indicate": "web-bluetooth",
    "BluetoothCharacteristicProperties.notify": "web-bluetooth",
    "bluetoothcharacteristicproperties.notify": "web-bluetooth",
    "notify": "web-bluetooth",
    "new notify": "web-bluetooth",
    "BluetoothCharacteristicProperties.read": "web-bluetooth",
    "bluetoothcharacteristicproperties.read": "web-bluetooth",
    "BluetoothCharacteristicProperties.reliableWrite": "web-bluetooth",
    "bluetoothcharacteristicproperties.reliablewrite": "web-bluetooth",
    "reliableWrite": "web-bluetooth",
    "new reliableWrite": "web-bluetooth",
    "BluetoothCharacteristicProperties.writableAuxiliaries": "web-bluetooth",
    "bluetoothcharacteristicproperties.writableauxiliaries": "web-bluetooth",
    "writableAuxiliaries": "web-bluetooth",
    "new writableAuxiliaries": "web-bluetooth",
    "BluetoothCharacteristicProperties.write": "web-bluetooth",
    "bluetoothcharacteristicproperties.write": "web-bluetooth",
    "BluetoothCharacteristicProperties.writeWithoutResponse": "web-bluetooth",
    "bluetoothcharacteristicproperties.writewithoutresponse": "web-bluetooth",
    "writeWithoutResponse": "web-bluetooth",
    "new writeWithoutResponse": "web-bluetooth",
    "BluetoothDevice": "web-bluetooth",
    "bluetoothdevice": "web-bluetooth",
    "BluetoothDevice.gatt": "web-bluetooth",
    "bluetoothdevice.gatt": "web-bluetooth",
    "gatt": "web-bluetooth",
    "new gatt": "web-bluetooth",
    "BluetoothDevice.gattserverdisconnected_event": "web-bluetooth",
    "bluetoothdevice.gattserverdisconnected_event": "web-bluetooth",
    "gattserverdisconnected_event": "web-bluetooth",
    "new gattserverdisconnected_event": "web-bluetooth",
    "BluetoothDevice.id": "web-bluetooth",
    "bluetoothdevice.id": "web-bluetooth",
    "BluetoothDevice.name": "web-bluetooth",
    "bluetoothdevice.name": "web-bluetooth",
    "BluetoothRemoteGATTCharacteristic": "web-bluetooth",
    "bluetoothremotegattcharacteristic": "web-bluetooth",
    "BluetoothRemoteGATTCharacteristic.characteristicvaluechanged_event": "web-bluetooth",
    "bluetoothremotegattcharacteristic.characteristicvaluechanged_event": "web-bluetooth",
    "characteristicvaluechanged_event": "web-bluetooth",
    "new characteristicvaluechanged_event": "web-bluetooth",
    "BluetoothRemoteGATTCharacteristic.getDescriptor": "web-bluetooth",
    "bluetoothremotegattcharacteristic.getdescriptor": "web-bluetooth",
    "getDescriptor": "web-bluetooth",
    "new getDescriptor": "web-bluetooth",
    "BluetoothRemoteGATTCharacteristic.getDescriptors": "web-bluetooth",
    "bluetoothremotegattcharacteristic.getdescriptors": "web-bluetooth",
    "getDescriptors": "web-bluetooth",
    "new getDescriptors": "web-bluetooth",
    "BluetoothRemoteGATTCharacteristic.properties": "web-bluetooth",
    "bluetoothremotegattcharacteristic.properties": "web-bluetooth",
    "properties": "web-bluetooth",
    "new properties": "web-bluetooth",
    "BluetoothRemoteGATTCharacteristic.readValue": "web-bluetooth",
    "bluetoothremotegattcharacteristic.readvalue": "web-bluetooth",
    "readValue": "web-bluetooth",
    "new readValue": "web-bluetooth",
    "BluetoothRemoteGATTCharacteristic.service": "web-bluetooth",
    "bluetoothremotegattcharacteristic.service": "web-bluetooth",
    "service": "web-bluetooth",
    "new service": "web-bluetooth",
    "BluetoothRemoteGATTCharacteristic.startNotifications": "web-bluetooth",
    "bluetoothremotegattcharacteristic.startnotifications": "web-bluetooth",
    "startNotifications": "web-bluetooth",
    "new startNotifications": "web-bluetooth",
    "BluetoothRemoteGATTCharacteristic.stopNotifications": "web-bluetooth",
    "bluetoothremotegattcharacteristic.stopnotifications": "web-bluetooth",
    "stopNotifications": "web-bluetooth",
    "new stopNotifications": "web-bluetooth",
    "BluetoothRemoteGATTCharacteristic.uuid": "web-bluetooth",
    "bluetoothremotegattcharacteristic.uuid": "web-bluetooth",
    "uuid": "web-bluetooth",
    "new uuid": "web-bluetooth",
    "BluetoothRemoteGATTCharacteristic.value": "web-bluetooth",
    "bluetoothremotegattcharacteristic.value": "web-bluetooth",
    "value": "web-bluetooth",
    "new value": "web-bluetooth",
    "BluetoothRemoteGATTCharacteristic.writeValue": "web-bluetooth",
    "bluetoothremotegattcharacteristic.writevalue": "web-bluetooth",
    "writeValue": "web-bluetooth",
    "new writeValue": "web-bluetooth",
    "BluetoothRemoteGATTCharacteristic.writeValueWithResponse": "web-bluetooth",
    "bluetoothremotegattcharacteristic.writevaluewithresponse": "web-bluetooth",
    "writeValueWithResponse": "web-bluetooth",
    "new writeValueWithResponse": "web-bluetooth",
    "BluetoothRemoteGATTCharacteristic.writeValueWithoutResponse": "web-bluetooth",
    "bluetoothremotegattcharacteristic.writevaluewithoutresponse": "web-bluetooth",
    "writeValueWithoutResponse": "web-bluetooth",
    "new writeValueWithoutResponse": "web-bluetooth",
    "BluetoothRemoteGATTDescriptor": "web-bluetooth",
    "bluetoothremotegattdescriptor": "web-bluetooth",
    "BluetoothRemoteGATTDescriptor.characteristic": "web-bluetooth",
    "bluetoothremotegattdescriptor.characteristic": "web-bluetooth",
    "characteristic": "web-bluetooth",
    "new characteristic": "web-bluetooth",
    "BluetoothRemoteGATTDescriptor.readValue": "web-bluetooth",
    "bluetoothremotegattdescriptor.readvalue": "web-bluetooth",
    "BluetoothRemoteGATTDescriptor.uuid": "web-bluetooth",
    "bluetoothremotegattdescriptor.uuid": "web-bluetooth",
    "BluetoothRemoteGATTDescriptor.value": "web-bluetooth",
    "bluetoothremotegattdescriptor.value": "web-bluetooth",
    "BluetoothRemoteGATTDescriptor.writeValue": "web-bluetooth",
    "bluetoothremotegattdescriptor.writevalue": "web-bluetooth",
    "BluetoothRemoteGATTServer": "web-bluetooth",
    "bluetoothremotegattserver": "web-bluetooth",
    "BluetoothRemoteGATTServer.connect": "web-bluetooth",
    "bluetoothremotegattserver.connect": "web-bluetooth",
    "connect": "web-bluetooth",
    "new connect": "web-bluetooth",
    "BluetoothRemoteGATTServer.connected": "web-bluetooth",
    "bluetoothremotegattserver.connected": "web-bluetooth",
    "connected": "web-bluetooth",
    "new connected": "web-bluetooth",
    "BluetoothRemoteGATTServer.device": "web-bluetooth",
    "bluetoothremotegattserver.device": "web-bluetooth",
    "device": "web-bluetooth",
    "new device": "web-bluetooth",
    "BluetoothRemoteGATTServer.disconnect": "web-bluetooth",
    "bluetoothremotegattserver.disconnect": "web-bluetooth",
    "BluetoothRemoteGATTServer.getPrimaryService": "web-bluetooth",
    "bluetoothremotegattserver.getprimaryservice": "web-bluetooth",
    "getPrimaryService": "web-bluetooth",
    "new getPrimaryService": "web-bluetooth",
    "BluetoothRemoteGATTServer.getPrimaryServices": "web-bluetooth",
    "bluetoothremotegattserver.getprimaryservices": "web-bluetooth",
    "getPrimaryServices": "web-bluetooth",
    "new getPrimaryServices": "web-bluetooth",
    "BluetoothRemoteGATTService": "web-bluetooth",
    "bluetoothremotegattservice": "web-bluetooth",
    "BluetoothRemoteGATTService.device": "web-bluetooth",
    "bluetoothremotegattservice.device": "web-bluetooth",
    "BluetoothRemoteGATTService.getCharacteristic": "web-bluetooth",
    "bluetoothremotegattservice.getcharacteristic": "web-bluetooth",
    "getCharacteristic": "web-bluetooth",
    "new getCharacteristic": "web-bluetooth",
    "BluetoothRemoteGATTService.getCharacteristics": "web-bluetooth",
    "bluetoothremotegattservice.getcharacteristics": "web-bluetooth",
    "getCharacteristics": "web-bluetooth",
    "new getCharacteristics": "web-bluetooth",
    "BluetoothRemoteGATTService.isPrimary": "web-bluetooth",
    "bluetoothremotegattservice.isprimary": "web-bluetooth",
    "isPrimary": "web-bluetooth",
    "new isPrimary": "web-bluetooth",
    "BluetoothRemoteGATTService.uuid": "web-bluetooth",
    "bluetoothremotegattservice.uuid": "web-bluetooth",
    "BluetoothUUID": "web-bluetooth",
    "bluetoothuuid": "web-bluetooth",
    "BluetoothUUID.canonicalUUID_static": "web-bluetooth",
    "bluetoothuuid.canonicaluuid_static": "web-bluetooth",
    "canonicalUUID_static": "web-bluetooth",
    "new canonicalUUID_static": "web-bluetooth",
    "BluetoothUUID.getCharacteristic_static": "web-bluetooth",
    "bluetoothuuid.getcharacteristic_static": "web-bluetooth",
    "getCharacteristic_static": "web-bluetooth",
    "new getCharacteristic_static": "web-bluetooth",
    "BluetoothUUID.getDescriptor_static": "web-bluetooth",
    "bluetoothuuid.getdescriptor_static": "web-bluetooth",
    "getDescriptor_static": "web-bluetooth",
    "new getDescriptor_static": "web-bluetooth",
    "BluetoothUUID.getService_static": "web-bluetooth",
    "bluetoothuuid.getservice_static": "web-bluetooth",
    "getService_static": "web-bluetooth",
    "new getService_static": "web-bluetooth",
    "Navigator.bluetooth": "web-bluetooth",
    "navigator.bluetooth": "web-bluetooth",
    "new bluetooth": "web-bluetooth",
    "Lock": "web-locks",
    "Lock.mode": "web-locks",
    "lock.mode": "web-locks",
    "Lock.name": "web-locks",
    "lock.name": "web-locks",
    "LockManager": "web-locks",
    "lockmanager": "web-locks",
    "LockManager.query": "web-locks",
    "lockmanager.query": "web-locks",
    "LockManager.request": "web-locks",
    "lockmanager.request": "web-locks",
    "Navigator.locks": "web-locks",
    "navigator.locks": "web-locks",
    "locks": "web-locks",
    "new locks": "web-locks",
    "WorkerNavigator.locks": "web-locks",
    "workernavigator.locks": "web-locks",
    "MIDIAccess": "web-midi",
    "midiaccess": "web-midi",
    "MIDIAccess.inputs": "web-midi",
    "midiaccess.inputs": "web-midi",
    "inputs": "web-midi",
    "new inputs": "web-midi",
    "MIDIAccess.outputs": "web-midi",
    "midiaccess.outputs": "web-midi",
    "outputs": "web-midi",
    "new outputs": "web-midi",
    "MIDIAccess.statechange_event": "web-midi",
    "midiaccess.statechange_event": "web-midi",
    "statechange_event": "web-midi",
    "new statechange_event": "web-midi",
    "MIDIAccess.sysexEnabled": "web-midi",
    "midiaccess.sysexenabled": "web-midi",
    "sysexEnabled": "web-midi",
    "new sysexEnabled": "web-midi",
    "MIDIConnectionEvent": "web-midi",
    "midiconnectionevent": "web-midi",
    "MIDIConnectionEvent.MIDIConnectionEvent": "web-midi",
    "midiconnectionevent.midiconnectionevent": "web-midi",
    "new MIDIConnectionEvent": "web-midi",
    "MIDIConnectionEvent.port": "web-midi",
    "midiconnectionevent.port": "web-midi",
    "port": "web-midi",
    "new port": "web-midi",
    "MIDIInput": "web-midi",
    "midiinput": "web-midi",
    "MIDIInput.midimessage_event": "web-midi",
    "midiinput.midimessage_event": "web-midi",
    "midimessage_event": "web-midi",
    "new midimessage_event": "web-midi",
    "MIDIInputMap": "web-midi",
    "midiinputmap": "web-midi",
    "MIDIInputMap.entries": "web-midi",
    "midiinputmap.entries": "web-midi",
    "MIDIInputMap.forEach": "web-midi",
    "midiinputmap.foreach": "web-midi",
    "MIDIInputMap.get": "web-midi",
    "midiinputmap.get": "web-midi",
    "MIDIInputMap.has": "web-midi",
    "midiinputmap.has": "web-midi",
    "MIDIInputMap.keys": "web-midi",
    "midiinputmap.keys": "web-midi",
    "MIDIInputMap.size": "web-midi",
    "midiinputmap.size": "web-midi",
    "MIDIInputMap.values": "web-midi",
    "midiinputmap.values": "web-midi",
    "MIDIInputMap.@@iterator": "web-midi",
    "midiinputmap.@@iterator": "web-midi",
    "MIDIMessageEvent": "web-midi",
    "midimessageevent": "web-midi",
    "MIDIMessageEvent.MIDIMessageEvent": "web-midi",
    "midimessageevent.midimessageevent": "web-midi",
    "new MIDIMessageEvent": "web-midi",
    "MIDIMessageEvent.data": "web-midi",
    "midimessageevent.data": "web-midi",
    "MIDIOutput": "web-midi",
    "midioutput": "web-midi",
    "MIDIOutput.send": "web-midi",
    "midioutput.send": "web-midi",
    "send": "web-midi",
    "new send": "web-midi",
    "MIDIOutputMap": "web-midi",
    "midioutputmap": "web-midi",
    "MIDIOutputMap.entries": "web-midi",
    "midioutputmap.entries": "web-midi",
    "MIDIOutputMap.forEach": "web-midi",
    "midioutputmap.foreach": "web-midi",
    "MIDIOutputMap.get": "web-midi",
    "midioutputmap.get": "web-midi",
    "MIDIOutputMap.has": "web-midi",
    "midioutputmap.has": "web-midi",
    "MIDIOutputMap.keys": "web-midi",
    "midioutputmap.keys": "web-midi",
    "MIDIOutputMap.size": "web-midi",
    "midioutputmap.size": "web-midi",
    "MIDIOutputMap.values": "web-midi",
    "midioutputmap.values": "web-midi",
    "MIDIOutputMap.@@iterator": "web-midi",
    "midioutputmap.@@iterator": "web-midi",
    "MIDIPort": "web-midi",
    "midiport": "web-midi",
    "MIDIPort.close": "web-midi",
    "midiport.close": "web-midi",
    "MIDIPort.connection": "web-midi",
    "midiport.connection": "web-midi",
    "connection": "web-midi",
    "new connection": "web-midi",
    "MIDIPort.id": "web-midi",
    "midiport.id": "web-midi",
    "MIDIPort.manufacturer": "web-midi",
    "midiport.manufacturer": "web-midi",
    "manufacturer": "web-midi",
    "new manufacturer": "web-midi",
    "MIDIPort.name": "web-midi",
    "midiport.name": "web-midi",
    "MIDIPort.open": "web-midi",
    "midiport.open": "web-midi",
    "MIDIPort.state": "web-midi",
    "midiport.state": "web-midi",
    "MIDIPort.statechange_event": "web-midi",
    "midiport.statechange_event": "web-midi",
    "MIDIPort.type": "web-midi",
    "midiport.type": "web-midi",
    "MIDIPort.version": "web-midi",
    "midiport.version": "web-midi",
    "version": "web-midi",
    "new version": "web-midi",
    "Navigator.requestMIDIAccess": "web-midi",
    "navigator.requestmidiaccess": "web-midi",
    "requestMIDIAccess": "web-midi",
    "new requestMIDIAccess": "web-midi",
    "NDEFMessage": "web-nfc",
    "ndefmessage": "web-nfc",
    "NDEFMessage.NDEFMessage": "web-nfc",
    "ndefmessage.ndefmessage": "web-nfc",
    "new NDEFMessage": "web-nfc",
    "NDEFMessage.secure_context_required": "web-nfc",
    "ndefmessage.secure_context_required": "web-nfc",
    "secure_context_required": "web-nfc",
    "new secure_context_required": "web-nfc",
    "NDEFMessage.records": "web-nfc",
    "ndefmessage.records": "web-nfc",
    "records": "web-nfc",
    "new records": "web-nfc",
    "NDEFReader": "web-nfc",
    "ndefreader": "web-nfc",
    "NDEFReader.NDEFReader": "web-nfc",
    "ndefreader.ndefreader": "web-nfc",
    "new NDEFReader": "web-nfc",
    "NDEFReader.secure_context_required": "web-nfc",
    "ndefreader.secure_context_required": "web-nfc",
    "NDEFReader.reading_event": "web-nfc",
    "ndefreader.reading_event": "web-nfc",
    "reading_event": "web-nfc",
    "new reading_event": "web-nfc",
    "NDEFReader.readingerror_event": "web-nfc",
    "ndefreader.readingerror_event": "web-nfc",
    "readingerror_event": "web-nfc",
    "new readingerror_event": "web-nfc",
    "NDEFReader.scan": "web-nfc",
    "ndefreader.scan": "web-nfc",
    "scan": "web-nfc",
    "new scan": "web-nfc",
    "NDEFReader.write": "web-nfc",
    "ndefreader.write": "web-nfc",
    "NDEFReadingEvent": "web-nfc",
    "ndefreadingevent": "web-nfc",
    "NDEFReadingEvent.NDEFReadingEvent": "web-nfc",
    "ndefreadingevent.ndefreadingevent": "web-nfc",
    "new NDEFReadingEvent": "web-nfc",
    "NDEFReadingEvent.secure_context_required": "web-nfc",
    "ndefreadingevent.secure_context_required": "web-nfc",
    "NDEFReadingEvent.message": "web-nfc",
    "ndefreadingevent.message": "web-nfc",
    "message": "web-nfc",
    "new message": "web-nfc",
    "NDEFReadingEvent.serialNumber": "web-nfc",
    "ndefreadingevent.serialnumber": "web-nfc",
    "serialNumber": "web-nfc",
    "new serialNumber": "web-nfc",
    "NDEFRecord": "web-nfc",
    "ndefrecord": "web-nfc",
    "NDEFRecord.NDEFRecord": "web-nfc",
    "ndefrecord.ndefrecord": "web-nfc",
    "new NDEFRecord": "web-nfc",
    "NDEFRecord.secure_context_required": "web-nfc",
    "ndefrecord.secure_context_required": "web-nfc",
    "NDEFRecord.data": "web-nfc",
    "ndefrecord.data": "web-nfc",
    "NDEFRecord.encoding": "web-nfc",
    "ndefrecord.encoding": "web-nfc",
    "encoding": "web-nfc",
    "new encoding": "web-nfc",
    "NDEFRecord.id": "web-nfc",
    "ndefrecord.id": "web-nfc",
    "NDEFRecord.lang": "web-nfc",
    "ndefrecord.lang": "web-nfc",
    "NDEFRecord.mediaType": "web-nfc",
    "ndefrecord.mediatype": "web-nfc",
    "mediaType": "web-nfc",
    "new mediaType": "web-nfc",
    "NDEFRecord.recordType": "web-nfc",
    "ndefrecord.recordtype": "web-nfc",
    "recordType": "web-nfc",
    "new recordType": "web-nfc",
    "NDEFRecord.toRecords": "web-nfc",
    "ndefrecord.torecords": "web-nfc",
    "toRecords": "web-nfc",
    "new toRecords": "web-nfc",
    "AuthenticatorAttestationResponse.getAuthenticatorData": "webauthn-public-key-easy",
    "authenticatorattestationresponse.getauthenticatordata": "webauthn-public-key-easy",
    "AuthenticatorAttestationResponse": "webauthn-public-key-easy",
    "getAuthenticatorData": "webauthn-public-key-easy",
    "new getAuthenticatorData": "webauthn-public-key-easy",
    "AuthenticatorAttestationResponse.getPublicKey": "webauthn-public-key-easy",
    "authenticatorattestationresponse.getpublickey": "webauthn-public-key-easy",
    "getPublicKey": "webauthn-public-key-easy",
    "new getPublicKey": "webauthn-public-key-easy",
    "AuthenticatorAttestationResponse.getPublicKeyAlgorithm": "webauthn-public-key-easy",
    "authenticatorattestationresponse.getpublickeyalgorithm": "webauthn-public-key-easy",
    "getPublicKeyAlgorithm": "webauthn-public-key-easy",
    "new getPublicKeyAlgorithm": "webauthn-public-key-easy",
    "AudioData": "webcodecs",
    "audiodata": "webcodecs",
    "AudioData.AudioData": "webcodecs",
    "audiodata.audiodata": "webcodecs",
    "new AudioData": "webcodecs",
    "AudioData.allocationSize": "webcodecs",
    "audiodata.allocationsize": "webcodecs",
    "allocationSize": "webcodecs",
    "new allocationSize": "webcodecs",
    "AudioData.clone": "webcodecs",
    "audiodata.clone": "webcodecs",
    "AudioData.close": "webcodecs",
    "audiodata.close": "webcodecs",
    "AudioData.copyTo": "webcodecs",
    "audiodata.copyto": "webcodecs",
    "copyTo": "webcodecs",
    "new copyTo": "webcodecs",
    "AudioData.duration": "webcodecs",
    "audiodata.duration": "webcodecs",
    "AudioData.format": "webcodecs",
    "audiodata.format": "webcodecs",
    "format": "webcodecs",
    "new format": "webcodecs",
    "AudioData.numberOfChannels": "webcodecs",
    "audiodata.numberofchannels": "webcodecs",
    "numberOfChannels": "webcodecs",
    "new numberOfChannels": "webcodecs",
    "AudioData.numberOfFrames": "webcodecs",
    "audiodata.numberofframes": "webcodecs",
    "numberOfFrames": "webcodecs",
    "new numberOfFrames": "webcodecs",
    "AudioData.sampleRate": "webcodecs",
    "audiodata.samplerate": "webcodecs",
    "sampleRate": "webcodecs",
    "new sampleRate": "webcodecs",
    "AudioData.timestamp": "webcodecs",
    "audiodata.timestamp": "webcodecs",
    "timestamp": "webcodecs",
    "new timestamp": "webcodecs",
    "AudioDecoder": "webcodecs",
    "audiodecoder": "webcodecs",
    "AudioDecoder.AudioDecoder": "webcodecs",
    "audiodecoder.audiodecoder": "webcodecs",
    "new AudioDecoder": "webcodecs",
    "AudioDecoder.close": "webcodecs",
    "audiodecoder.close": "webcodecs",
    "AudioDecoder.configure": "webcodecs",
    "audiodecoder.configure": "webcodecs",
    "configure": "webcodecs",
    "new configure": "webcodecs",
    "AudioDecoder.decode": "webcodecs",
    "audiodecoder.decode": "webcodecs",
    "decode": "webcodecs",
    "new decode": "webcodecs",
    "AudioDecoder.decodeQueueSize": "webcodecs",
    "audiodecoder.decodequeuesize": "webcodecs",
    "decodeQueueSize": "webcodecs",
    "new decodeQueueSize": "webcodecs",
    "AudioDecoder.dequeue_event": "webcodecs",
    "audiodecoder.dequeue_event": "webcodecs",
    "dequeue_event": "webcodecs",
    "new dequeue_event": "webcodecs",
    "AudioDecoder.flush": "webcodecs",
    "audiodecoder.flush": "webcodecs",
    "AudioDecoder.isConfigSupported_static": "webcodecs",
    "audiodecoder.isconfigsupported_static": "webcodecs",
    "isConfigSupported_static": "webcodecs",
    "new isConfigSupported_static": "webcodecs",
    "AudioDecoder.reset": "webcodecs",
    "audiodecoder.reset": "webcodecs",
    "AudioDecoder.state": "webcodecs",
    "audiodecoder.state": "webcodecs",
    "AudioEncoder": "webcodecs",
    "audioencoder": "webcodecs",
    "AudioEncoder.AudioEncoder": "webcodecs",
    "audioencoder.audioencoder": "webcodecs",
    "new AudioEncoder": "webcodecs",
    "AudioEncoder.close": "webcodecs",
    "audioencoder.close": "webcodecs",
    "AudioEncoder.configure": "webcodecs",
    "audioencoder.configure": "webcodecs",
    "AudioEncoder.dequeue_event": "webcodecs",
    "audioencoder.dequeue_event": "webcodecs",
    "AudioEncoder.encode": "webcodecs",
    "audioencoder.encode": "webcodecs",
    "encode": "webcodecs",
    "new encode": "webcodecs",
    "AudioEncoder.encodeQueueSize": "webcodecs",
    "audioencoder.encodequeuesize": "webcodecs",
    "encodeQueueSize": "webcodecs",
    "new encodeQueueSize": "webcodecs",
    "AudioEncoder.flush": "webcodecs",
    "audioencoder.flush": "webcodecs",
    "AudioEncoder.isConfigSupported_static": "webcodecs",
    "audioencoder.isconfigsupported_static": "webcodecs",
    "AudioEncoder.reset": "webcodecs",
    "audioencoder.reset": "webcodecs",
    "AudioEncoder.state": "webcodecs",
    "audioencoder.state": "webcodecs",
    "EncodedAudioChunk": "webcodecs",
    "encodedaudiochunk": "webcodecs",
    "EncodedAudioChunk.EncodedAudioChunk": "webcodecs",
    "encodedaudiochunk.encodedaudiochunk": "webcodecs",
    "new EncodedAudioChunk": "webcodecs",
    "EncodedAudioChunk.byteLength": "webcodecs",
    "encodedaudiochunk.bytelength": "webcodecs",
    "new byteLength": "webcodecs",
    "EncodedAudioChunk.copyTo": "webcodecs",
    "encodedaudiochunk.copyto": "webcodecs",
    "EncodedAudioChunk.duration": "webcodecs",
    "encodedaudiochunk.duration": "webcodecs",
    "EncodedAudioChunk.timestamp": "webcodecs",
    "encodedaudiochunk.timestamp": "webcodecs",
    "EncodedAudioChunk.type": "webcodecs",
    "encodedaudiochunk.type": "webcodecs",
    "EncodedVideoChunk": "webcodecs",
    "encodedvideochunk": "webcodecs",
    "EncodedVideoChunk.EncodedVideoChunk": "webcodecs",
    "encodedvideochunk.encodedvideochunk": "webcodecs",
    "new EncodedVideoChunk": "webcodecs",
    "EncodedVideoChunk.byteLength": "webcodecs",
    "encodedvideochunk.bytelength": "webcodecs",
    "EncodedVideoChunk.copyTo": "webcodecs",
    "encodedvideochunk.copyto": "webcodecs",
    "EncodedVideoChunk.duration": "webcodecs",
    "encodedvideochunk.duration": "webcodecs",
    "EncodedVideoChunk.timestamp": "webcodecs",
    "encodedvideochunk.timestamp": "webcodecs",
    "EncodedVideoChunk.type": "webcodecs",
    "encodedvideochunk.type": "webcodecs",
    "ImageDecoder": "webcodecs",
    "imagedecoder": "webcodecs",
    "ImageDecoder.ImageDecoder": "webcodecs",
    "imagedecoder.imagedecoder": "webcodecs",
    "new ImageDecoder": "webcodecs",
    "ImageDecoder.close": "webcodecs",
    "imagedecoder.close": "webcodecs",
    "ImageDecoder.complete": "webcodecs",
    "imagedecoder.complete": "webcodecs",
    "complete": "webcodecs",
    "new complete": "webcodecs",
    "ImageDecoder.completed": "webcodecs",
    "imagedecoder.completed": "webcodecs",
    "completed": "webcodecs",
    "new completed": "webcodecs",
    "ImageDecoder.decode": "webcodecs",
    "imagedecoder.decode": "webcodecs",
    "ImageDecoder.isTypeSupported_static": "webcodecs",
    "imagedecoder.istypesupported_static": "webcodecs",
    "isTypeSupported_static": "webcodecs",
    "new isTypeSupported_static": "webcodecs",
    "ImageDecoder.reset": "webcodecs",
    "imagedecoder.reset": "webcodecs",
    "ImageDecoder.tracks": "webcodecs",
    "imagedecoder.tracks": "webcodecs",
    "tracks": "webcodecs",
    "new tracks": "webcodecs",
    "ImageDecoder.type": "webcodecs",
    "imagedecoder.type": "webcodecs",
    "ImageTrack": "webcodecs",
    "imagetrack": "webcodecs",
    "ImageTrack.animated": "webcodecs",
    "imagetrack.animated": "webcodecs",
    "animated": "webcodecs",
    "new animated": "webcodecs",
    "ImageTrack.frameCount": "webcodecs",
    "imagetrack.framecount": "webcodecs",
    "frameCount": "webcodecs",
    "new frameCount": "webcodecs",
    "ImageTrack.repetitionCount": "webcodecs",
    "imagetrack.repetitioncount": "webcodecs",
    "repetitionCount": "webcodecs",
    "new repetitionCount": "webcodecs",
    "ImageTrack.selected": "webcodecs",
    "imagetrack.selected": "webcodecs",
    "ImageTrackList": "webcodecs",
    "imagetracklist": "webcodecs",
    "ImageTrackList.length": "webcodecs",
    "imagetracklist.length": "webcodecs",
    "ImageTrackList.ready": "webcodecs",
    "imagetracklist.ready": "webcodecs",
    "ImageTrackList.selectedIndex": "webcodecs",
    "imagetracklist.selectedindex": "webcodecs",
    "ImageTrackList.selectedTrack": "webcodecs",
    "imagetracklist.selectedtrack": "webcodecs",
    "selectedTrack": "webcodecs",
    "new selectedTrack": "webcodecs",
    "VideoColorSpace": "webcodecs",
    "videocolorspace": "webcodecs",
    "VideoColorSpace.VideoColorSpace": "webcodecs",
    "videocolorspace.videocolorspace": "webcodecs",
    "new VideoColorSpace": "webcodecs",
    "VideoColorSpace.fullRange": "webcodecs",
    "videocolorspace.fullrange": "webcodecs",
    "fullRange": "webcodecs",
    "new fullRange": "webcodecs",
    "VideoColorSpace.matrix": "webcodecs",
    "videocolorspace.matrix": "webcodecs",
    "new matrix": "webcodecs",
    "VideoColorSpace.primaries": "webcodecs",
    "videocolorspace.primaries": "webcodecs",
    "primaries": "webcodecs",
    "new primaries": "webcodecs",
    "VideoColorSpace.toJSON": "webcodecs",
    "videocolorspace.tojson": "webcodecs",
    "VideoColorSpace.transfer": "webcodecs",
    "videocolorspace.transfer": "webcodecs",
    "new transfer": "webcodecs",
    "VideoDecoder": "webcodecs",
    "videodecoder": "webcodecs",
    "VideoDecoder.VideoDecoder": "webcodecs",
    "videodecoder.videodecoder": "webcodecs",
    "new VideoDecoder": "webcodecs",
    "VideoDecoder.close": "webcodecs",
    "videodecoder.close": "webcodecs",
    "VideoDecoder.configure": "webcodecs",
    "videodecoder.configure": "webcodecs",
    "VideoDecoder.decode": "webcodecs",
    "videodecoder.decode": "webcodecs",
    "VideoDecoder.decodeQueueSize": "webcodecs",
    "videodecoder.decodequeuesize": "webcodecs",
    "VideoDecoder.dequeue_event": "webcodecs",
    "videodecoder.dequeue_event": "webcodecs",
    "VideoDecoder.flush": "webcodecs",
    "videodecoder.flush": "webcodecs",
    "VideoDecoder.isConfigSupported_static": "webcodecs",
    "videodecoder.isconfigsupported_static": "webcodecs",
    "VideoDecoder.reset": "webcodecs",
    "videodecoder.reset": "webcodecs",
    "VideoDecoder.state": "webcodecs",
    "videodecoder.state": "webcodecs",
    "VideoEncoder": "webcodecs",
    "videoencoder": "webcodecs",
    "VideoEncoder.VideoEncoder": "webcodecs",
    "videoencoder.videoencoder": "webcodecs",
    "new VideoEncoder": "webcodecs",
    "VideoEncoder.close": "webcodecs",
    "videoencoder.close": "webcodecs",
    "VideoEncoder.configure": "webcodecs",
    "videoencoder.configure": "webcodecs",
    "VideoEncoder.dequeue_event": "webcodecs",
    "videoencoder.dequeue_event": "webcodecs",
    "VideoEncoder.encode": "webcodecs",
    "videoencoder.encode": "webcodecs",
    "VideoEncoder.encodeQueueSize": "webcodecs",
    "videoencoder.encodequeuesize": "webcodecs",
    "VideoEncoder.flush": "webcodecs",
    "videoencoder.flush": "webcodecs",
    "VideoEncoder.isConfigSupported_static": "webcodecs",
    "videoencoder.isconfigsupported_static": "webcodecs",
    "VideoEncoder.reset": "webcodecs",
    "videoencoder.reset": "webcodecs",
    "VideoEncoder.state": "webcodecs",
    "videoencoder.state": "webcodecs",
    "VideoFrame": "webcodecs",
    "videoframe": "webcodecs",
    "VideoFrame.VideoFrame": "webcodecs",
    "videoframe.videoframe": "webcodecs",
    "new VideoFrame": "webcodecs",
    "VideoFrame.allocationSize": "webcodecs",
    "videoframe.allocationsize": "webcodecs",
    "VideoFrame.clone": "webcodecs",
    "videoframe.clone": "webcodecs",
    "VideoFrame.close": "webcodecs",
    "videoframe.close": "webcodecs",
    "VideoFrame.codedHeight": "webcodecs",
    "videoframe.codedheight": "webcodecs",
    "codedHeight": "webcodecs",
    "new codedHeight": "webcodecs",
    "VideoFrame.codedRect": "webcodecs",
    "videoframe.codedrect": "webcodecs",
    "codedRect": "webcodecs",
    "new codedRect": "webcodecs",
    "VideoFrame.codedWidth": "webcodecs",
    "videoframe.codedwidth": "webcodecs",
    "codedWidth": "webcodecs",
    "new codedWidth": "webcodecs",
    "VideoFrame.colorSpace": "webcodecs",
    "videoframe.colorspace": "webcodecs",
    "colorSpace": "webcodecs",
    "new colorSpace": "webcodecs",
    "VideoFrame.copyTo": "webcodecs",
    "videoframe.copyto": "webcodecs",
    "VideoFrame.displayHeight": "webcodecs",
    "videoframe.displayheight": "webcodecs",
    "displayHeight": "webcodecs",
    "new displayHeight": "webcodecs",
    "VideoFrame.displayWidth": "webcodecs",
    "videoframe.displaywidth": "webcodecs",
    "displayWidth": "webcodecs",
    "new displayWidth": "webcodecs",
    "VideoFrame.duration": "webcodecs",
    "videoframe.duration": "webcodecs",
    "VideoFrame.format": "webcodecs",
    "videoframe.format": "webcodecs",
    "VideoFrame.timestamp": "webcodecs",
    "videoframe.timestamp": "webcodecs",
    "VideoFrame.visibleRect": "webcodecs",
    "videoframe.visiblerect": "webcodecs",
    "visibleRect": "webcodecs",
    "new visibleRect": "webcodecs",
    "OES_draw_buffers_indexed": "webgl-oes-draw-buffers-indexed",
    "oes_draw_buffers_indexed": "webgl-oes-draw-buffers-indexed",
    "OES_draw_buffers_indexed.blendEquationiOES": "webgl-oes-draw-buffers-indexed",
    "oes_draw_buffers_indexed.blendequationioes": "webgl-oes-draw-buffers-indexed",
    "blendEquationiOES": "webgl-oes-draw-buffers-indexed",
    "new blendEquationiOES": "webgl-oes-draw-buffers-indexed",
    "OES_draw_buffers_indexed.blendEquationSeparateiOES": "webgl-oes-draw-buffers-indexed",
    "oes_draw_buffers_indexed.blendequationseparateioes": "webgl-oes-draw-buffers-indexed",
    "blendEquationSeparateiOES": "webgl-oes-draw-buffers-indexed",
    "new blendEquationSeparateiOES": "webgl-oes-draw-buffers-indexed",
    "OES_draw_buffers_indexed.blendFunciOES": "webgl-oes-draw-buffers-indexed",
    "oes_draw_buffers_indexed.blendfuncioes": "webgl-oes-draw-buffers-indexed",
    "blendFunciOES": "webgl-oes-draw-buffers-indexed",
    "new blendFunciOES": "webgl-oes-draw-buffers-indexed",
    "OES_draw_buffers_indexed.blendFuncSeparateiOES": "webgl-oes-draw-buffers-indexed",
    "oes_draw_buffers_indexed.blendfuncseparateioes": "webgl-oes-draw-buffers-indexed",
    "blendFuncSeparateiOES": "webgl-oes-draw-buffers-indexed",
    "new blendFuncSeparateiOES": "webgl-oes-draw-buffers-indexed",
    "OES_draw_buffers_indexed.colorMaskiOES": "webgl-oes-draw-buffers-indexed",
    "oes_draw_buffers_indexed.colormaskioes": "webgl-oes-draw-buffers-indexed",
    "colorMaskiOES": "webgl-oes-draw-buffers-indexed",
    "new colorMaskiOES": "webgl-oes-draw-buffers-indexed",
    "OES_draw_buffers_indexed.disableiOES": "webgl-oes-draw-buffers-indexed",
    "oes_draw_buffers_indexed.disableioes": "webgl-oes-draw-buffers-indexed",
    "disableiOES": "webgl-oes-draw-buffers-indexed",
    "new disableiOES": "webgl-oes-draw-buffers-indexed",
    "OES_draw_buffers_indexed.enableiOES": "webgl-oes-draw-buffers-indexed",
    "oes_draw_buffers_indexed.enableioes": "webgl-oes-draw-buffers-indexed",
    "enableiOES": "webgl-oes-draw-buffers-indexed",
    "new enableiOES": "webgl-oes-draw-buffers-indexed",
    "HID": "webhid",
    "hid": "webhid",
    "HID.connect_event": "webhid",
    "hid.connect_event": "webhid",
    "connect_event": "webhid",
    "new connect_event": "webhid",
    "HID.disconnect_event": "webhid",
    "hid.disconnect_event": "webhid",
    "disconnect_event": "webhid",
    "new disconnect_event": "webhid",
    "HID.getDevices": "webhid",
    "hid.getdevices": "webhid",
    "HID.requestDevice": "webhid",
    "hid.requestdevice": "webhid",
    "HIDConnectionEvent": "webhid",
    "hidconnectionevent": "webhid",
    "HIDConnectionEvent.HIDConnectionEvent": "webhid",
    "hidconnectionevent.hidconnectionevent": "webhid",
    "new HIDConnectionEvent": "webhid",
    "HIDConnectionEvent.device": "webhid",
    "hidconnectionevent.device": "webhid",
    "HIDDevice": "webhid",
    "hiddevice": "webhid",
    "HIDDevice.close": "webhid",
    "hiddevice.close": "webhid",
    "HIDDevice.collections": "webhid",
    "hiddevice.collections": "webhid",
    "collections": "webhid",
    "new collections": "webhid",
    "HIDDevice.inputreport_event": "webhid",
    "hiddevice.inputreport_event": "webhid",
    "inputreport_event": "webhid",
    "new inputreport_event": "webhid",
    "HIDDevice.open": "webhid",
    "hiddevice.open": "webhid",
    "HIDDevice.opened": "webhid",
    "hiddevice.opened": "webhid",
    "opened": "webhid",
    "new opened": "webhid",
    "HIDDevice.productId": "webhid",
    "hiddevice.productid": "webhid",
    "productId": "webhid",
    "new productId": "webhid",
    "HIDDevice.productName": "webhid",
    "hiddevice.productname": "webhid",
    "productName": "webhid",
    "new productName": "webhid",
    "HIDDevice.receiveFeatureReport": "webhid",
    "hiddevice.receivefeaturereport": "webhid",
    "receiveFeatureReport": "webhid",
    "new receiveFeatureReport": "webhid",
    "HIDDevice.sendFeatureReport": "webhid",
    "hiddevice.sendfeaturereport": "webhid",
    "sendFeatureReport": "webhid",
    "new sendFeatureReport": "webhid",
    "HIDDevice.sendReport": "webhid",
    "hiddevice.sendreport": "webhid",
    "sendReport": "webhid",
    "new sendReport": "webhid",
    "HIDDevice.vendorId": "webhid",
    "hiddevice.vendorid": "webhid",
    "vendorId": "webhid",
    "new vendorId": "webhid",
    "HIDInputReportEvent": "webhid",
    "hidinputreportevent": "webhid",
    "HIDInputReportEvent.data": "webhid",
    "hidinputreportevent.data": "webhid",
    "HIDInputReportEvent.device": "webhid",
    "hidinputreportevent.device": "webhid",
    "HIDInputReportEvent.reportId": "webhid",
    "hidinputreportevent.reportid": "webhid",
    "reportId": "webhid",
    "new reportId": "webhid",
    "Navigator.hid": "webhid",
    "navigator.hid": "webhid",
    "new hid": "webhid",
    "permissions-policy.hid": "webhid",
    "Permissions_Policy.hid": "webhid",
    "ML": "webnn",
    "ml": "webnn",
    "ML.createContext": "webnn",
    "ml.createcontext": "webnn",
    "createContext": "webnn",
    "new createContext": "webnn",
    "MLActivation": "webnn",
    "mlactivation": "webnn",
    "MLContext": "webnn",
    "mlcontext": "webnn",
    "MLContext.compute": "webnn",
    "mlcontext.compute": "webnn",
    "compute": "webnn",
    "new compute": "webnn",
    "MLGraph": "webnn",
    "mlgraph": "webnn",
    "MLGraphBuilder": "webnn",
    "mlgraphbuilder": "webnn",
    "MLGraphBuilder.MLGraphBuilder": "webnn",
    "mlgraphbuilder.mlgraphbuilder": "webnn",
    "new MLGraphBuilder": "webnn",
    "MLGraphBuilder.abs": "webnn",
    "mlgraphbuilder.abs": "webnn",
    "new abs": "webnn",
    "MLGraphBuilder.add": "webnn",
    "mlgraphbuilder.add": "webnn",
    "MLGraphBuilder.argMax": "webnn",
    "mlgraphbuilder.argmax": "webnn",
    "argMax": "webnn",
    "new argMax": "webnn",
    "MLGraphBuilder.argMin": "webnn",
    "mlgraphbuilder.argmin": "webnn",
    "argMin": "webnn",
    "new argMin": "webnn",
    "MLGraphBuilder.averagePool2d": "webnn",
    "mlgraphbuilder.averagepool2d": "webnn",
    "averagePool2d": "webnn",
    "new averagePool2d": "webnn",
    "MLGraphBuilder.batchNormalization": "webnn",
    "mlgraphbuilder.batchnormalization": "webnn",
    "batchNormalization": "webnn",
    "new batchNormalization": "webnn",
    "MLGraphBuilder.build": "webnn",
    "mlgraphbuilder.build": "webnn",
    "build": "webnn",
    "new build": "webnn",
    "MLGraphBuilder.cast": "webnn",
    "mlgraphbuilder.cast": "webnn",
    "cast": "webnn",
    "new cast": "webnn",
    "MLGraphBuilder.ceil": "webnn",
    "mlgraphbuilder.ceil": "webnn",
    "ceil": "webnn",
    "new ceil": "webnn",
    "MLGraphBuilder.clamp": "webnn",
    "mlgraphbuilder.clamp": "webnn",
    "new clamp": "webnn",
    "MLGraphBuilder.concat": "webnn",
    "mlgraphbuilder.concat": "webnn",
    "new concat": "webnn",
    "MLGraphBuilder.constant": "webnn",
    "mlgraphbuilder.constant": "webnn",
    "constant": "webnn",
    "new constant": "webnn",
    "MLGraphBuilder.conv2d": "webnn",
    "mlgraphbuilder.conv2d": "webnn",
    "conv2d": "webnn",
    "new conv2d": "webnn",
    "MLGraphBuilder.convTranspose2d": "webnn",
    "mlgraphbuilder.convtranspose2d": "webnn",
    "convTranspose2d": "webnn",
    "new convTranspose2d": "webnn",
    "MLGraphBuilder.cos": "webnn",
    "mlgraphbuilder.cos": "webnn",
    "new cos": "webnn",
    "MLGraphBuilder.div": "webnn",
    "mlgraphbuilder.div": "webnn",
    "div": "webnn",
    "new div": "webnn",
    "MLGraphBuilder.elu": "webnn",
    "mlgraphbuilder.elu": "webnn",
    "elu": "webnn",
    "new elu": "webnn",
    "MLGraphBuilder.equal": "webnn",
    "mlgraphbuilder.equal": "webnn",
    "equal": "webnn",
    "new equal": "webnn",
    "MLGraphBuilder.erf": "webnn",
    "mlgraphbuilder.erf": "webnn",
    "erf": "webnn",
    "new erf": "webnn",
    "MLGraphBuilder.exp": "webnn",
    "mlgraphbuilder.exp": "webnn",
    "new exp": "webnn",
    "MLGraphBuilder.expand": "webnn",
    "mlgraphbuilder.expand": "webnn",
    "expand": "webnn",
    "new expand": "webnn",
    "MLGraphBuilder.floor": "webnn",
    "mlgraphbuilder.floor": "webnn",
    "floor": "webnn",
    "new floor": "webnn",
    "MLGraphBuilder.gather": "webnn",
    "mlgraphbuilder.gather": "webnn",
    "gather": "webnn",
    "new gather": "webnn",
    "MLGraphBuilder.gemm": "webnn",
    "mlgraphbuilder.gemm": "webnn",
    "gemm": "webnn",
    "new gemm": "webnn",
    "MLGraphBuilder.greater": "webnn",
    "mlgraphbuilder.greater": "webnn",
    "greater": "webnn",
    "new greater": "webnn",
    "MLGraphBuilder.greaterOrEqual": "webnn",
    "mlgraphbuilder.greaterorequal": "webnn",
    "greaterOrEqual": "webnn",
    "new greaterOrEqual": "webnn",
    "MLGraphBuilder.gru": "webnn",
    "mlgraphbuilder.gru": "webnn",
    "gru": "webnn",
    "new gru": "webnn",
    "MLGraphBuilder.gruCell": "webnn",
    "mlgraphbuilder.grucell": "webnn",
    "gruCell": "webnn",
    "new gruCell": "webnn",
    "MLGraphBuilder.hardSigmoid": "webnn",
    "mlgraphbuilder.hardsigmoid": "webnn",
    "hardSigmoid": "webnn",
    "new hardSigmoid": "webnn",
    "MLGraphBuilder.hardSwish": "webnn",
    "mlgraphbuilder.hardswish": "webnn",
    "hardSwish": "webnn",
    "new hardSwish": "webnn",
    "MLGraphBuilder.identity": "webnn",
    "mlgraphbuilder.identity": "webnn",
    "identity": "webnn",
    "new identity": "webnn",
    "MLGraphBuilder.input": "webnn",
    "mlgraphbuilder.input": "webnn",
    "input": "webnn",
    "new input": "webnn",
    "MLGraphBuilder.instanceNormalization": "webnn",
    "mlgraphbuilder.instancenormalization": "webnn",
    "instanceNormalization": "webnn",
    "new instanceNormalization": "webnn",
    "MLGraphBuilder.l2Pool2d": "webnn",
    "mlgraphbuilder.l2pool2d": "webnn",
    "l2Pool2d": "webnn",
    "new l2Pool2d": "webnn",
    "MLGraphBuilder.layerNormalization": "webnn",
    "mlgraphbuilder.layernormalization": "webnn",
    "layerNormalization": "webnn",
    "new layerNormalization": "webnn",
    "MLGraphBuilder.leakyRelu": "webnn",
    "mlgraphbuilder.leakyrelu": "webnn",
    "leakyRelu": "webnn",
    "new leakyRelu": "webnn",
    "MLGraphBuilder.lesser": "webnn",
    "mlgraphbuilder.lesser": "webnn",
    "lesser": "webnn",
    "new lesser": "webnn",
    "MLGraphBuilder.lesserOrEqual": "webnn",
    "mlgraphbuilder.lesserorequal": "webnn",
    "lesserOrEqual": "webnn",
    "new lesserOrEqual": "webnn",
    "MLGraphBuilder.linear": "webnn",
    "mlgraphbuilder.linear": "webnn",
    "linear": "webnn",
    "new linear": "webnn",
    "MLGraphBuilder.log": "webnn",
    "mlgraphbuilder.log": "webnn",
    "new log": "webnn",
    "MLGraphBuilder.lstm": "webnn",
    "mlgraphbuilder.lstm": "webnn",
    "lstm": "webnn",
    "new lstm": "webnn",
    "MLGraphBuilder.lstmCell": "webnn",
    "mlgraphbuilder.lstmcell": "webnn",
    "lstmCell": "webnn",
    "new lstmCell": "webnn",
    "MLGraphBuilder.matmul": "webnn",
    "mlgraphbuilder.matmul": "webnn",
    "matmul": "webnn",
    "new matmul": "webnn",
    "MLGraphBuilder.max": "webnn",
    "mlgraphbuilder.max": "webnn",
    "new max": "webnn",
    "MLGraphBuilder.maxPool2d": "webnn",
    "mlgraphbuilder.maxpool2d": "webnn",
    "maxPool2d": "webnn",
    "new maxPool2d": "webnn",
    "MLGraphBuilder.min": "webnn",
    "mlgraphbuilder.min": "webnn",
    "new min": "webnn",
    "MLGraphBuilder.mul": "webnn",
    "mlgraphbuilder.mul": "webnn",
    "mul": "webnn",
    "new mul": "webnn",
    "MLGraphBuilder.neg": "webnn",
    "mlgraphbuilder.neg": "webnn",
    "neg": "webnn",
    "new neg": "webnn",
    "MLGraphBuilder.not": "webnn",
    "mlgraphbuilder.not": "webnn",
    "not": "webnn",
    "new not": "webnn",
    "MLGraphBuilder.pad": "webnn",
    "mlgraphbuilder.pad": "webnn",
    "MLGraphBuilder.pow": "webnn",
    "mlgraphbuilder.pow": "webnn",
    "new pow": "webnn",
    "MLGraphBuilder.prelu": "webnn",
    "mlgraphbuilder.prelu": "webnn",
    "prelu": "webnn",
    "new prelu": "webnn",
    "MLGraphBuilder.reciprocal": "webnn",
    "mlgraphbuilder.reciprocal": "webnn",
    "reciprocal": "webnn",
    "new reciprocal": "webnn",
    "MLGraphBuilder.reduceL1": "webnn",
    "mlgraphbuilder.reducel1": "webnn",
    "reduceL1": "webnn",
    "new reduceL1": "webnn",
    "MLGraphBuilder.reduceL2": "webnn",
    "mlgraphbuilder.reducel2": "webnn",
    "reduceL2": "webnn",
    "new reduceL2": "webnn",
    "MLGraphBuilder.reduceLogSum": "webnn",
    "mlgraphbuilder.reducelogsum": "webnn",
    "reduceLogSum": "webnn",
    "new reduceLogSum": "webnn",
    "MLGraphBuilder.reduceLogSumExp": "webnn",
    "mlgraphbuilder.reducelogsumexp": "webnn",
    "reduceLogSumExp": "webnn",
    "new reduceLogSumExp": "webnn",
    "MLGraphBuilder.reduceMax": "webnn",
    "mlgraphbuilder.reducemax": "webnn",
    "reduceMax": "webnn",
    "new reduceMax": "webnn",
    "MLGraphBuilder.reduceMean": "webnn",
    "mlgraphbuilder.reducemean": "webnn",
    "reduceMean": "webnn",
    "new reduceMean": "webnn",
    "MLGraphBuilder.reduceMin": "webnn",
    "mlgraphbuilder.reducemin": "webnn",
    "reduceMin": "webnn",
    "new reduceMin": "webnn",
    "MLGraphBuilder.reduceProduct": "webnn",
    "mlgraphbuilder.reduceproduct": "webnn",
    "reduceProduct": "webnn",
    "new reduceProduct": "webnn",
    "MLGraphBuilder.reduceSum": "webnn",
    "mlgraphbuilder.reducesum": "webnn",
    "reduceSum": "webnn",
    "new reduceSum": "webnn",
    "MLGraphBuilder.reduceSumSquare": "webnn",
    "mlgraphbuilder.reducesumsquare": "webnn",
    "reduceSumSquare": "webnn",
    "new reduceSumSquare": "webnn",
    "MLGraphBuilder.relu": "webnn",
    "mlgraphbuilder.relu": "webnn",
    "relu": "webnn",
    "new relu": "webnn",
    "MLGraphBuilder.resample2d": "webnn",
    "mlgraphbuilder.resample2d": "webnn",
    "resample2d": "webnn",
    "new resample2d": "webnn",
    "MLGraphBuilder.reshape": "webnn",
    "mlgraphbuilder.reshape": "webnn",
    "reshape": "webnn",
    "new reshape": "webnn",
    "MLGraphBuilder.sigmoid": "webnn",
    "mlgraphbuilder.sigmoid": "webnn",
    "sigmoid": "webnn",
    "new sigmoid": "webnn",
    "MLGraphBuilder.sin": "webnn",
    "mlgraphbuilder.sin": "webnn",
    "new sin": "webnn",
    "MLGraphBuilder.slice": "webnn",
    "mlgraphbuilder.slice": "webnn",
    "new slice": "webnn",
    "MLGraphBuilder.softmax": "webnn",
    "mlgraphbuilder.softmax": "webnn",
    "softmax": "webnn",
    "new softmax": "webnn",
    "MLGraphBuilder.softplus": "webnn",
    "mlgraphbuilder.softplus": "webnn",
    "softplus": "webnn",
    "new softplus": "webnn",
    "MLGraphBuilder.softsign": "webnn",
    "mlgraphbuilder.softsign": "webnn",
    "softsign": "webnn",
    "new softsign": "webnn",
    "MLGraphBuilder.split": "webnn",
    "mlgraphbuilder.split": "webnn",
    "split": "webnn",
    "new split": "webnn",
    "MLGraphBuilder.sqrt": "webnn",
    "mlgraphbuilder.sqrt": "webnn",
    "new sqrt": "webnn",
    "MLGraphBuilder.sub": "webnn",
    "mlgraphbuilder.sub": "webnn",
    "sub": "webnn",
    "new sub": "webnn",
    "MLGraphBuilder.tan": "webnn",
    "mlgraphbuilder.tan": "webnn",
    "new tan": "webnn",
    "MLGraphBuilder.tanh": "webnn",
    "mlgraphbuilder.tanh": "webnn",
    "tanh": "webnn",
    "new tanh": "webnn",
    "MLGraphBuilder.transpose": "webnn",
    "mlgraphbuilder.transpose": "webnn",
    "transpose": "webnn",
    "new transpose": "webnn",
    "MLGraphBuilder.triangular": "webnn",
    "mlgraphbuilder.triangular": "webnn",
    "triangular": "webnn",
    "new triangular": "webnn",
    "MLGraphBuilder.where": "webnn",
    "mlgraphbuilder.where": "webnn",
    "where": "webnn",
    "new where": "webnn",
    "MLOperand": "webnn",
    "mloperand": "webnn",
    "MLOperand.dataType": "webnn",
    "mloperand.datatype": "webnn",
    "dataType": "webnn",
    "new dataType": "webnn",
    "MLOperand.shape": "webnn",
    "mloperand.shape": "webnn",
    "shape": "webnn",
    "new shape": "webnn",
    "Navigator.ml": "webnn",
    "navigator.ml": "webnn",
    "new ml": "webnn",
    "WorkerNavigator.ml": "webnn",
    "workernavigator.ml": "webnn",
    "RTCPeerConnection": "webrtc",
    "rtcpeerconnection": "webrtc",
    "RTCDataChannel": "webrtc",
    "rtcdatachannel": "webrtc",
    "DedicatedWorkerGlobalScope.rtctransform_event": "webrtc-encoded-transform",
    "dedicatedworkerglobalscope.rtctransform_event": "webrtc-encoded-transform",
    "rtctransform_event": "webrtc-encoded-transform",
    "new rtctransform_event": "webrtc-encoded-transform",
    "RTCEncodedAudioFrame": "webrtc-encoded-transform",
    "rtcencodedaudioframe": "webrtc-encoded-transform",
    "RTCEncodedAudioFrame.data": "webrtc-encoded-transform",
    "rtcencodedaudioframe.data": "webrtc-encoded-transform",
    "RTCEncodedAudioFrame.getMetadata": "webrtc-encoded-transform",
    "rtcencodedaudioframe.getmetadata": "webrtc-encoded-transform",
    "getMetadata": "webrtc-encoded-transform",
    "new getMetadata": "webrtc-encoded-transform",
    "RTCEncodedAudioFrame.timestamp": "webrtc-encoded-transform",
    "rtcencodedaudioframe.timestamp": "webrtc-encoded-transform",
    "RTCEncodedVideoFrame": "webrtc-encoded-transform",
    "rtcencodedvideoframe": "webrtc-encoded-transform",
    "RTCEncodedVideoFrame.data": "webrtc-encoded-transform",
    "rtcencodedvideoframe.data": "webrtc-encoded-transform",
    "RTCEncodedVideoFrame.getMetadata": "webrtc-encoded-transform",
    "rtcencodedvideoframe.getmetadata": "webrtc-encoded-transform",
    "RTCEncodedVideoFrame.timestamp": "webrtc-encoded-transform",
    "rtcencodedvideoframe.timestamp": "webrtc-encoded-transform",
    "RTCEncodedVideoFrame.type": "webrtc-encoded-transform",
    "rtcencodedvideoframe.type": "webrtc-encoded-transform",
    "RTCRtpReceiver.transform": "webrtc-encoded-transform",
    "rtcrtpreceiver.transform": "webrtc-encoded-transform",
    "RTCRtpReceiver": "webrtc-encoded-transform",
    "RTCRtpScriptTransform": "webrtc-encoded-transform",
    "rtcrtpscripttransform": "webrtc-encoded-transform",
    "RTCRtpScriptTransform.RTCRtpScriptTransform": "webrtc-encoded-transform",
    "rtcrtpscripttransform.rtcrtpscripttransform": "webrtc-encoded-transform",
    "new RTCRtpScriptTransform": "webrtc-encoded-transform",
    "RTCRtpScriptTransformer": "webrtc-encoded-transform",
    "rtcrtpscripttransformer": "webrtc-encoded-transform",
    "RTCRtpScriptTransformer.generateKeyFrame": "webrtc-encoded-transform",
    "rtcrtpscripttransformer.generatekeyframe": "webrtc-encoded-transform",
    "generateKeyFrame": "webrtc-encoded-transform",
    "new generateKeyFrame": "webrtc-encoded-transform",
    "RTCRtpScriptTransformer.options": "webrtc-encoded-transform",
    "rtcrtpscripttransformer.options": "webrtc-encoded-transform",
    "RTCRtpScriptTransformer.readable": "webrtc-encoded-transform",
    "rtcrtpscripttransformer.readable": "webrtc-encoded-transform",
    "RTCRtpScriptTransformer.sendKeyFrameRequest": "webrtc-encoded-transform",
    "rtcrtpscripttransformer.sendkeyframerequest": "webrtc-encoded-transform",
    "sendKeyFrameRequest": "webrtc-encoded-transform",
    "new sendKeyFrameRequest": "webrtc-encoded-transform",
    "RTCRtpScriptTransformer.writable": "webrtc-encoded-transform",
    "rtcrtpscripttransformer.writable": "webrtc-encoded-transform",
    "RTCRtpSender.transform": "webrtc-encoded-transform",
    "rtcrtpsender.transform": "webrtc-encoded-transform",
    "RTCRtpSender": "webrtc-encoded-transform",
    "RTCTransformEvent": "webrtc-encoded-transform",
    "rtctransformevent": "webrtc-encoded-transform",
    "RTCTransformEvent.transformer": "webrtc-encoded-transform",
    "rtctransformevent.transformer": "webrtc-encoded-transform",
    "transformer": "webrtc-encoded-transform",
    "new transformer": "webrtc-encoded-transform",
    "RTCPeerConnection.sctp": "webrtc-sctp",
    "rtcpeerconnection.sctp": "webrtc-sctp",
    "sctp": "webrtc-sctp",
    "new sctp": "webrtc-sctp",
    "RTCSctpTransport": "webrtc-sctp",
    "rtcsctptransport": "webrtc-sctp",
    "RTCSctpTransport.maxChannels": "webrtc-sctp",
    "rtcsctptransport.maxchannels": "webrtc-sctp",
    "maxChannels": "webrtc-sctp",
    "new maxChannels": "webrtc-sctp",
    "RTCSctpTransport.maxMessageSize": "webrtc-sctp",
    "rtcsctptransport.maxmessagesize": "webrtc-sctp",
    "maxMessageSize": "webrtc-sctp",
    "new maxMessageSize": "webrtc-sctp",
    "RTCSctpTransport.state": "webrtc-sctp",
    "rtcsctptransport.state": "webrtc-sctp",
    "RTCSctpTransport.statechange_event": "webrtc-sctp",
    "rtcsctptransport.statechange_event": "webrtc-sctp",
    "RTCSctpTransport.transport": "webrtc-sctp",
    "rtcsctptransport.transport": "webrtc-sctp",
    "transport": "webrtc-sctp",
    "new transport": "webrtc-sctp",
    "WebTransport": "webtransport",
    "webtransport": "webtransport",
    "WebTransport.WebTransport": "webtransport",
    "webtransport.webtransport": "webtransport",
    "new WebTransport": "webtransport",
    "WebTransport.close": "webtransport",
    "webtransport.close": "webtransport",
    "WebTransport.closed": "webtransport",
    "webtransport.closed": "webtransport",
    "WebTransport.createBidirectionalStream": "webtransport",
    "webtransport.createbidirectionalstream": "webtransport",
    "createBidirectionalStream": "webtransport",
    "new createBidirectionalStream": "webtransport",
    "WebTransport.createUnidirectionalStream": "webtransport",
    "webtransport.createunidirectionalstream": "webtransport",
    "createUnidirectionalStream": "webtransport",
    "new createUnidirectionalStream": "webtransport",
    "WebTransport.datagrams": "webtransport",
    "webtransport.datagrams": "webtransport",
    "datagrams": "webtransport",
    "new datagrams": "webtransport",
    "WebTransport.incomingBidirectionalStreams": "webtransport",
    "webtransport.incomingbidirectionalstreams": "webtransport",
    "incomingBidirectionalStreams": "webtransport",
    "new incomingBidirectionalStreams": "webtransport",
    "WebTransport.incomingUnidirectionalStreams": "webtransport",
    "webtransport.incomingunidirectionalstreams": "webtransport",
    "incomingUnidirectionalStreams": "webtransport",
    "new incomingUnidirectionalStreams": "webtransport",
    "WebTransport.ready": "webtransport",
    "webtransport.ready": "webtransport",
    "WebTransportBidirectionalStream": "webtransport",
    "webtransportbidirectionalstream": "webtransport",
    "WebTransportBidirectionalStream.readable": "webtransport",
    "webtransportbidirectionalstream.readable": "webtransport",
    "WebTransportBidirectionalStream.writable": "webtransport",
    "webtransportbidirectionalstream.writable": "webtransport",
    "WebTransportDatagramDuplexStream": "webtransport",
    "webtransportdatagramduplexstream": "webtransport",
    "WebTransportDatagramDuplexStream.incomingHighWaterMark": "webtransport",
    "webtransportdatagramduplexstream.incominghighwatermark": "webtransport",
    "incomingHighWaterMark": "webtransport",
    "new incomingHighWaterMark": "webtransport",
    "WebTransportDatagramDuplexStream.incomingMaxAge": "webtransport",
    "webtransportdatagramduplexstream.incomingmaxage": "webtransport",
    "incomingMaxAge": "webtransport",
    "new incomingMaxAge": "webtransport",
    "WebTransportDatagramDuplexStream.maxDatagramSize": "webtransport",
    "webtransportdatagramduplexstream.maxdatagramsize": "webtransport",
    "maxDatagramSize": "webtransport",
    "new maxDatagramSize": "webtransport",
    "WebTransportDatagramDuplexStream.outgoingHighWaterMark": "webtransport",
    "webtransportdatagramduplexstream.outgoinghighwatermark": "webtransport",
    "outgoingHighWaterMark": "webtransport",
    "new outgoingHighWaterMark": "webtransport",
    "WebTransportDatagramDuplexStream.outgoingMaxAge": "webtransport",
    "webtransportdatagramduplexstream.outgoingmaxage": "webtransport",
    "outgoingMaxAge": "webtransport",
    "new outgoingMaxAge": "webtransport",
    "WebTransportDatagramDuplexStream.readable": "webtransport",
    "webtransportdatagramduplexstream.readable": "webtransport",
    "WebTransportDatagramDuplexStream.writable": "webtransport",
    "webtransportdatagramduplexstream.writable": "webtransport",
    "WebTransportError": "webtransport",
    "webtransporterror": "webtransport",
    "WebTransportError.WebTransportError": "webtransport",
    "webtransporterror.webtransporterror": "webtransport",
    "new WebTransportError": "webtransport",
    "WebTransportError.source": "webtransport",
    "webtransporterror.source": "webtransport",
    "WebTransportError.streamErrorCode": "webtransport",
    "webtransporterror.streamerrorcode": "webtransport",
    "streamErrorCode": "webtransport",
    "new streamErrorCode": "webtransport",
    "Navigator.usb": "webusb",
    "navigator.usb": "webusb",
    "usb": "webusb",
    "new usb": "webusb",
    "USB": "webusb",
    "USB.connect_event": "webusb",
    "usb.connect_event": "webusb",
    "USB.disconnect_event": "webusb",
    "usb.disconnect_event": "webusb",
    "USB.getDevices": "webusb",
    "usb.getdevices": "webusb",
    "USB.requestDevice": "webusb",
    "usb.requestdevice": "webusb",
    "USBAlternateInterface": "webusb",
    "usbalternateinterface": "webusb",
    "USBAlternateInterface.USBAlternateInterface": "webusb",
    "usbalternateinterface.usbalternateinterface": "webusb",
    "new USBAlternateInterface": "webusb",
    "USBAlternateInterface.alternateSetting": "webusb",
    "usbalternateinterface.alternatesetting": "webusb",
    "alternateSetting": "webusb",
    "new alternateSetting": "webusb",
    "USBAlternateInterface.endpoints": "webusb",
    "usbalternateinterface.endpoints": "webusb",
    "endpoints": "webusb",
    "new endpoints": "webusb",
    "USBAlternateInterface.interfaceClass": "webusb",
    "usbalternateinterface.interfaceclass": "webusb",
    "interfaceClass": "webusb",
    "new interfaceClass": "webusb",
    "USBAlternateInterface.interfaceName": "webusb",
    "usbalternateinterface.interfacename": "webusb",
    "interfaceName": "webusb",
    "new interfaceName": "webusb",
    "USBAlternateInterface.interfaceProtocol": "webusb",
    "usbalternateinterface.interfaceprotocol": "webusb",
    "interfaceProtocol": "webusb",
    "new interfaceProtocol": "webusb",
    "USBAlternateInterface.interfaceSubclass": "webusb",
    "usbalternateinterface.interfacesubclass": "webusb",
    "interfaceSubclass": "webusb",
    "new interfaceSubclass": "webusb",
    "USBConfiguration": "webusb",
    "usbconfiguration": "webusb",
    "USBConfiguration.USBConfiguration": "webusb",
    "usbconfiguration.usbconfiguration": "webusb",
    "new USBConfiguration": "webusb",
    "USBConfiguration.configurationName": "webusb",
    "usbconfiguration.configurationname": "webusb",
    "configurationName": "webusb",
    "new configurationName": "webusb",
    "USBConfiguration.configurationValue": "webusb",
    "usbconfiguration.configurationvalue": "webusb",
    "configurationValue": "webusb",
    "new configurationValue": "webusb",
    "USBConfiguration.interfaces": "webusb",
    "usbconfiguration.interfaces": "webusb",
    "interfaces": "webusb",
    "new interfaces": "webusb",
    "USBConnectionEvent": "webusb",
    "usbconnectionevent": "webusb",
    "USBConnectionEvent.USBConnectionEvent": "webusb",
    "usbconnectionevent.usbconnectionevent": "webusb",
    "new USBConnectionEvent": "webusb",
    "USBConnectionEvent.device": "webusb",
    "usbconnectionevent.device": "webusb",
    "USBDevice": "webusb",
    "usbdevice": "webusb",
    "USBDevice.claimInterface": "webusb",
    "usbdevice.claiminterface": "webusb",
    "claimInterface": "webusb",
    "new claimInterface": "webusb",
    "USBDevice.clearHalt": "webusb",
    "usbdevice.clearhalt": "webusb",
    "clearHalt": "webusb",
    "new clearHalt": "webusb",
    "USBDevice.close": "webusb",
    "usbdevice.close": "webusb",
    "USBDevice.configuration": "webusb",
    "usbdevice.configuration": "webusb",
    "configuration": "webusb",
    "new configuration": "webusb",
    "USBDevice.configurations": "webusb",
    "usbdevice.configurations": "webusb",
    "configurations": "webusb",
    "new configurations": "webusb",
    "USBDevice.controlTransferIn": "webusb",
    "usbdevice.controltransferin": "webusb",
    "controlTransferIn": "webusb",
    "new controlTransferIn": "webusb",
    "USBDevice.controlTransferOut": "webusb",
    "usbdevice.controltransferout": "webusb",
    "controlTransferOut": "webusb",
    "new controlTransferOut": "webusb",
    "USBDevice.deviceClass": "webusb",
    "usbdevice.deviceclass": "webusb",
    "deviceClass": "webusb",
    "new deviceClass": "webusb",
    "USBDevice.deviceProtocol": "webusb",
    "usbdevice.deviceprotocol": "webusb",
    "deviceProtocol": "webusb",
    "new deviceProtocol": "webusb",
    "USBDevice.deviceSubclass": "webusb",
    "usbdevice.devicesubclass": "webusb",
    "deviceSubclass": "webusb",
    "new deviceSubclass": "webusb",
    "USBDevice.deviceVersionMajor": "webusb",
    "usbdevice.deviceversionmajor": "webusb",
    "deviceVersionMajor": "webusb",
    "new deviceVersionMajor": "webusb",
    "USBDevice.deviceVersionMinor": "webusb",
    "usbdevice.deviceversionminor": "webusb",
    "deviceVersionMinor": "webusb",
    "new deviceVersionMinor": "webusb",
    "USBDevice.deviceVersionSubminor": "webusb",
    "usbdevice.deviceversionsubminor": "webusb",
    "deviceVersionSubminor": "webusb",
    "new deviceVersionSubminor": "webusb",
    "USBDevice.isochronousTransferIn": "webusb",
    "usbdevice.isochronoustransferin": "webusb",
    "isochronousTransferIn": "webusb",
    "new isochronousTransferIn": "webusb",
    "USBDevice.isochronousTransferOut": "webusb",
    "usbdevice.isochronoustransferout": "webusb",
    "isochronousTransferOut": "webusb",
    "new isochronousTransferOut": "webusb",
    "USBDevice.manufacturerName": "webusb",
    "usbdevice.manufacturername": "webusb",
    "manufacturerName": "webusb",
    "new manufacturerName": "webusb",
    "USBDevice.open": "webusb",
    "usbdevice.open": "webusb",
    "USBDevice.opened": "webusb",
    "usbdevice.opened": "webusb",
    "USBDevice.productId": "webusb",
    "usbdevice.productid": "webusb",
    "USBDevice.productName": "webusb",
    "usbdevice.productname": "webusb",
    "USBDevice.releaseInterface": "webusb",
    "usbdevice.releaseinterface": "webusb",
    "releaseInterface": "webusb",
    "new releaseInterface": "webusb",
    "USBDevice.reset": "webusb",
    "usbdevice.reset": "webusb",
    "USBDevice.selectAlternateInterface": "webusb",
    "usbdevice.selectalternateinterface": "webusb",
    "selectAlternateInterface": "webusb",
    "new selectAlternateInterface": "webusb",
    "USBDevice.selectConfiguration": "webusb",
    "usbdevice.selectconfiguration": "webusb",
    "selectConfiguration": "webusb",
    "new selectConfiguration": "webusb",
    "USBDevice.serialNumber": "webusb",
    "usbdevice.serialnumber": "webusb",
    "USBDevice.transferIn": "webusb",
    "usbdevice.transferin": "webusb",
    "transferIn": "webusb",
    "new transferIn": "webusb",
    "USBDevice.transferOut": "webusb",
    "usbdevice.transferout": "webusb",
    "transferOut": "webusb",
    "new transferOut": "webusb",
    "USBDevice.usbVersionMajor": "webusb",
    "usbdevice.usbversionmajor": "webusb",
    "usbVersionMajor": "webusb",
    "new usbVersionMajor": "webusb",
    "USBDevice.usbVersionMinor": "webusb",
    "usbdevice.usbversionminor": "webusb",
    "usbVersionMinor": "webusb",
    "new usbVersionMinor": "webusb",
    "USBDevice.usbVersionSubminor": "webusb",
    "usbdevice.usbversionsubminor": "webusb",
    "usbVersionSubminor": "webusb",
    "new usbVersionSubminor": "webusb",
    "USBDevice.vendorId": "webusb",
    "usbdevice.vendorid": "webusb",
    "USBEndpoint": "webusb",
    "usbendpoint": "webusb",
    "USBEndpoint.USBEndpoint": "webusb",
    "usbendpoint.usbendpoint": "webusb",
    "new USBEndpoint": "webusb",
    "USBEndpoint.direction": "webusb",
    "usbendpoint.direction": "webusb",
    "USBEndpoint.endpointNumber": "webusb",
    "usbendpoint.endpointnumber": "webusb",
    "endpointNumber": "webusb",
    "new endpointNumber": "webusb",
    "USBEndpoint.packetSize": "webusb",
    "usbendpoint.packetsize": "webusb",
    "packetSize": "webusb",
    "new packetSize": "webusb",
    "USBEndpoint.type": "webusb",
    "usbendpoint.type": "webusb",
    "USBInTransferResult": "webusb",
    "usbintransferresult": "webusb",
    "USBInTransferResult.USBInTransferResult": "webusb",
    "usbintransferresult.usbintransferresult": "webusb",
    "new USBInTransferResult": "webusb",
    "USBInTransferResult.data": "webusb",
    "usbintransferresult.data": "webusb",
    "USBInTransferResult.status": "webusb",
    "usbintransferresult.status": "webusb",
    "USBInterface": "webusb",
    "usbinterface": "webusb",
    "USBInterface.USBInterface": "webusb",
    "usbinterface.usbinterface": "webusb",
    "new USBInterface": "webusb",
    "USBInterface.alternate": "webusb",
    "usbinterface.alternate": "webusb",
    "alternate": "webusb",
    "new alternate": "webusb",
    "USBInterface.alternates": "webusb",
    "usbinterface.alternates": "webusb",
    "alternates": "webusb",
    "new alternates": "webusb",
    "USBInterface.claimed": "webusb",
    "usbinterface.claimed": "webusb",
    "claimed": "webusb",
    "new claimed": "webusb",
    "USBInterface.interfaceNumber": "webusb",
    "usbinterface.interfacenumber": "webusb",
    "interfaceNumber": "webusb",
    "new interfaceNumber": "webusb",
    "USBIsochronousInTransferPacket": "webusb",
    "usbisochronousintransferpacket": "webusb",
    "USBIsochronousInTransferPacket.USBIsochronousInTransferPacket": "webusb",
    "usbisochronousintransferpacket.usbisochronousintransferpacket": "webusb",
    "new USBIsochronousInTransferPacket": "webusb",
    "USBIsochronousInTransferPacket.data": "webusb",
    "usbisochronousintransferpacket.data": "webusb",
    "USBIsochronousInTransferPacket.status": "webusb",
    "usbisochronousintransferpacket.status": "webusb",
    "USBIsochronousInTransferResult": "webusb",
    "usbisochronousintransferresult": "webusb",
    "USBIsochronousInTransferResult.USBIsochronousInTransferResult": "webusb",
    "usbisochronousintransferresult.usbisochronousintransferresult": "webusb",
    "new USBIsochronousInTransferResult": "webusb",
    "USBIsochronousInTransferResult.data": "webusb",
    "usbisochronousintransferresult.data": "webusb",
    "USBIsochronousInTransferResult.packets": "webusb",
    "usbisochronousintransferresult.packets": "webusb",
    "packets": "webusb",
    "new packets": "webusb",
    "USBIsochronousOutTransferPacket": "webusb",
    "usbisochronousouttransferpacket": "webusb",
    "USBIsochronousOutTransferPacket.USBIsochronousOutTransferPacket": "webusb",
    "usbisochronousouttransferpacket.usbisochronousouttransferpacket": "webusb",
    "new USBIsochronousOutTransferPacket": "webusb",
    "USBIsochronousOutTransferPacket.bytesWritten": "webusb",
    "usbisochronousouttransferpacket.byteswritten": "webusb",
    "bytesWritten": "webusb",
    "new bytesWritten": "webusb",
    "USBIsochronousOutTransferPacket.status": "webusb",
    "usbisochronousouttransferpacket.status": "webusb",
    "USBIsochronousOutTransferResult": "webusb",
    "usbisochronousouttransferresult": "webusb",
    "USBIsochronousOutTransferResult.USBIsochronousOutTransferResult": "webusb",
    "usbisochronousouttransferresult.usbisochronousouttransferresult": "webusb",
    "new USBIsochronousOutTransferResult": "webusb",
    "USBIsochronousOutTransferResult.packets": "webusb",
    "usbisochronousouttransferresult.packets": "webusb",
    "USBOutTransferResult": "webusb",
    "usbouttransferresult": "webusb",
    "USBOutTransferResult.USBOutTransferResult": "webusb",
    "usbouttransferresult.usbouttransferresult": "webusb",
    "new USBOutTransferResult": "webusb",
    "USBOutTransferResult.bytesWritten": "webusb",
    "usbouttransferresult.byteswritten": "webusb",
    "USBOutTransferResult.status": "webusb",
    "usbouttransferresult.status": "webusb",
    "VTTCue": "webvtt",
    "vttcue": "webvtt",
    "VTTCue.getCueAsHTML": "webvtt",
    "vttcue.getcueashtml": "webvtt",
    "getCueAsHTML": "webvtt",
    "new getCueAsHTML": "webvtt",
    "VTTCue.text": "webvtt",
    "vttcue.text": "webvtt",
    "VTTCue.lineAlign": "webvtt-cue-alignment",
    "vttcue.linealign": "webvtt-cue-alignment",
    "lineAlign": "webvtt-cue-alignment",
    "new lineAlign": "webvtt-cue-alignment",
    "VTTCue.positionAlign": "webvtt-cue-alignment",
    "vttcue.positionalign": "webvtt-cue-alignment",
    "positionAlign": "webvtt-cue-alignment",
    "new positionAlign": "webvtt-cue-alignment",
    "VTTRegion": "webvtt-regions",
    "vttregion": "webvtt-regions",
    "VTTRegion.VTTRegion": "webvtt-regions",
    "vttregion.vttregion": "webvtt-regions",
    "new VTTRegion": "webvtt-regions",
    "VTTRegion.id": "webvtt-regions",
    "vttregion.id": "webvtt-regions",
    "VTTRegion.regionAnchorX": "webvtt-regions",
    "vttregion.regionanchorx": "webvtt-regions",
    "regionAnchorX": "webvtt-regions",
    "new regionAnchorX": "webvtt-regions",
    "VTTRegion.regionAnchorY": "webvtt-regions",
    "vttregion.regionanchory": "webvtt-regions",
    "regionAnchorY": "webvtt-regions",
    "new regionAnchorY": "webvtt-regions",
    "VTTRegion.scroll": "webvtt-regions",
    "vttregion.scroll": "webvtt-regions",
    "new scroll": "webvtt-regions",
    "VTTRegion.viewportAnchorX": "webvtt-regions",
    "vttregion.viewportanchorx": "webvtt-regions",
    "viewportAnchorX": "webvtt-regions",
    "new viewportAnchorX": "webvtt-regions",
    "VTTRegion.viewportAnchorY": "webvtt-regions",
    "vttregion.viewportanchory": "webvtt-regions",
    "viewportAnchorY": "webvtt-regions",
    "new viewportAnchorY": "webvtt-regions",
    "VTTRegion.width": "webvtt-regions",
    "vttregion.width": "webvtt-regions",
    ":where": "where",
    "::where": "where",
    ":where.forgiving_selector_list": "where",
    "::where.forgiving_selector_list": "where",
    "will-change": "will-change",
    "will": "will-change",
    "will-change.auto": "will-change",
    "will-change.contents": "will-change",
    "will-change.scroll-position": "will-change",
    "will-change.scroll": "will-change"
  },
  "patterns": {
    "css": [
      {
        "regex": "^grid-",
        "feature": "grid"
      },
      {
        "regex": "^flex-",
        "feature": "flexbox"
      },
      {
        "regex": "^transform",
        "feature": "transforms2d"
      },
      {
        "regex": "^animation-",
        "feature": "animations"
      },
      {
        "regex": "^transition-",
        "feature": "transitions"
      }
    ],
    "js": [
      {
        "regex": "^WebGL",
        "feature": "webgl"
      },
      {
        "regex": "^WebRTC",
        "feature": "webrtc"
      },
      {
        "regex": "^Intl\\.",
        "feature": "intl"
      }
    ]
  }
}